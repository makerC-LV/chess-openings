{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/anim.ts","src/api.ts","src/board.ts","src/chessground.ts","src/config.ts","src/drag.ts","src/draw.ts","src/drop.ts","src/events.ts","src/explosion.ts","src/fen.ts","src/index.js","src/premove.ts","src/render.ts","src/state.ts","src/svg.ts","src/types.ts","src/util.ts","src/wrap.ts","node_modules/pegjs/lib/utils/arrays.js","node_modules/pegjs/lib/utils/objects.js","node_modules/pegjs/lib/utils/classes.js","node_modules/pegjs/lib/grammar-error.js","node_modules/pegjs/lib/parser.js","node_modules/pegjs/lib/compiler/visitor.js","node_modules/pegjs/lib/compiler/asts.js","node_modules/pegjs/lib/compiler/passes/report-undefined-rules.js","node_modules/pegjs/lib/compiler/passes/report-duplicate-rules.js","node_modules/pegjs/lib/compiler/passes/report-duplicate-labels.js","node_modules/pegjs/lib/compiler/passes/report-infinite-recursion.js","node_modules/pegjs/lib/compiler/passes/report-infinite-repetition.js","node_modules/pegjs/lib/compiler/passes/remove-proxy-rules.js","node_modules/pegjs/lib/compiler/opcodes.js","node_modules/pegjs/lib/compiler/js.js","node_modules/pegjs/lib/compiler/passes/generate-bytecode.js","node_modules/pegjs/lib/compiler/passes/generate-js.js","node_modules/pegjs/lib/compiler/index.js","node_modules/pegjs/lib/peg.js","node_modules/chess.js/chess.js","utils/pgnutils.js","actions/game-actions.js","components/chessboard.js","games.js","utils/documentutils.js","node_modules/symbol-observable/es/ponyfill.js","node_modules/symbol-observable/es/index.js","node_modules/redux/es/redux.js","store/index.js","utils/showpgn.js","components/practice-controls.js","components/pgnviewer.js","components/fen.js","utils/gameutils.js","views/practice-view.js","../../../../usr/local/lib/node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["arrays","range","start","stop","length","result","Array","i","j","find","array","valueOrPredicate","indexOf","contains","each","iterator","map","pluck","key","e","every","predicate","some","module","exports","objects","keys","object","hasOwnProperty","push","values","clone","defaults","classes","subclass","child","parent","ctor","constructor","prototype","require","GrammarError","message","location","name","Error","captureStackTrace","peg$subclass","peg$SyntaxError","expected","found","buildMessage","DESCRIBE_EXPECTATION_FNS","literal","expectation","literalEscape","text","escapedParts","parts","classEscape","inverted","any","end","other","description","hex","ch","charCodeAt","toString","toUpperCase","s","replace","describeExpectation","type","describeExpected","descriptions","sort","slice","join","describeFound","peg$parse","input","options","peg$FAILED","peg$startRuleFunctions","Grammar","peg$parseGrammar","peg$startRuleFunction","peg$c0","initializer","rules","extractOptional","extractList","peg$c1","code","peg$c2","peg$c3","peg$literalExpectation","peg$c4","displayName","expression","peg$c5","peg$c6","peg$c7","head","tail","alternatives","buildList","peg$c8","peg$c9","elements","peg$c10","peg$c11","peg$c12","label","peg$c13","operator","OPS_TO_PREFIXED_TYPES","peg$c14","peg$c15","peg$c16","peg$c17","peg$c18","peg$c19","peg$c20","OPS_TO_SUFFIXED_TYPES","peg$c21","peg$c22","peg$c23","peg$c24","peg$c25","peg$c26","peg$c27","peg$c28","peg$c29","peg$c30","peg$c31","peg$c32","peg$c33","OPS_TO_SEMANTIC_PREDICATE_TYPES","peg$c34","peg$anyExpectation","peg$c35","peg$otherExpectation","peg$c36","peg$c37","peg$c38","peg$c39","peg$c40","peg$c41","peg$c42","peg$c43","peg$c44","peg$c45","peg$c46","peg$c47","peg$c48","peg$c49","peg$classExpectation","peg$c50","peg$c51","peg$c52","peg$c53","peg$c54","peg$c55","peg$c56","peg$c57","peg$c58","peg$c59","peg$c60","peg$c61","peg$c62","peg$c63","peg$c64","peg$c65","peg$c66","peg$c67","peg$c68","peg$c69","peg$c70","peg$c71","peg$c72","peg$c73","peg$c74","peg$c75","sequence","peg$c76","peg$c77","peg$c78","peg$c79","peg$c80","peg$c81","peg$c82","peg$c83","value","ignoreCase","peg$c84","peg$c85","peg$c86","peg$c87","chars","peg$c88","peg$c89","peg$c90","peg$c91","peg$c92","peg$c93","peg$c94","peg$c95","peg$c96","peg$c97","peg$c98","filterEmptyStrings","peg$c99","peg$c100","peg$c101","begin","error","peg$c102","peg$c103","peg$c104","peg$c105","peg$c106","peg$c107","peg$c108","peg$c109","peg$c110","peg$c111","peg$c112","peg$c113","peg$c114","peg$c115","peg$c116","peg$c117","peg$c118","peg$c119","peg$c120","peg$c121","peg$c122","peg$c123","peg$c124","peg$c125","peg$c126","peg$c127","peg$c128","digits","String","fromCharCode","parseInt","peg$c129","peg$c130","peg$c131","peg$c132","peg$c133","peg$c134","peg$c135","peg$c136","peg$c137","peg$c138","peg$c139","peg$c140","peg$c141","peg$c142","peg$c143","peg$c144","peg$c145","peg$c146","peg$c147","peg$c148","peg$c149","peg$c150","peg$c151","peg$c152","peg$c153","peg$c154","peg$c155","peg$c156","peg$c157","peg$c158","peg$c159","peg$c160","peg$c161","peg$c162","peg$c163","peg$c164","peg$c165","peg$c166","peg$c167","peg$c168","peg$c169","peg$c170","peg$c171","peg$c172","peg$c173","peg$c174","peg$c175","peg$c176","peg$c177","peg$c178","peg$c179","peg$c180","peg$c181","peg$c182","peg$c183","peg$c184","peg$c185","peg$c186","peg$c187","peg$c188","peg$c189","peg$c190","peg$c191","peg$c192","peg$c193","peg$c194","peg$c195","peg$c196","peg$c197","peg$c198","peg$c199","peg$c200","peg$c201","peg$c202","peg$c203","peg$c204","peg$c205","peg$c206","peg$c207","peg$c208","peg$c209","peg$c210","peg$c211","peg$c212","peg$c213","peg$c214","peg$c215","peg$c216","peg$c217","peg$c218","peg$c219","peg$c220","peg$c221","peg$c222","peg$c223","peg$c224","peg$c225","peg$c226","peg$c227","peg$c228","peg$c229","peg$c230","peg$c231","peg$c232","peg$c233","peg$c234","peg$c235","peg$c236","peg$c237","peg$c238","peg$c239","peg$currPos","peg$savedPos","peg$posDetailsCache","line","column","peg$maxFailPos","peg$maxFailExpected","peg$silentFails","peg$result","startRule","substring","peg$computeLocation","peg$buildStructuredError","peg$buildSimpleError","peg$endExpectation","peg$computePosDetails","pos","details","p","startPos","endPos","startPosDetails","endPosDetails","offset","peg$fail","s0","s1","s2","s3","s4","s5","s6","peg$parse__","peg$parseInitializer","peg$parseRule","peg$parseCodeBlock","peg$parseEOS","s7","peg$parseIdentifierName","peg$parseStringLiteral","peg$parseChoiceExpression","peg$parseActionExpression","peg$parseSequenceExpression","peg$parseLabeledExpression","peg$parseIdentifier","peg$parsePrefixedExpression","peg$parsePrefixedOperator","peg$parseSuffixedExpression","peg$parsePrimaryExpression","peg$parseSuffixedOperator","peg$parseLiteralMatcher","peg$parseCharacterClassMatcher","peg$parseAnyMatcher","peg$parseRuleReferenceExpression","peg$parseSemanticPredicateExpression","peg$parseSemanticPredicateOperator","peg$parseSourceCharacter","charAt","peg$parseWhiteSpace","peg$parseZs","peg$parseLineTerminator","test","peg$parseLineTerminatorSequence","substr","peg$parseComment","peg$parseMultiLineComment","peg$parseSingleLineComment","peg$parseMultiLineCommentNoLineTerminator","peg$parseReservedWord","peg$parseIdentifierStart","peg$parseIdentifierPart","peg$parseUnicodeLetter","peg$parseUnicodeEscapeSequence","peg$parseUnicodeCombiningMark","peg$parseNd","peg$parsePc","peg$parseLu","peg$parseLl","peg$parseLt","peg$parseLm","peg$parseLo","peg$parseNl","peg$parseMn","peg$parseMc","peg$parseKeyword","peg$parseFutureReservedWord","peg$parseNullToken","peg$parseBooleanLiteral","peg$parseBreakToken","peg$parseCaseToken","peg$parseCatchToken","peg$parseContinueToken","peg$parseDebuggerToken","peg$parseDefaultToken","peg$parseDeleteToken","peg$parseDoToken","peg$parseElseToken","peg$parseFinallyToken","peg$parseForToken","peg$parseFunctionToken","peg$parseIfToken","peg$parseInstanceofToken","peg$parseInToken","peg$parseNewToken","peg$parseReturnToken","peg$parseSwitchToken","peg$parseThisToken","peg$parseThrowToken","peg$parseTryToken","peg$parseTypeofToken","peg$parseVarToken","peg$parseVoidToken","peg$parseWhileToken","peg$parseWithToken","peg$parseClassToken","peg$parseConstToken","peg$parseEnumToken","peg$parseExportToken","peg$parseExtendsToken","peg$parseImportToken","peg$parseSuperToken","peg$parseTrueToken","peg$parseFalseToken","peg$parseDoubleStringCharacter","peg$parseSingleStringCharacter","peg$parseEscapeSequence","peg$parseLineContinuation","peg$parseClassCharacterRange","peg$parseClassCharacter","peg$parseCharacterEscapeSequence","peg$parseDecimalDigit","peg$parseHexEscapeSequence","peg$parseSingleEscapeCharacter","peg$parseNonEscapeCharacter","peg$parseEscapeCharacter","peg$parseHexDigit","peg$parseCode","peg$parse_","peg$parseEOF","optional","index","list","concat","SyntaxError","parse","visitor","build","functions","visit","node","apply","arguments","visitNop","visitExpression","extraArgs","call","visitChildren","property","DEFAULT_FUNCTIONS","grammar","rule","named","choice","action","labeled","simple_and","simple_not","zero_or_more","one_or_more","group","semantic_and","semantic_not","rule_ref","asts","findRule","ast","r","indexOfRule","alwaysConsumesOnSuccess","consumesTrue","consumesFalse","consumesExpression","consumes","reportUndefinedRules","check","reportDuplicateRules","reportDuplicateLabels","checkExpressionWithClonedEnv","env","alternative","reportInfiniteRecursion","visitedRules","pop","element","reportInfiniteRepetition","removeProxyRules","isProxyRule","replaceRuleRefs","from","to","indices","allowedStartRules","reverse","splice","opcodes","PUSH","PUSH_UNDEFINED","PUSH_NULL","PUSH_FAILED","PUSH_EMPTY_ARRAY","PUSH_CURR_POS","POP","POP_CURR_POS","POP_N","NIP","APPEND","WRAP","TEXT","IF","IF_ERROR","IF_NOT_ERROR","WHILE_NOT_ERROR","MATCH_ANY","MATCH_STRING","MATCH_STRING_IC","MATCH_REGEXP","ACCEPT_N","ACCEPT_STRING","FAIL","LOAD_SAVED_POS","UPDATE_SAVED_POS","CALL","RULE","SILENT_FAILS_ON","SILENT_FAILS_OFF","js","stringEscape","regexpClassEscape","op","generateBytecode","consts","addConst","addFunctionConst","params","buildSequence","buildCondition","condCode","thenCode","elseCode","buildLoop","bodyCode","buildCall","functionIndex","delta","sp","buildSimplePredicate","negative","context","generate","buildSemanticPredicate","buildAppendLoop","expressionCode","bytecode","nameIndex","buildAlternativesCode","emitCall","buildElementsCode","processedCount","stringIndex","expectedIndex","toLowerCase","regexp","regexpIndex","part","generateJS","indent2","indent6","indent10","generateTables","optimize","b","c","generateRuleHeader","ruleNameCode","ruleIndexCode","trace","cache","generateRuleFooter","resultCode","generateInterpreter","generateCondition","cond","argsLength","baseLength","thenLengthCode","elseLengthCode","generateLoop","bodyLengthCode","generateCall","paramsLengthCode","generateRuleFunction","stack","maxSp","exprCode","n","top","compile","bc","ip","compileCondition","argCount","thenLength","elseLength","baseSp","thenSp","elseSp","compileLoop","bodyLength","bodySp","compileCall","paramsLength","eval","generateToplevel","startRuleIndices","startRuleIndex","startRuleFunctions","startRuleFunction","ruleNames","generateWrapper","toplevelCode","generateGeneratedByComment","generateParserObject","generators","bare","commonjs","dependencyVars","dependencies","requires","variable","amd","dependencyIds","id","globals","exportVar","umd","format","compiler","passes","transform","stage","output","peg","VERSION","parser","convertPasses","converted","plugins","config","use","parsepgn","pgn","r1","console","log","game","parseOneGame","baseGame","reset","root","fen","children","played","Set","move_number","moves","convert","cmove","movestr","move","san","addNode","comment","nags","shift","ravs","forEach","rav","load","moveNum","color","addCommentAndNags","deleteNode","promoteNode","unshift","updatePlayedStatus","allChildrenPlayed","add","has","parseMultiple","multipgn","games","newRoot","mergeTrees","node1","node2","child2","matching","filter","findNext","current","GAME_CHANGED","gameChangedAction","engineColor","POSITION_CHANGED","positionChangedAction","PLAYER_MADE_MOVE","playerMadeMoveAction","newCurrent","HIDE_PGN_CHANGED","hidePgnChangedAction","checked","AUTOPLAY_CHANGED","autoPlayChangedAction","HINT_CLICKED","hintClickedAction","BOARD_FLIPPED","boardFlippedAction","init","boardId","nextFunc","store","ground","resizable","events","orig","dest","capturedPiece","onMove","resizeBoard","document","getElementById","subscribe","getState","hint","orientation","window","setTimeout","set","shapes","getHintShapes","setShapes","arr","brush","next","dispatch","boardElem","parentElem","parentNode","rect","getBoundingClientRect","maxw","width","w8","style","height","test_game","budapest_gambit","scotch_gambit","gamemap","configureButton","onClick","addEventListener","copyToClipboard","navigator","clipboard","writeText","then","err","symbolObservablePonyfill","Symbol","observable","self","global","Function","randomString","Math","random","split","ActionTypes","INIT","REPLACE","PROBE_UNKNOWN_ACTION","isPlainObject","obj","proto","Object","getPrototypeOf","createStore","reducer","preloadedState","enhancer","_ref2","undefined","currentReducer","currentState","currentListeners","nextListeners","isDispatching","ensureCanMutateNextListeners","listener","isSubscribed","unsubscribe","listeners","replaceReducer","nextReducer","_ref","outerSubscribe","observer","TypeError","observeState","$$observable","warning","getUndefinedStateErrorMessage","actionType","actionDescription","getUnexpectedStateShapeWarningMessage","inputState","reducers","unexpectedKeyCache","reducerKeys","argumentName","match","unexpectedKeys","assertReducerShape","initialState","combineReducers","finalReducers","finalReducerKeys","shapeAssertionError","combination","state","warningMessage","hasChanged","nextState","_i","_key","previousStateForKey","nextStateForKey","errorMessage","bindActionCreator","actionCreator","bindActionCreators","actionCreators","boundActionCreators","_defineProperty","defineProperty","enumerable","configurable","writable","ownKeys","enumerableOnly","getOwnPropertySymbols","sym","getOwnPropertyDescriptor","_objectSpread2","target","source","getOwnPropertyDescriptors","defineProperties","compose","_len","funcs","arg","reduce","a","applyMiddleware","middlewares","_dispatch","middlewareAPI","chain","middleware","isCrushed","initialStatePractice","currentRoot","hidePGN","autoPlay","emptyTree","initialStateEdit","practiceReducer","editReducer","practiceStore","editStore","displayFormattedPgn","pgndiv","setCurrent","innerHTML","appendElements","currentDiv","nodeId","scrollTop","offsetTop","varDepth","writeNode","isCurrent","appendChild","makeNodeDiv","varDiv","makeVarDiv","addTextChild","div","createElement","classList","createTextNode","firstInVariation","firstAfterVariation","cdiv","onclick","ev","parentDiv","pgnBuffer","getPGNText","writePGN","currentIndent","writeNodeFirst","indent","selectDivId","configureSelect","configureButtons","divId","seldiv","sel","option","event","onSelect","file","fetch","response","pgnDiv","fendiv","isEngineMove","computeNewPosition","localCurrent","triggerEngineMove","makeNextMove","possibleMoves","idx","randomIdx","floor","PControls","PGNView","Fen","Board","OVERLAY_ID","OldModule","bundle","Module","moduleName","hot","data","hotData","_acceptCallbacks","_disposeCallbacks","accept","fn","dispose","checkedAssets","assetsToAccept","isParcelRequire","WebSocket","hostname","protocol","ws","onmessage","JSON","handled","assets","asset","isNew","didAccept","hmrAcceptCheck","parcelRequire","generated","clear","hmrApply","v","hmrAcceptRun","reload","close","onclose","removeErrorOverlay","overlay","createErrorOverlay","body","remove","stackTrace","innerText","getParents","modules","parents","k","d","dep","isArray","deps","cached","cb"],"mappings":"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","file":"practice-view.598ff691.js","sourceRoot":"..","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","import { State } from './state'\nimport * as util from './util'\nimport * as cg from './types'\n\nexport type Mutation<A> = (state: State) => A;\n\n// 0,1 animation goal\n// 2,3 animation current status\nexport type AnimVector = cg.NumberQuad\n\nexport interface AnimVectors {\n  [key: string]: AnimVector\n}\n\nexport interface AnimFadings {\n  [key: string]: cg.Piece\n}\n\nexport interface AnimPlan {\n  anims: AnimVectors;\n  fadings: AnimFadings;\n}\n\nexport interface AnimCurrent {\n  start: DOMHighResTimeStamp;\n  frequency: cg.KHz;\n  plan: AnimPlan;\n}\n\nexport function anim<A>(mutation: Mutation<A>, state: State): A {\n  return state.animation.enabled ? animate(mutation, state) : render(mutation, state);\n}\n\nexport function render<A>(mutation: Mutation<A>, state: State): A {\n  const result = mutation(state);\n  state.dom.redraw();\n  return result;\n}\n\ninterface AnimPiece {\n  key: cg.Key;\n  pos: cg.Pos;\n  piece: cg.Piece;\n}\ninterface AnimPieces {\n  [key: string]: AnimPiece\n}\n\nfunction makePiece(key: cg.Key, piece: cg.Piece): AnimPiece {\n  return {\n    key: key,\n    pos: util.key2pos(key),\n    piece: piece\n  };\n}\n\nfunction closer(piece: AnimPiece, pieces: AnimPiece[]): AnimPiece {\n  return pieces.sort((p1, p2) => {\n    return util.distanceSq(piece.pos, p1.pos) - util.distanceSq(piece.pos, p2.pos);\n  })[0];\n}\n\nfunction computePlan(prevPieces: cg.Pieces, current: State): AnimPlan {\n  const anims: AnimVectors = {},\n  animedOrigs: cg.Key[] = [],\n  fadings: AnimFadings = {},\n  missings: AnimPiece[] = [],\n  news: AnimPiece[] = [],\n  prePieces: AnimPieces = {};\n  let curP: cg.Piece | undefined, preP: AnimPiece | undefined, i: any, vector: cg.NumberPair;\n  for (i in prevPieces) {\n    prePieces[i] = makePiece(i as cg.Key, prevPieces[i]!);\n  }\n  for (const key of util.allKeys) {\n    curP = current.pieces[key];\n    preP = prePieces[key];\n    if (curP) {\n      if (preP) {\n        if (!util.samePiece(curP, preP.piece)) {\n          missings.push(preP);\n          news.push(makePiece(key, curP));\n        }\n      } else news.push(makePiece(key, curP));\n    } else if (preP) missings.push(preP);\n  }\n  news.forEach(newP => {\n    preP = closer(newP, missings.filter(p => util.samePiece(newP.piece, p.piece)));\n    if (preP) {\n      vector = [preP.pos[0] - newP.pos[0], preP.pos[1] - newP.pos[1]];\n      anims[newP.key] = vector.concat(vector) as AnimVector;\n      animedOrigs.push(preP.key);\n    }\n  });\n  missings.forEach(p => {\n    if (!util.containsX(animedOrigs, p.key)) fadings[p.key] = p.piece;\n  });\n\n  return {\n    anims: anims,\n    fadings: fadings\n  };\n}\n\nfunction step(state: State, now: DOMHighResTimeStamp): void {\n  const cur = state.animation.current;\n  if (cur === undefined) { // animation was canceled :(\n    if (!state.dom.destroyed) state.dom.redrawNow();\n    return;\n  }\n  const rest = 1 - (now - cur.start) * cur.frequency;\n  if (rest <= 0) {\n    state.animation.current = undefined;\n    state.dom.redrawNow();\n  } else {\n    const ease = easing(rest);\n    for (let i in cur.plan.anims) {\n      const cfg = cur.plan.anims[i];\n      cfg[2] = cfg[0] * ease;\n      cfg[3] = cfg[1] * ease;\n    }\n    state.dom.redrawNow(true); // optimisation: don't render SVG changes during animations\n    requestAnimationFrame((now = performance.now()) => step(state, now));\n  }\n}\n\nfunction animate<A>(mutation: Mutation<A>, state: State): A {\n  // clone state before mutating it\n  const prevPieces: cg.Pieces = {...state.pieces};\n\n  const result = mutation(state);\n  const plan = computePlan(prevPieces, state);\n  if (!isObjectEmpty(plan.anims) || !isObjectEmpty(plan.fadings)) {\n    const alreadyRunning = state.animation.current && state.animation.current.start;\n    state.animation.current = {\n      start: performance.now(),\n      frequency: 1 / state.animation.duration,\n      plan: plan\n    };\n    if (!alreadyRunning) step(state, performance.now());\n  } else {\n    // don't animate, just render right away\n    state.dom.redraw();\n  }\n  return result;\n}\n\nfunction isObjectEmpty(o: any): boolean {\n  for (let _ in o) return false;\n  return true;\n}\n// https://gist.github.com/gre/1650294\nfunction easing(t: number): number {\n  return t < 0.5 ? 4 * t * t * t : (t - 1) * (2 * t - 2) * (2 * t - 2) + 1;\n}\n","import { State } from './state'\nimport * as board from './board'\nimport { write as fenWrite } from './fen'\nimport { Config, configure } from './config'\nimport { anim, render } from './anim'\nimport { cancel as dragCancel, dragNewPiece } from './drag'\nimport { DrawShape } from './draw'\nimport explosion from './explosion'\nimport * as cg from './types'\n\nexport interface Api {\n\n  // reconfigure the instance. Accepts all config options, except for viewOnly & drawable.visible.\n  // board will be animated accordingly, if animations are enabled.\n  set(config: Config): void;\n\n  // read chessground state; write at your own risks.\n  state: State;\n\n  // get the position as a FEN string (only contains pieces, no flags)\n  // e.g. rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR\n  getFen(): cg.FEN;\n\n  // change the view angle\n  toggleOrientation(): void;\n\n  // perform a move programmatically\n  move(orig: cg.Key, dest: cg.Key): void;\n\n  // add and/or remove arbitrary pieces on the board\n  setPieces(pieces: cg.PiecesDiff): void;\n\n  // click a square programmatically\n  selectSquare(key: cg.Key | null, force?: boolean): void;\n\n  // put a new piece on the board\n  newPiece(piece: cg.Piece, key: cg.Key): void;\n\n  // play the current premove, if any; returns true if premove was played\n  playPremove(): boolean;\n\n  // cancel the current premove, if any\n  cancelPremove(): void;\n\n  // play the current predrop, if any; returns true if premove was played\n  playPredrop(validate: (drop: cg.Drop) => boolean): boolean;\n\n  // cancel the current predrop, if any\n  cancelPredrop(): void;\n\n  // cancel the current move being made\n  cancelMove(): void;\n\n  // cancel current move and prevent further ones\n  stop(): void;\n\n  // make squares explode (atomic chess)\n  explode(keys: cg.Key[]): void;\n\n  // programmatically draw user shapes\n  setShapes(shapes: DrawShape[]): void;\n\n  // programmatically draw auto shapes\n  setAutoShapes(shapes: DrawShape[]): void;\n\n  // square name at this DOM position (like \"e4\")\n  getKeyAtDomPos(pos: cg.NumberPair): cg.Key | undefined;\n\n  // only useful when CSS changes the board width/height ratio (for 3D)\n  redrawAll: cg.Redraw;\n\n  // for crazyhouse and board editors\n  dragNewPiece(piece: cg.Piece, event: cg.MouchEvent, force?: boolean): void;\n\n  // unbinds all events\n  // (important for document-wide events like scroll and mousemove)\n  destroy: cg.Unbind\n}\n\n// see API types and documentations in dts/api.d.ts\nexport function start(state: State, redrawAll: cg.Redraw): Api {\n\n  function toggleOrientation() {\n    board.toggleOrientation(state);\n    redrawAll();\n  };\n\n  return {\n\n    set(config) {\n      if (config.orientation && config.orientation !== state.orientation) toggleOrientation();\n      (config.fen ? anim : render)(state => configure(state, config), state);\n    },\n\n    state,\n\n    getFen: () => fenWrite(state.pieces),\n\n    toggleOrientation,\n\n    setPieces(pieces) {\n      anim(state => board.setPieces(state, pieces), state);\n    },\n\n    selectSquare(key, force) {\n      if (key) anim(state => board.selectSquare(state, key, force), state);\n      else if (state.selected) {\n        board.unselect(state);\n        state.dom.redraw();\n      }\n    },\n\n    move(orig, dest) {\n      anim(state => board.baseMove(state, orig, dest), state);\n    },\n\n    newPiece(piece, key) {\n      anim(state => board.baseNewPiece(state, piece, key), state);\n    },\n\n    playPremove() {\n      if (state.premovable.current) {\n        if (anim(board.playPremove, state)) return true;\n        // if the premove couldn't be played, redraw to clear it up\n        state.dom.redraw();\n      }\n      return false;\n    },\n\n    playPredrop(validate) {\n      if (state.predroppable.current) {\n        const result = board.playPredrop(state, validate);\n        state.dom.redraw();\n        return result;\n      }\n      return false;\n    },\n\n    cancelPremove() {\n      render(board.unsetPremove, state);\n    },\n\n    cancelPredrop() {\n      render(board.unsetPredrop, state);\n    },\n\n    cancelMove() {\n      render(state => { board.cancelMove(state); dragCancel(state); }, state);\n    },\n\n    stop() {\n      render(state => { board.stop(state); dragCancel(state); }, state);\n    },\n\n    explode(keys: cg.Key[]) {\n      explosion(state, keys);\n    },\n\n    setAutoShapes(shapes: DrawShape[]) {\n      render(state => state.drawable.autoShapes = shapes, state);\n    },\n\n    setShapes(shapes: DrawShape[]) {\n      render(state => state.drawable.shapes = shapes, state);\n    },\n\n    getKeyAtDomPos(pos) {\n      return board.getKeyAtDomPos(pos, board.whitePov(state), state.dom.bounds());\n    },\n\n    redrawAll,\n\n    dragNewPiece(piece, event, force) {\n      dragNewPiece(state, piece, event, force)\n    },\n\n    destroy() {\n      board.stop(state);\n      state.dom.unbind && state.dom.unbind();\n      state.dom.destroyed = true;\n    }\n  };\n}\n","import { State } from './state'\nimport { pos2key, key2pos, opposite, containsX } from './util'\nimport premove from './premove'\nimport * as cg from './types'\n\nexport type Callback = (...args: any[]) => void;\n\nexport function callUserFunction(f: Callback | undefined, ...args: any[]): void {\n  if (f) setTimeout(() => f(...args), 1);\n}\n\nexport function toggleOrientation(state: State): void {\n  state.orientation = opposite(state.orientation);\n  state.animation.current =\n  state.draggable.current =\n  state.selected = undefined;\n}\n\nexport function reset(state: State): void {\n  state.lastMove = undefined;\n  unselect(state);\n  unsetPremove(state);\n  unsetPredrop(state);\n}\n\nexport function setPieces(state: State, pieces: cg.PiecesDiff): void {\n  for (let key in pieces) {\n    const piece = pieces[key];\n    if (piece) state.pieces[key] = piece;\n    else delete state.pieces[key];\n  }\n}\n\nexport function setCheck(state: State, color: cg.Color | boolean): void {\n  state.check = undefined;\n  if (color === true) color = state.turnColor;\n  if (color) for (let k in state.pieces) {\n    if (state.pieces[k]!.role === 'king' && state.pieces[k]!.color === color) {\n      state.check = k as cg.Key;\n    }\n  }\n}\n\nfunction setPremove(state: State, orig: cg.Key, dest: cg.Key, meta: cg.SetPremoveMetadata): void {\n  unsetPredrop(state);\n  state.premovable.current = [orig, dest];\n  callUserFunction(state.premovable.events.set, orig, dest, meta);\n}\n\nexport function unsetPremove(state: State): void {\n  if (state.premovable.current) {\n    state.premovable.current = undefined;\n    callUserFunction(state.premovable.events.unset);\n  }\n}\n\nfunction setPredrop(state: State, role: cg.Role, key: cg.Key): void {\n  unsetPremove(state);\n  state.predroppable.current = { role, key };\n  callUserFunction(state.predroppable.events.set, role, key);\n}\n\nexport function unsetPredrop(state: State): void {\n  const pd = state.predroppable;\n  if (pd.current) {\n    pd.current = undefined;\n    callUserFunction(pd.events.unset);\n  }\n}\n\nfunction tryAutoCastle(state: State, orig: cg.Key, dest: cg.Key): boolean {\n  if (!state.autoCastle) return false;\n  const king = state.pieces[orig];\n  if (!king || king.role !== 'king') return false;\n  const origPos = key2pos(orig);\n  if (origPos[0] !== 5) return false;\n  if (origPos[1] !== 1 && origPos[1] !== 8) return false;\n  const destPos = key2pos(dest);\n  let oldRookPos, newRookPos, newKingPos;\n  if (destPos[0] === 7 || destPos[0] === 8) {\n    oldRookPos = pos2key([8, origPos[1]]);\n    newRookPos = pos2key([6, origPos[1]]);\n    newKingPos = pos2key([7, origPos[1]]);\n  } else if (destPos[0] === 3 || destPos[0] === 1) {\n    oldRookPos = pos2key([1, origPos[1]]);\n    newRookPos = pos2key([4, origPos[1]]);\n    newKingPos = pos2key([3, origPos[1]]);\n  } else return false;\n\n  const rook = state.pieces[oldRookPos];\n  if (!rook || rook.role !== 'rook') return false;\n\n  delete state.pieces[orig];\n  delete state.pieces[oldRookPos];\n\n  state.pieces[newKingPos] = king\n  state.pieces[newRookPos] = rook;\n  return true;\n}\n\nexport function baseMove(state: State, orig: cg.Key, dest: cg.Key): cg.Piece | boolean {\n  const origPiece = state.pieces[orig], destPiece = state.pieces[dest];\n  if (orig === dest || !origPiece) return false;\n  const captured = (destPiece && destPiece.color !== origPiece.color) ? destPiece : undefined;\n  if (dest == state.selected) unselect(state);\n  callUserFunction(state.events.move, orig, dest, captured);\n  if (!tryAutoCastle(state, orig, dest)) {\n    state.pieces[dest] = origPiece;\n    delete state.pieces[orig];\n  }\n  state.lastMove = [orig, dest];\n  state.check = undefined;\n  callUserFunction(state.events.change);\n  return captured || true;\n}\n\nexport function baseNewPiece(state: State, piece: cg.Piece, key: cg.Key, force?: boolean): boolean {\n  if (state.pieces[key]) {\n    if (force) delete state.pieces[key];\n    else return false;\n  }\n  callUserFunction(state.events.dropNewPiece, piece, key);\n  state.pieces[key] = piece;\n  state.lastMove = [key];\n  state.check = undefined;\n  callUserFunction(state.events.change);\n  state.movable.dests = undefined;\n  state.turnColor = opposite(state.turnColor);\n  return true;\n}\n\nfunction baseUserMove(state: State, orig: cg.Key, dest: cg.Key): cg.Piece | boolean {\n  const result = baseMove(state, orig, dest);\n  if (result) {\n    state.movable.dests = undefined;\n    state.turnColor = opposite(state.turnColor);\n    state.animation.current = undefined;\n  }\n  return result;\n}\n\nexport function userMove(state: State, orig: cg.Key, dest: cg.Key): boolean {\n  if (canMove(state, orig, dest)) {\n    const result = baseUserMove(state, orig, dest);\n    if (result) {\n      const holdTime = state.hold.stop();\n      unselect(state);\n      const metadata: cg.MoveMetadata = {\n        premove: false,\n        ctrlKey: state.stats.ctrlKey,\n        holdTime\n      };\n      if (result !== true) metadata.captured = result;\n      callUserFunction(state.movable.events.after, orig, dest, metadata);\n      return true;\n    }\n  } else if (canPremove(state, orig, dest)) {\n    setPremove(state, orig, dest, {\n      ctrlKey: state.stats.ctrlKey\n    });\n    unselect(state);\n    return true;\n  }\n  unselect(state);\n  return false;\n}\n\nexport function dropNewPiece(state: State, orig: cg.Key, dest: cg.Key, force?: boolean): void {\n  if (canDrop(state, orig, dest) || force) {\n    const piece = state.pieces[orig]!;\n    delete state.pieces[orig];\n    baseNewPiece(state, piece, dest, force);\n    callUserFunction(state.movable.events.afterNewPiece, piece.role, dest, {\n      predrop: false\n    });\n  } else if (canPredrop(state, orig, dest)) {\n    setPredrop(state, state.pieces[orig]!.role, dest);\n  } else {\n    unsetPremove(state);\n    unsetPredrop(state);\n  }\n  delete state.pieces[orig];\n  unselect(state);\n}\n\nexport function selectSquare(state: State, key: cg.Key, force?: boolean): void {\n  callUserFunction(state.events.select, key);\n  if (state.selected) {\n    if (state.selected === key && !state.draggable.enabled) {\n      unselect(state);\n      state.hold.cancel();\n      return;\n    } else if ((state.selectable.enabled || force) && state.selected !== key) {\n      if (userMove(state, state.selected, key)) {\n        state.stats.dragged = false;\n        return;\n      }\n    }\n  }\n  if (isMovable(state, key) || isPremovable(state, key)) {\n    setSelected(state, key);\n    state.hold.start();\n  }\n}\n\nexport function setSelected(state: State, key: cg.Key): void {\n  state.selected = key;\n  if (isPremovable(state, key)) {\n    state.premovable.dests = premove(state.pieces, key, state.premovable.castle);\n  }\n  else state.premovable.dests = undefined;\n}\n\nexport function unselect(state: State): void {\n  state.selected = undefined;\n  state.premovable.dests = undefined;\n  state.hold.cancel();\n}\n\nfunction isMovable(state: State, orig: cg.Key): boolean {\n  const piece = state.pieces[orig];\n  return !!piece && (\n    state.movable.color === 'both' || (\n      state.movable.color === piece.color &&\n        state.turnColor === piece.color\n    ));\n}\n\nexport function canMove(state: State, orig: cg.Key, dest: cg.Key): boolean {\n  return orig !== dest && isMovable(state, orig) && (\n    state.movable.free || (!!state.movable.dests && containsX(state.movable.dests[orig], dest))\n  );\n}\n\nfunction canDrop(state: State, orig: cg.Key, dest: cg.Key): boolean {\n  const piece = state.pieces[orig];\n  return !!piece && dest && (orig === dest || !state.pieces[dest]) && (\n    state.movable.color === 'both' || (\n      state.movable.color === piece.color &&\n        state.turnColor === piece.color\n    ));\n}\n\n\nfunction isPremovable(state: State, orig: cg.Key): boolean {\n  const piece = state.pieces[orig];\n  return !!piece && state.premovable.enabled &&\n  state.movable.color === piece.color &&\n    state.turnColor !== piece.color;\n}\n\nfunction canPremove(state: State, orig: cg.Key, dest: cg.Key): boolean {\n  return orig !== dest &&\n  isPremovable(state, orig) &&\n  containsX(premove(state.pieces, orig, state.premovable.castle), dest);\n}\n\nfunction canPredrop(state: State, orig: cg.Key, dest: cg.Key): boolean {\n  const piece = state.pieces[orig];\n  const destPiece = state.pieces[dest];\n  return !!piece && dest &&\n  (!destPiece || destPiece.color !== state.movable.color) &&\n  state.predroppable.enabled &&\n  (piece.role !== 'pawn' || (dest[1] !== '1' && dest[1] !== '8')) &&\n  state.movable.color === piece.color &&\n    state.turnColor !== piece.color;\n}\n\nexport function isDraggable(state: State, orig: cg.Key): boolean {\n  const piece = state.pieces[orig];\n  return !!piece && state.draggable.enabled && (\n    state.movable.color === 'both' || (\n      state.movable.color === piece.color && (\n        state.turnColor === piece.color || state.premovable.enabled\n      )\n    )\n  );\n}\n\nexport function playPremove(state: State): boolean {\n  const move = state.premovable.current;\n  if (!move) return false;\n  const orig = move[0], dest = move[1];\n  let success = false;\n  if (canMove(state, orig, dest)) {\n    const result = baseUserMove(state, orig, dest);\n    if (result) {\n      const metadata: cg.MoveMetadata = { premove: true };\n      if (result !== true) metadata.captured = result;\n      callUserFunction(state.movable.events.after, orig, dest, metadata);\n      success = true;\n    }\n  }\n  unsetPremove(state);\n  return success;\n}\n\nexport function playPredrop(state: State, validate: (drop: cg.Drop) => boolean): boolean {\n  let drop = state.predroppable.current,\n  success = false;\n  if (!drop) return false;\n  if (validate(drop)) {\n    const piece = {\n      role: drop.role,\n      color: state.movable.color\n    } as cg.Piece;\n    if (baseNewPiece(state, piece, drop.key)) {\n      callUserFunction(state.movable.events.afterNewPiece, drop.role, drop.key, {\n        predrop: true\n      });\n      success = true;\n    }\n  }\n  unsetPredrop(state);\n  return success;\n}\n\nexport function cancelMove(state: State): void {\n  unsetPremove(state);\n  unsetPredrop(state);\n  unselect(state);\n}\n\nexport function stop(state: State): void {\n  state.movable.color =\n  state.movable.dests =\n  state.animation.current = undefined;\n  cancelMove(state);\n}\n\nexport function getKeyAtDomPos(pos: cg.NumberPair, asWhite: boolean, bounds: ClientRect): cg.Key | undefined {\n  let file = Math.ceil(8 * ((pos[0] - bounds.left) / bounds.width));\n  if (!asWhite) file = 9 - file;\n  let rank = Math.ceil(8 - (8 * ((pos[1] - bounds.top) / bounds.height)));\n  if (!asWhite) rank = 9 - rank;\n  return (file > 0 && file < 9 && rank > 0 && rank < 9) ? pos2key([file, rank]) : undefined;\n}\n\nexport function whitePov(s: State): boolean {\n  return s.orientation === 'white';\n}\n","import { Api, start } from './api'\nimport { Config, configure } from './config'\nimport { State, defaults } from './state'\n\nimport renderWrap from './wrap';\nimport * as events from './events'\nimport render from './render';\nimport * as svg from './svg';\nimport * as util from './util';\n\nexport function Chessground(element: HTMLElement, config?: Config): Api {\n\n  const state = defaults() as State;\n\n  configure(state, config || {});\n\n  function redrawAll() {\n    let prevUnbind = state.dom && state.dom.unbind;\n    // compute bounds from existing board element if possible\n    // this allows non-square boards from CSS to be handled (for 3D)\n    const relative = state.viewOnly && !state.drawable.visible,\n    elements = renderWrap(element, state, relative),\n    bounds = util.memo(() => elements.board.getBoundingClientRect()),\n    redrawNow = (skipSvg?: boolean) => {\n      render(state);\n      if (!skipSvg && elements.svg) svg.renderSvg(state, elements.svg);\n    };\n    state.dom = {\n      elements,\n      bounds,\n      redraw: debounceRedraw(redrawNow),\n      redrawNow,\n      unbind: prevUnbind,\n      relative\n    };\n    state.drawable.prevSvgHash = '';\n    redrawNow(false);\n    events.bindBoard(state);\n    if (!prevUnbind) state.dom.unbind = events.bindDocument(state, redrawAll);\n    state.events.insert && state.events.insert(elements);\n  }\n  redrawAll();\n\n  return start(state, redrawAll);\n};\n\nfunction debounceRedraw(redrawNow: (skipSvg?: boolean) => void): () => void {\n  let redrawing = false;\n  return () => {\n    if (redrawing) return;\n    redrawing = true;\n    requestAnimationFrame(() => {\n      redrawNow();\n      redrawing = false;\n    });\n  };\n}\n","import { State } from './state'\nimport { setCheck, setSelected } from './board'\nimport { read as fenRead } from './fen'\nimport { DrawShape, DrawBrush } from './draw'\nimport * as cg from './types'\n\nexport interface Config {\n  fen?: cg.FEN; // chess position in Forsyth notation\n  orientation?: cg.Color; // board orientation. white | black\n  turnColor?: cg.Color; // turn to play. white | black\n  check?: cg.Color | boolean; // true for current color, false to unset\n  lastMove?: cg.Key[]; // squares part of the last move [\"c3\", \"c4\"]\n  selected?: cg.Key; // square currently selected \"a1\"\n  coordinates?: boolean; // include coords attributes\n  autoCastle?: boolean; // immediately complete the castle by moving the rook after king move\n  viewOnly?: boolean; // don't bind events: the user will never be able to move pieces around\n  disableContextMenu?: boolean; // because who needs a context menu on a chessboard\n  resizable?: boolean; // listens to chessground.resize on document.body to clear bounds cache\n  addPieceZIndex?: boolean; // adds z-index values to pieces (for 3D)\n  // pieceKey: boolean; // add a data-key attribute to piece elements\n  highlight?: {\n    lastMove?: boolean; // add last-move class to squares\n    check?: boolean; // add check class to squares\n  };\n  animation?: {\n    enabled?: boolean;\n    duration?: number;\n  };\n  movable?: {\n    free?: boolean; // all moves are valid - board editor\n    color?: cg.Color | 'both'; // color that can move. white | black | both | undefined\n    dests?: {\n      [key: string]: cg.Key[]\n    }; // valid moves. {\"a2\" [\"a3\" \"a4\"] \"b1\" [\"a3\" \"c3\"]}\n    showDests?: boolean; // whether to add the move-dest class on squares\n    events?: {\n      after?: (orig: cg.Key, dest: cg.Key, metadata: cg.MoveMetadata) => void; // called after the move has been played\n      afterNewPiece?: (role: cg.Role, key: cg.Key, metadata: cg.MoveMetadata) => void; // called after a new piece is dropped on the board\n    };\n    rookCastle?: boolean // castle by moving the king to the rook\n  };\n  premovable?: {\n    enabled?: boolean; // allow premoves for color that can not move\n    showDests?: boolean; // whether to add the premove-dest class on squares\n    castle?: boolean; // whether to allow king castle premoves\n    dests?: cg.Key[]; // premove destinations for the current selection\n    events?: {\n      set?: (orig: cg.Key, dest: cg.Key, metadata?: cg.SetPremoveMetadata) => void; // called after the premove has been set\n      unset?: () => void;  // called after the premove has been unset\n    }\n  };\n  predroppable?: {\n    enabled?: boolean; // allow predrops for color that can not move\n    events?: {\n      set?: (role: cg.Role, key: cg.Key) => void; // called after the predrop has been set\n      unset?: () => void; // called after the predrop has been unset\n    }\n  };\n  draggable?: {\n    enabled?: boolean; // allow moves & premoves to use drag'n drop\n    distance?: number; // minimum distance to initiate a drag; in pixels\n    autoDistance?: boolean; // lets chessground set distance to zero when user drags pieces\n    centerPiece?: boolean; // center the piece on cursor at drag start\n    showGhost?: boolean; // show ghost of piece being dragged\n    deleteOnDropOff?: boolean; // delete a piece when it is dropped off the board\n  };\n  selectable?: {\n    // disable to enforce dragging over click-click move\n    enabled?: boolean\n  };\n  events?: {\n    change?: () => void; // called after the situation changes on the board\n    // called after a piece has been moved.\n    // capturedPiece is undefined or like {color: 'white'; 'role': 'queen'}\n    move?: (orig: cg.Key, dest: cg.Key, capturedPiece?: cg.Piece) => void;\n    dropNewPiece?: (piece: cg.Piece, key: cg.Key) => void;\n    select?: (key: cg.Key) => void; // called when a square is selected\n    insert?: (elements: cg.Elements) => void; // when the board DOM has been (re)inserted\n  };\n  drawable?: {\n    enabled?: boolean; // can draw\n    visible?: boolean; // can view\n    eraseOnClick?: boolean;\n    shapes?: DrawShape[];\n    autoShapes?: DrawShape[];\n    brushes?: DrawBrush[];\n    pieces?: {\n      baseUrl?: string;\n    }\n  }\n}\n\nexport function configure(state: State, config: Config) {\n\n  // don't merge destinations. Just override.\n  if (config.movable && config.movable.dests) state.movable.dests = undefined;\n\n  merge(state, config);\n\n  // if a fen was provided, replace the pieces\n  if (config.fen) {\n    state.pieces = fenRead(config.fen);\n    state.drawable.shapes = [];\n  }\n\n  // apply config values that could be undefined yet meaningful\n  if (config.hasOwnProperty('check')) setCheck(state, config.check || false);\n  if (config.hasOwnProperty('lastMove') && !config.lastMove) state.lastMove = undefined;\n  // in case of ZH drop last move, there's a single square.\n  // if the previous last move had two squares,\n  // the merge algorithm will incorrectly keep the second square.\n  else if (config.lastMove) state.lastMove = config.lastMove;\n\n  // fix move/premove dests\n  if (state.selected) setSelected(state, state.selected);\n\n  // no need for such short animations\n  if (!state.animation.duration || state.animation.duration < 100) state.animation.enabled = false;\n\n  if (!state.movable.rookCastle && state.movable.dests) {\n    const rank = state.movable.color === 'white' ? 1 : 8,\n    kingStartPos = 'e' + rank,\n    dests = state.movable.dests[kingStartPos],\n    king = state.pieces[kingStartPos];\n    if (!dests || !king || king.role !== 'king') return;\n    state.movable.dests[kingStartPos] = dests.filter(d =>\n      !((d === 'a' + rank) && dests.indexOf('c' + rank as cg.Key) !== -1) &&\n        !((d === 'h' + rank) && dests.indexOf('g' + rank as cg.Key) !== -1)\n    );\n  }\n};\n\nfunction merge(base: any, extend: any) {\n  for (let key in extend) {\n    if (isObject(base[key]) && isObject(extend[key])) merge(base[key], extend[key]);\n    else base[key] = extend[key];\n  }\n}\n\nfunction isObject(o: any): boolean {\n  return typeof o === 'object';\n}\n","import { State } from './state'\nimport * as board from './board'\nimport * as util from './util'\nimport { clear as drawClear } from './draw'\nimport * as cg from './types'\nimport { anim } from './anim'\n\nexport interface DragCurrent {\n  orig: cg.Key; // orig key of dragging piece\n  origPos: cg.Pos;\n  piece: cg.Piece;\n  rel: cg.NumberPair; // x; y of the piece at original position\n  epos: cg.NumberPair; // initial event position\n  pos: cg.NumberPair; // relative current position\n  dec: cg.NumberPair; // piece center decay\n  started: boolean; // whether the drag has started; as per the distance setting\n  element: cg.PieceNode | (() => cg.PieceNode | undefined);\n  newPiece?: boolean; // it it a new piece from outside the board\n  force?: boolean; // can the new piece replace an existing one (editor)\n  previouslySelected?: cg.Key;\n  originTarget: EventTarget | null;\n}\n\nexport function start(s: State, e: cg.MouchEvent): void {\n  if (e.button !== undefined && e.button !== 0) return; // only touch or left click\n  if (e.touches && e.touches.length > 1) return; // support one finger touch only\n  const bounds = s.dom.bounds(),\n  position = util.eventPosition(e) as cg.NumberPair,\n  orig = board.getKeyAtDomPos(position, board.whitePov(s), bounds);\n  if (!orig) return;\n  const piece = s.pieces[orig];\n  const previouslySelected = s.selected;\n  if (!previouslySelected && s.drawable.enabled && (\n    s.drawable.eraseOnClick || (!piece || piece.color !== s.turnColor)\n  )) drawClear(s);\n  // Prevent touch scroll and create no corresponding mouse event, if there\n  // is an intent to interact with the board. If no color is movable\n  // (and the board is not for viewing only), touches are likely intended to\n  // select squares.\n  if (e.cancelable !== false &&\n      (!e.touches || !s.movable.color || piece || previouslySelected || pieceCloseTo(s, position)))\n       e.preventDefault();\n  const hadPremove = !!s.premovable.current;\n  const hadPredrop = !!s.predroppable.current;\n  s.stats.ctrlKey = e.ctrlKey;\n  if (s.selected && board.canMove(s, s.selected, orig)) {\n    anim(state => board.selectSquare(state, orig), s);\n  } else {\n    board.selectSquare(s, orig);\n  }\n  const stillSelected = s.selected === orig;\n  const element = pieceElementByKey(s, orig);\n  if (piece && element && stillSelected && board.isDraggable(s, orig)) {\n    const squareBounds = computeSquareBounds(orig, board.whitePov(s), bounds);\n    s.draggable.current = {\n      orig,\n      origPos: util.key2pos(orig),\n      piece,\n      rel: position,\n      epos: position,\n      pos: [0, 0],\n      dec: s.draggable.centerPiece ? [\n        position[0] - (squareBounds.left + squareBounds.width / 2),\n        position[1] - (squareBounds.top + squareBounds.height / 2)\n      ] : [0, 0],\n      started: s.draggable.autoDistance && s.stats.dragged,\n      element,\n      previouslySelected,\n      originTarget: e.target\n    };\n    element.cgDragging = true;\n    element.classList.add('dragging');\n    // place ghost\n    const ghost = s.dom.elements.ghost;\n    if (ghost) {\n      ghost.className = `ghost ${piece.color} ${piece.role}`;\n      util.translateAbs(ghost, util.posToTranslateAbs(bounds)(util.key2pos(orig), board.whitePov(s)));\n      util.setVisible(ghost, true);\n    }\n    processDrag(s);\n  } else {\n    if (hadPremove) board.unsetPremove(s);\n    if (hadPredrop) board.unsetPredrop(s);\n  }\n  s.dom.redraw();\n}\n\nexport function pieceCloseTo(s: State, pos: cg.NumberPair): boolean {\n  const asWhite = board.whitePov(s),\n  bounds = s.dom.bounds(),\n  radiusSq = Math.pow(bounds.width / 8, 2);\n  for (let key in s.pieces) {\n    const squareBounds = computeSquareBounds(key as cg.Key, asWhite, bounds),\n    center: cg.NumberPair = [\n      squareBounds.left + squareBounds.width / 2,\n      squareBounds.top + squareBounds.height / 2\n    ];\n    if (util.distanceSq(center, pos) <= radiusSq) return true;\n  }\n  return false;\n}\n\nexport function dragNewPiece(s: State, piece: cg.Piece, e: cg.MouchEvent, force?: boolean): void {\n\n  const key: cg.Key = 'a0';\n\n  s.pieces[key] = piece;\n\n  s.dom.redraw();\n\n  const position = util.eventPosition(e) as cg.NumberPair,\n  asWhite = board.whitePov(s),\n  bounds = s.dom.bounds(),\n  squareBounds = computeSquareBounds(key, asWhite, bounds);\n\n  const rel: cg.NumberPair = [\n    (asWhite ? 0 : 7) * squareBounds.width + bounds.left,\n    (asWhite ? 8 : -1) * squareBounds.height + bounds.top\n  ];\n\n  s.draggable.current = {\n    orig: key,\n    origPos: util.key2pos(key),\n    piece,\n    rel,\n    epos: position,\n    pos: [position[0] - rel[0], position[1] - rel[1]],\n    dec: [-squareBounds.width / 2, -squareBounds.height / 2],\n    started: true,\n    element: () => pieceElementByKey(s, key),\n    originTarget: e.target,\n    newPiece: true,\n    force: !!force\n  };\n  processDrag(s);\n}\n\nfunction processDrag(s: State): void {\n  requestAnimationFrame(() => {\n    const cur = s.draggable.current;\n    if (!cur) return;\n    // cancel animations while dragging\n    if (s.animation.current && s.animation.current.plan.anims[cur.orig]) s.animation.current = undefined;\n    // if moving piece is gone, cancel\n    const origPiece = s.pieces[cur.orig];\n    if (!origPiece || !util.samePiece(origPiece, cur.piece)) cancel(s);\n    else {\n      if (!cur.started && util.distanceSq(cur.epos, cur.rel) >= Math.pow(s.draggable.distance, 2)) cur.started = true;\n      if (cur.started) {\n\n        // support lazy elements\n        if (typeof cur.element === 'function') {\n          const found = cur.element();\n          if (!found) return;\n          found.cgDragging = true;\n          found.classList.add('dragging');\n          cur.element = found;\n        }\n\n        cur.pos = [\n          cur.epos[0] - cur.rel[0],\n          cur.epos[1] - cur.rel[1]\n        ];\n\n        // move piece\n        const translation = util.posToTranslateAbs(s.dom.bounds())(cur.origPos, board.whitePov(s));\n        translation[0] += cur.pos[0] + cur.dec[0];\n        translation[1] += cur.pos[1] + cur.dec[1];\n        util.translateAbs(cur.element, translation);\n      }\n    }\n    processDrag(s);\n  });\n}\n\nexport function move(s: State, e: cg.MouchEvent): void {\n  // support one finger touch only\n  if (s.draggable.current && (!e.touches || e.touches.length < 2)) {\n    s.draggable.current.epos = util.eventPosition(e) as cg.NumberPair;\n  }\n}\n\nexport function end(s: State, e: cg.MouchEvent): void {\n  const cur = s.draggable.current;\n  if (!cur) return;\n  // create no corresponding mouse event\n  if (e.type === 'touchend' && e.cancelable !== false) e.preventDefault();\n  // comparing with the origin target is an easy way to test that the end event\n  // has the same touch origin\n  if (e.type === 'touchend' && cur && cur.originTarget !== e.target && !cur.newPiece) {\n    s.draggable.current = undefined;\n    return;\n  }\n  board.unsetPremove(s);\n  board.unsetPredrop(s);\n  // touchend has no position; so use the last touchmove position instead\n  const eventPos: cg.NumberPair = util.eventPosition(e) || cur.epos;\n  const dest = board.getKeyAtDomPos(eventPos, board.whitePov(s), s.dom.bounds());\n  if (dest && cur.started && cur.orig !== dest) {\n    if (cur.newPiece) board.dropNewPiece(s, cur.orig, dest, cur.force);\n    else {\n      s.stats.ctrlKey = e.ctrlKey;\n      if (board.userMove(s, cur.orig, dest)) s.stats.dragged = true;\n    }\n  } else if (cur.newPiece) {\n    delete s.pieces[cur.orig];\n  } else if (s.draggable.deleteOnDropOff && !dest) {\n    delete s.pieces[cur.orig];\n    board.callUserFunction(s.events.change);\n  }\n  if (cur && cur.orig === cur.previouslySelected && (cur.orig === dest || !dest))\n    board.unselect(s);\n  else if (!s.selectable.enabled) board.unselect(s);\n\n  removeDragElements(s);\n\n  s.draggable.current = undefined;\n  s.dom.redraw();\n}\n\nexport function cancel(s: State): void {\n  const cur = s.draggable.current;\n  if (cur) {\n    if (cur.newPiece) delete s.pieces[cur.orig];\n    s.draggable.current = undefined;\n    board.unselect(s);\n    removeDragElements(s);\n    s.dom.redraw();\n  }\n}\n\nfunction removeDragElements(s: State) {\n  const e = s.dom.elements;\n  if (e.ghost) util.setVisible(e.ghost, false);\n}\n\nfunction computeSquareBounds(key: cg.Key, asWhite: boolean, bounds: ClientRect) {\n  const pos = util.key2pos(key);\n  if (!asWhite) {\n    pos[0] = 9 - pos[0];\n    pos[1] = 9 - pos[1];\n  }\n  return {\n    left: bounds.left + bounds.width * (pos[0] - 1) / 8,\n    top: bounds.top + bounds.height * (8 - pos[1]) / 8,\n    width: bounds.width / 8,\n    height: bounds.height / 8\n  };\n}\n\nfunction pieceElementByKey(s: State, key: cg.Key): cg.PieceNode | undefined {\n  let el = s.dom.elements.board.firstChild as cg.PieceNode;\n  while (el) {\n    if (el.cgKey === key && el.tagName === 'PIECE') return el;\n    el = el.nextSibling as cg.PieceNode;\n  }\n  return undefined;\n}\n","import { State } from './state'\nimport { unselect, cancelMove, getKeyAtDomPos, whitePov } from './board'\nimport { eventPosition, isRightButton } from './util'\nimport * as cg from './types'\n\nexport interface DrawShape {\n  orig: cg.Key;\n  dest?: cg.Key;\n  brush: string;\n  modifiers?: DrawModifiers;\n  piece?: DrawShapePiece;\n}\n\nexport interface DrawShapePiece {\n  role: cg.Role;\n  color: cg.Color;\n  scale?: number;\n}\n\nexport interface DrawBrush {\n  key: string;\n  color: string;\n  opacity: number;\n  lineWidth: number\n}\n\nexport interface DrawBrushes {\n  [name: string]: DrawBrush;\n}\n\nexport interface DrawModifiers {\n  lineWidth?: number;\n}\n\nexport interface Drawable {\n  enabled: boolean; // can draw\n  visible: boolean; // can view\n  eraseOnClick: boolean;\n  onChange?: (shapes: DrawShape[]) => void;\n  shapes: DrawShape[]; // user shapes\n  autoShapes: DrawShape[]; // computer shapes\n  current?: DrawCurrent;\n  brushes: DrawBrushes;\n  // drawable SVG pieces; used for crazyhouse drop\n  pieces: {\n    baseUrl: string\n  },\n  prevSvgHash: string\n}\n\nexport interface DrawCurrent {\n  orig: cg.Key; // orig key of drawing\n  dest?: cg.Key; // shape dest, or undefined for circle\n  mouseSq?: cg.Key; // square being moused over\n  pos: cg.NumberPair; // relative current position\n  brush: string; // brush name for shape\n}\n\nconst brushes = ['green', 'red', 'blue', 'yellow'];\n\nexport function start(state: State, e: cg.MouchEvent): void {\n  if (e.touches && e.touches.length > 1) return; // support one finger touch only\n  e.stopPropagation();\n  e.preventDefault();\n  e.ctrlKey ? unselect(state) : cancelMove(state);\n  const pos = eventPosition(e) as cg.NumberPair,\n  orig = getKeyAtDomPos(pos, whitePov(state), state.dom.bounds());\n  if (!orig) return;\n  state.drawable.current = {\n    orig,\n    pos,\n    brush: eventBrush(e)\n  };\n  processDraw(state);\n}\n\nexport function processDraw(state: State): void {\n  requestAnimationFrame(() => {\n    const cur = state.drawable.current;\n    if (cur) {\n      const mouseSq = getKeyAtDomPos(cur.pos, whitePov(state), state.dom.bounds());\n      if (mouseSq !== cur.mouseSq) {\n        cur.mouseSq = mouseSq;\n        cur.dest = mouseSq !== cur.orig ? mouseSq : undefined;\n        state.dom.redrawNow();\n      }\n      processDraw(state);\n    }\n  });\n}\n\nexport function move(state: State, e: cg.MouchEvent): void {\n  if (state.drawable.current) state.drawable.current.pos = eventPosition(e) as cg.NumberPair;\n}\n\nexport function end(state: State): void {\n  const cur = state.drawable.current;\n  if (cur) {\n    if (cur.mouseSq) addShape(state.drawable, cur);\n    cancel(state);\n  }\n}\n\nexport function cancel(state: State): void {\n  if (state.drawable.current) {\n    state.drawable.current = undefined;\n    state.dom.redraw();\n  }\n}\n\nexport function clear(state: State): void {\n  if (state.drawable.shapes.length) {\n    state.drawable.shapes = [];\n    state.dom.redraw();\n    onChange(state.drawable);\n  }\n}\n\nfunction eventBrush(e: cg.MouchEvent): string {\n  return brushes[((e.shiftKey || e.ctrlKey) && isRightButton(e) ? 1 : 0) + (e.altKey ? 2 : 0)];\n}\n\nfunction addShape(drawable: Drawable, cur: DrawCurrent): void {\n  const sameShape = (s: DrawShape) => s.orig === cur.orig && s.dest === cur.dest;\n  const similar = drawable.shapes.filter(sameShape)[0];\n  if (similar) drawable.shapes = drawable.shapes.filter(s => !sameShape(s));\n  if (!similar || similar.brush !== cur.brush) drawable.shapes.push(cur);\n  onChange(drawable);\n}\n\nfunction onChange(drawable: Drawable): void {\n  if (drawable.onChange) drawable.onChange(drawable.shapes);\n}\n","import { State } from './state'\nimport * as cg from './types'\nimport * as board from './board'\nimport * as util from './util'\nimport { cancel as cancelDrag } from './drag'\n\nexport function setDropMode(s: State, piece?: cg.Piece): void {\n  s.dropmode = {\n    active: true,\n    piece\n  };\n  cancelDrag(s);\n}\n\nexport function cancelDropMode(s: State): void {\n  s.dropmode = {\n    active: false\n  };\n}\n\nexport function drop(s: State, e: cg.MouchEvent): void {\n  if (!s.dropmode.active) return;\n\n  board.unsetPremove(s);\n  board.unsetPredrop(s);\n\n  const piece = s.dropmode.piece;\n\n  if (piece) {\n    s.pieces.a0 = piece;\n    const position = util.eventPosition(e);\n    const dest = position && board.getKeyAtDomPos(\n      position, board.whitePov(s), s.dom.bounds());\n    if (dest) board.dropNewPiece(s, 'a0', dest);\n  }\n  s.dom.redraw();\n}\n","import { State } from './state'\nimport * as drag from './drag'\nimport * as draw from './draw'\nimport { drop } from './drop'\nimport { isRightButton } from './util'\nimport * as cg from './types'\n\ntype MouchBind = (e: cg.MouchEvent) => void;\ntype StateMouchBind = (d: State, e: cg.MouchEvent) => void;\n\nexport function bindBoard(s: State): void {\n\n  if (s.viewOnly) return;\n\n  const boardEl = s.dom.elements.board,\n  onStart = startDragOrDraw(s);\n\n  // Cannot be passive, because we prevent touch scrolling and dragging of\n  // selected elements.\n  boardEl.addEventListener('touchstart', onStart as EventListener, { passive: false });\n  boardEl.addEventListener('mousedown', onStart as EventListener, { passive: false });\n\n  if (s.disableContextMenu || s.drawable.enabled) {\n    boardEl.addEventListener('contextmenu', e => e.preventDefault());\n  }\n}\n\n// returns the unbind function\nexport function bindDocument(s: State, redrawAll: cg.Redraw): cg.Unbind {\n\n  const unbinds: cg.Unbind[] = [];\n\n  if (!s.dom.relative && s.resizable) {\n    const onResize = () => {\n      s.dom.bounds.clear();\n      requestAnimationFrame(redrawAll);\n    };\n    unbinds.push(unbindable(document.body, 'chessground.resize', onResize));\n  }\n\n  if (!s.viewOnly) {\n\n    const onmove: MouchBind = dragOrDraw(s, drag.move, draw.move);\n    const onend: MouchBind = dragOrDraw(s, drag.end, draw.end);\n\n    ['touchmove', 'mousemove'].forEach(ev => unbinds.push(unbindable(document, ev, onmove)));\n    ['touchend', 'mouseup'].forEach(ev => unbinds.push(unbindable(document, ev, onend)));\n\n    const onScroll = () => s.dom.bounds.clear();\n    unbinds.push(unbindable(window, 'scroll', onScroll, { passive: true }));\n    unbinds.push(unbindable(window, 'resize', onScroll, { passive: true }));\n  }\n\n  return () => unbinds.forEach(f => f());\n}\n\nfunction unbindable(el: EventTarget, eventName: string, callback: MouchBind, options?: any): cg.Unbind {\n  el.addEventListener(eventName, callback as EventListener, options);\n  return () => el.removeEventListener(eventName, callback as EventListener);\n}\n\nfunction startDragOrDraw(s: State): MouchBind {\n  return e => {\n    if (s.draggable.current) drag.cancel(s);\n    else if (s.drawable.current) draw.cancel(s);\n    else if (e.shiftKey || isRightButton(e)) { if (s.drawable.enabled) draw.start(s, e); }\n    else if (!s.viewOnly) {\n      if (s.dropmode.active) drop(s, e);\n      else drag.start(s, e);\n    }\n  };\n}\n\nfunction dragOrDraw(s: State, withDrag: StateMouchBind, withDraw: StateMouchBind): MouchBind {\n  return e => {\n    if (e.shiftKey || isRightButton(e)) { if (s.drawable.enabled) withDraw(s, e); }\n    else if (!s.viewOnly) withDrag(s, e);\n  };\n}\n","import { State } from './state'\nimport { Key } from './types'\n\nexport default function explosion(state: State, keys: Key[]): void {\n  state.exploding = { stage: 1, keys };\n  state.dom.redraw();\n  setTimeout(() => {\n    setStage(state, 2);\n    setTimeout(() => setStage(state, undefined), 120);\n  }, 120);\n}\n\nfunction setStage(state: State, stage: number | undefined): void {\n  if (state.exploding) {\n    if (stage) state.exploding.stage = stage;\n    else state.exploding = undefined;\n    state.dom.redraw();\n  }\n}\n","import { pos2key, invRanks } from './util'\nimport * as cg from './types'\n\nexport const initial: cg.FEN = 'rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR';\n\nconst roles: { [letter: string]: cg.Role } = { p: 'pawn', r: 'rook', n: 'knight', b: 'bishop', q: 'queen', k: 'king' };\n\nconst letters = { pawn: 'p', rook: 'r', knight: 'n', bishop: 'b', queen: 'q', king: 'k' };\n\nexport function read(fen: cg.FEN): cg.Pieces {\n  if (fen === 'start') fen = initial;\n  const pieces: cg.Pieces = {};\n  let row: number = 8, col: number = 0;\n  for (const c of fen) {\n    switch (c) {\n      case ' ': return pieces;\n      case '/':\n        --row;\n        if (row === 0) return pieces;\n        col = 0;\n        break;\n      case '~':\n        const piece = pieces[pos2key([col, row])];\n        if (piece) piece.promoted = true;\n        break;\n      default:\n        const nb = c.charCodeAt(0);\n        if (nb < 57) col += nb - 48;\n        else {\n          ++col;\n          const role = c.toLowerCase();\n          pieces[pos2key([col, row])] = {\n            role: roles[role],\n            color: (c === role ? 'black' : 'white') as cg.Color\n          };\n        }\n    }\n  }\n  return pieces;\n}\n\nexport function write(pieces: cg.Pieces): cg.FEN {\n  return invRanks.map(y => cg.ranks.map(x => {\n      const piece = pieces[pos2key([x, y])];\n      if (piece) {\n        const letter = letters[piece.role];\n        return piece.color === 'white' ? letter.toUpperCase() : letter;\n      } else return '1';\n    }).join('')\n  ).join('/').replace(/1{2,}/g, s => s.length.toString());\n}\n","module.exports = require(\"./chessground\").Chessground;\n","import * as util from './util'\nimport * as cg from './types'\n\ntype Mobility = (x1:number, y1:number, x2:number, y2:number) => boolean;\n\nfunction diff(a: number, b:number):number {\n  return Math.abs(a - b);\n}\n\nfunction pawn(color: cg.Color): Mobility {\n  return (x1, y1, x2, y2) => diff(x1, x2) < 2 && (\n    color === 'white' ? (\n      // allow 2 squares from 1 and 8, for horde\n      y2 === y1 + 1 || (y1 <= 2 && y2 === (y1 + 2) && x1 === x2)\n    ) : (\n      y2 === y1 - 1 || (y1 >= 7 && y2 === (y1 - 2) && x1 === x2)\n    )\n  );\n}\n\nconst knight: Mobility = (x1, y1, x2, y2) => {\n  const xd = diff(x1, x2);\n  const yd = diff(y1, y2);\n  return (xd === 1 && yd === 2) || (xd === 2 && yd === 1);\n}\n\nconst bishop: Mobility = (x1, y1, x2, y2) => {\n  return diff(x1, x2) === diff(y1, y2);\n}\n\nconst rook: Mobility = (x1, y1, x2, y2) => {\n  return x1 === x2 || y1 === y2;\n}\n\nconst queen: Mobility = (x1, y1, x2, y2) => {\n  return bishop(x1, y1, x2, y2) || rook(x1, y1, x2, y2);\n}\n\nfunction king(color: cg.Color, rookFiles: number[], canCastle: boolean): Mobility {\n  return (x1, y1, x2, y2)  => (\n    diff(x1, x2) < 2 && diff(y1, y2) < 2\n  ) || (\n    canCastle && y1 === y2 && y1 === (color === 'white' ? 1 : 8) && (\n      (x1 === 5 && ((util.containsX(rookFiles, 1) && x2 === 3) || (util.containsX(rookFiles, 8) && x2 === 7))) ||\n      util.containsX(rookFiles, x2)\n    )\n  );\n}\n\nfunction rookFilesOf(pieces: cg.Pieces, color: cg.Color) {\n  const backrank = color == 'white' ? '1' : '8';\n  return Object.keys(pieces).filter(key => {\n    const piece = pieces[key];\n    return key[1] === backrank && piece && piece.color === color && piece.role === 'rook';\n  }).map((key: string ) => util.key2pos(key as cg.Key)[0]);\n}\n\nconst allPos = util.allKeys.map(util.key2pos);\n\nexport default function premove(pieces: cg.Pieces, key: cg.Key, canCastle: boolean): cg.Key[] {\n  const piece = pieces[key]!,\n    pos = util.key2pos(key),\n    r = piece.role,\n    mobility: Mobility = r === 'pawn' ? pawn(piece.color) : (\n      r === 'knight' ? knight : (\n        r === 'bishop' ? bishop : (\n          r === 'rook' ? rook : (\n            r === 'queen' ? queen : king(piece.color, rookFilesOf(pieces, piece.color), canCastle)\n          ))));\n  return allPos.filter(pos2 =>\n    (pos[0] !== pos2[0] || pos[1] !== pos2[1]) && mobility(pos[0], pos[1], pos2[0], pos2[1])\n  ).map(util.pos2key);\n};\n","import { State } from './state'\nimport { key2pos, createEl } from './util'\nimport { whitePov } from './board'\nimport * as util from './util'\nimport { AnimCurrent, AnimVectors, AnimVector, AnimFadings } from './anim'\nimport { DragCurrent } from './drag'\nimport * as cg from './types'\n\n// `$color $role`\ntype PieceName = string;\n\ninterface SamePieces { [key: string]: boolean }\ninterface SameSquares { [key: string]: boolean }\ninterface MovedPieces { [pieceName: string]: cg.PieceNode[] }\ninterface MovedSquares { [className: string]: cg.SquareNode[] }\ninterface SquareClasses { [key: string]: string }\n\n// ported from https://github.com/veloce/lichobile/blob/master/src/js/chessground/view.js\n// in case of bugs, blame @veloce\nexport default function render(s: State): void {\n  const asWhite: boolean = whitePov(s),\n  posToTranslate = s.dom.relative ? util.posToTranslateRel : util.posToTranslateAbs(s.dom.bounds()),\n  translate = s.dom.relative ? util.translateRel : util.translateAbs,\n  boardEl: HTMLElement = s.dom.elements.board,\n  pieces: cg.Pieces = s.pieces,\n  curAnim: AnimCurrent | undefined = s.animation.current,\n  anims: AnimVectors = curAnim ? curAnim.plan.anims : {},\n  fadings: AnimFadings = curAnim ? curAnim.plan.fadings : {},\n  curDrag: DragCurrent | undefined = s.draggable.current,\n  squares: SquareClasses = computeSquareClasses(s),\n  samePieces: SamePieces = {},\n  sameSquares: SameSquares = {},\n  movedPieces: MovedPieces = {},\n  movedSquares: MovedSquares = {},\n  piecesKeys: cg.Key[] = Object.keys(pieces) as cg.Key[];\n  let k: cg.Key,\n  p: cg.Piece | undefined,\n  el: cg.PieceNode | cg.SquareNode,\n  pieceAtKey: cg.Piece | undefined,\n  elPieceName: PieceName,\n  anim: AnimVector | undefined,\n  fading: cg.Piece | undefined,\n  pMvdset: cg.PieceNode[],\n  pMvd: cg.PieceNode | undefined,\n  sMvdset: cg.SquareNode[],\n  sMvd: cg.SquareNode | undefined;\n\n  // walk over all board dom elements, apply animations and flag moved pieces\n  el = boardEl.firstChild as cg.PieceNode | cg.SquareNode;\n  while (el) {\n    k = el.cgKey;\n    if (isPieceNode(el)) {\n      pieceAtKey = pieces[k];\n      anim = anims[k];\n      fading = fadings[k];\n      elPieceName = el.cgPiece;\n      // if piece not being dragged anymore, remove dragging style\n      if (el.cgDragging && (!curDrag || curDrag.orig !== k)) {\n        el.classList.remove('dragging');\n        translate(el, posToTranslate(key2pos(k), asWhite));\n        el.cgDragging = false;\n      }\n      // remove fading class if it still remains\n      if (!fading && el.cgFading) {\n        el.cgFading = false;\n        el.classList.remove('fading');\n      }\n      // there is now a piece at this dom key\n      if (pieceAtKey) {\n        // continue animation if already animating and same piece\n        // (otherwise it could animate a captured piece)\n        if (anim && el.cgAnimating && elPieceName === pieceNameOf(pieceAtKey)) {\n          const pos = key2pos(k);\n          pos[0] += anim[2];\n          pos[1] += anim[3];\n          el.classList.add('anim');\n          translate(el, posToTranslate(pos, asWhite));\n        } else if (el.cgAnimating) {\n          el.cgAnimating = false;\n          el.classList.remove('anim');\n          translate(el, posToTranslate(key2pos(k), asWhite));\n          if (s.addPieceZIndex) el.style.zIndex = posZIndex(key2pos(k), asWhite);\n        }\n        // same piece: flag as same\n        if (elPieceName === pieceNameOf(pieceAtKey) && (!fading || !el.cgFading)) {\n          samePieces[k] = true;\n        }\n        // different piece: flag as moved unless it is a fading piece\n        else {\n          if (fading && elPieceName === pieceNameOf(fading)) {\n            el.classList.add('fading');\n            el.cgFading = true;\n          } else {\n            if (movedPieces[elPieceName]) movedPieces[elPieceName].push(el);\n            else movedPieces[elPieceName] = [el];\n          }\n        }\n      }\n      // no piece: flag as moved\n      else {\n        if (movedPieces[elPieceName]) movedPieces[elPieceName].push(el);\n        else movedPieces[elPieceName] = [el];\n      }\n    }\n    else if (isSquareNode(el)) {\n      const cn = el.className;\n      if (squares[k] === cn) sameSquares[k] = true;\n      else if (movedSquares[cn]) movedSquares[cn].push(el);\n      else movedSquares[cn] = [el];\n    }\n    el = el.nextSibling as cg.PieceNode | cg.SquareNode;\n  }\n\n  // walk over all squares in current set, apply dom changes to moved squares\n  // or append new squares\n  for (const sk in squares) {\n    if (!sameSquares[sk]) {\n      sMvdset = movedSquares[squares[sk]];\n      sMvd = sMvdset && sMvdset.pop();\n      const translation = posToTranslate(key2pos(sk as cg.Key), asWhite);\n      if (sMvd) {\n        sMvd.cgKey = sk as cg.Key;\n        translate(sMvd, translation);\n      }\n      else {\n        const squareNode = createEl('square', squares[sk]) as cg.SquareNode;\n        squareNode.cgKey = sk as cg.Key;\n        translate(squareNode, translation);\n        boardEl.insertBefore(squareNode, boardEl.firstChild);\n      }\n    }\n  }\n\n  // walk over all pieces in current set, apply dom changes to moved pieces\n  // or append new pieces\n  for (const j in piecesKeys) {\n    k = piecesKeys[j];\n    p = pieces[k]!;\n    anim = anims[k];\n    if (!samePieces[k]) {\n      pMvdset = movedPieces[pieceNameOf(p)];\n      pMvd = pMvdset && pMvdset.pop();\n      // a same piece was moved\n      if (pMvd) {\n        // apply dom changes\n        pMvd.cgKey = k;\n        if (pMvd.cgFading) {\n          pMvd.classList.remove('fading');\n          pMvd.cgFading = false;\n        }\n        const pos = key2pos(k);\n        if (s.addPieceZIndex) pMvd.style.zIndex = posZIndex(pos, asWhite);\n        if (anim) {\n          pMvd.cgAnimating = true;\n          pMvd.classList.add('anim');\n          pos[0] += anim[2];\n          pos[1] += anim[3];\n        }\n        translate(pMvd, posToTranslate(pos, asWhite));\n      }\n      // no piece in moved obj: insert the new piece\n      // assumes the new piece is not being dragged\n      else {\n\n        const pieceName = pieceNameOf(p),\n        pieceNode = createEl('piece', pieceName) as cg.PieceNode,\n        pos = key2pos(k);\n\n        pieceNode.cgPiece = pieceName;\n        pieceNode.cgKey = k;\n        if (anim) {\n          pieceNode.cgAnimating = true;\n          pos[0] += anim[2];\n          pos[1] += anim[3];\n        }\n        translate(pieceNode, posToTranslate(pos, asWhite));\n\n        if (s.addPieceZIndex) pieceNode.style.zIndex = posZIndex(pos, asWhite);\n\n        boardEl.appendChild(pieceNode);\n      }\n    }\n  }\n\n  // remove any element that remains in the moved sets\n  for (const i in movedPieces) removeNodes(s, movedPieces[i]);\n  for (const i in movedSquares) removeNodes(s, movedSquares[i]);\n}\n\nfunction isPieceNode(el: cg.PieceNode | cg.SquareNode): el is cg.PieceNode {\n  return el.tagName === 'PIECE';\n}\nfunction isSquareNode(el: cg.PieceNode | cg.SquareNode): el is cg.SquareNode {\n  return el.tagName === 'SQUARE';\n}\n\nfunction removeNodes(s: State, nodes: HTMLElement[]): void {\n  for (const i in nodes) s.dom.elements.board.removeChild(nodes[i]);\n}\n\nfunction posZIndex(pos: cg.Pos, asWhite: boolean): string {\n  let z = 2 + (pos[1] - 1) * 8 + (8 - pos[0]);\n  if (asWhite) z = 67 - z;\n  return z + '';\n}\n\nfunction pieceNameOf(piece: cg.Piece): string {\n  return `${piece.color} ${piece.role}`;\n}\n\nfunction computeSquareClasses(s: State): SquareClasses {\n  const squares: SquareClasses = {};\n  let i: any, k: cg.Key;\n  if (s.lastMove && s.highlight.lastMove) for (i in s.lastMove) {\n    addSquare(squares, s.lastMove[i], 'last-move');\n  }\n  if (s.check && s.highlight.check) addSquare(squares, s.check, 'check');\n  if (s.selected) {\n    addSquare(squares, s.selected, 'selected');\n    if (s.movable.showDests) {\n      const dests = s.movable.dests && s.movable.dests[s.selected];\n      if (dests) for (i in dests) {\n        k = dests[i];\n        addSquare(squares, k, 'move-dest' + (s.pieces[k] ? ' oc' : ''));\n      }\n      const pDests = s.premovable.dests;\n      if (pDests) for (i in pDests) {\n        k = pDests[i];\n        addSquare(squares, k, 'premove-dest' + (s.pieces[k] ? ' oc' : ''));\n      }\n    }\n  }\n  const premove = s.premovable.current;\n  if (premove) for (i in premove) addSquare(squares, premove[i], 'current-premove');\n  else if (s.predroppable.current) addSquare(squares, s.predroppable.current.key, 'current-premove');\n\n  const o = s.exploding;\n  if (o) for (i in o.keys) addSquare(squares, o.keys[i], 'exploding' + o.stage);\n\n  return squares;\n}\n\nfunction addSquare(squares: SquareClasses, key: cg.Key, klass: string): void {\n  if (squares[key]) squares[key] += ' ' + klass;\n  else squares[key] = klass;\n}\n","import * as fen from './fen'\nimport { AnimCurrent } from './anim'\nimport { DragCurrent } from './drag'\nimport { Drawable } from './draw'\nimport { timer } from './util'\nimport * as cg from './types';\n\nexport interface State {\n  pieces: cg.Pieces;\n  orientation: cg.Color; // board orientation. white | black\n  turnColor: cg.Color; // turn to play. white | black\n  check?: cg.Key; // square currently in check \"a2\"\n  lastMove?: cg.Key[]; // squares part of the last move [\"c3\"; \"c4\"]\n  selected?: cg.Key; // square currently selected \"a1\"\n  coordinates: boolean; // include coords attributes\n  autoCastle: boolean; // immediately complete the castle by moving the rook after king move\n  viewOnly: boolean; // don't bind events: the user will never be able to move pieces around\n  disableContextMenu: boolean; // because who needs a context menu on a chessboard\n  resizable: boolean; // listens to chessground.resize on document.body to clear bounds cache\n  addPieceZIndex: boolean; // adds z-index values to pieces (for 3D)\n  pieceKey: boolean; // add a data-key attribute to piece elements\n  highlight: {\n    lastMove: boolean; // add last-move class to squares\n    check: boolean; // add check class to squares\n  };\n  animation: {\n    enabled: boolean;\n    duration: number;\n    current?: AnimCurrent;\n  };\n  movable: {\n    free: boolean; // all moves are valid - board editor\n    color?: cg.Color | 'both'; // color that can move. white | black | both\n    dests?: cg.Dests; // valid moves. {\"a2\" [\"a3\" \"a4\"] \"b1\" [\"a3\" \"c3\"]}\n    showDests: boolean; // whether to add the move-dest class on squares\n    events: {\n      after?: (orig: cg.Key, dest: cg.Key, metadata: cg.MoveMetadata) => void; // called after the move has been played\n      afterNewPiece?: (role: cg.Role, key: cg.Key, metadata: cg.MoveMetadata) => void; // called after a new piece is dropped on the board\n    };\n    rookCastle: boolean // castle by moving the king to the rook\n  };\n  premovable: {\n    enabled: boolean; // allow premoves for color that can not move\n    showDests: boolean; // whether to add the premove-dest class on squares\n    castle: boolean; // whether to allow king castle premoves\n    dests?: cg.Key[]; // premove destinations for the current selection\n    current?: cg.KeyPair; // keys of the current saved premove [\"e2\" \"e4\"]\n    events: {\n      set?: (orig: cg.Key, dest: cg.Key, metadata?: cg.SetPremoveMetadata) => void; // called after the premove has been set\n      unset?: () => void;  // called after the premove has been unset\n    }\n  };\n  predroppable: {\n    enabled: boolean; // allow predrops for color that can not move\n    current?: { // current saved predrop {role: 'knight'; key: 'e4'}\n      role: cg.Role;\n      key: cg.Key\n    };\n    events: {\n      set?: (role: cg.Role, key: cg.Key) => void; // called after the predrop has been set\n      unset?: () => void; // called after the predrop has been unset\n    }\n  };\n  draggable: {\n    enabled: boolean; // allow moves & premoves to use drag'n drop\n    distance: number; // minimum distance to initiate a drag; in pixels\n    autoDistance: boolean; // lets chessground set distance to zero when user drags pieces\n    centerPiece: boolean; // center the piece on cursor at drag start\n    showGhost: boolean; // show ghost of piece being dragged\n    deleteOnDropOff: boolean; // delete a piece when it is dropped off the board\n    current?: DragCurrent;\n  };\n  dropmode: {\n    active: boolean;\n    piece?: cg.Piece;\n  }\n  selectable: {\n    // disable to enforce dragging over click-click move\n    enabled: boolean\n  };\n  stats: {\n    // was last piece dragged or clicked?\n    // needs default to false for touch\n    dragged: boolean,\n    ctrlKey?: boolean\n  };\n  events: {\n    change?: () => void; // called after the situation changes on the board\n    // called after a piece has been moved.\n    // capturedPiece is undefined or like {color: 'white'; 'role': 'queen'}\n    move?: (orig: cg.Key, dest: cg.Key, capturedPiece?: cg.Piece) => void;\n    dropNewPiece?: (piece: cg.Piece, key: cg.Key) => void;\n    select?: (key: cg.Key) => void // called when a square is selected\n    insert?: (elements: cg.Elements) => void; // when the board DOM has been (re)inserted\n  };\n  drawable: Drawable,\n  exploding?: cg.Exploding;\n  dom: cg.Dom,\n  hold: cg.Timer\n}\n\nexport function defaults(): Partial<State> {\n  return {\n    pieces: fen.read(fen.initial),\n    orientation: 'white',\n    turnColor: 'white',\n    coordinates: true,\n    autoCastle: true,\n    viewOnly: false,\n    disableContextMenu: false,\n    resizable: true,\n    addPieceZIndex: false,\n    pieceKey: false,\n    highlight: {\n      lastMove: true,\n      check: true\n    },\n    animation: {\n      enabled: true,\n      duration: 200\n    },\n    movable: {\n      free: true,\n      color: 'both',\n      showDests: true,\n      events: {},\n      rookCastle: true\n    },\n    premovable: {\n      enabled: true,\n      showDests: true,\n      castle: true,\n      events: {}\n    },\n    predroppable: {\n      enabled: false,\n      events: {}\n    },\n    draggable: {\n      enabled: true,\n      distance: 3,\n      autoDistance: true,\n      centerPiece: true,\n      showGhost: true,\n      deleteOnDropOff: false\n    },\n    dropmode: {\n      active: false\n    },\n    selectable: {\n      enabled: true\n    },\n    stats: {\n      // on touchscreen, default to \"tap-tap\" moves\n      // instead of drag\n      dragged: !('ontouchstart' in window)\n    },\n    events: {},\n    drawable: {\n      enabled: true, // can draw\n      visible: true, // can view\n      eraseOnClick: true,\n      shapes: [],\n      autoShapes: [],\n      brushes: {\n        green: { key: 'g', color: '#15781B', opacity: 1, lineWidth: 10 },\n        red: { key: 'r', color: '#882020', opacity: 1, lineWidth: 10 },\n        blue: { key: 'b', color: '#003088', opacity: 1, lineWidth: 10 },\n        yellow: { key: 'y', color: '#e68f00', opacity: 1, lineWidth: 10 },\n        paleBlue: { key: 'pb', color: '#003088', opacity: 0.4, lineWidth: 15 },\n        paleGreen: { key: 'pg', color: '#15781B', opacity: 0.4, lineWidth: 15 },\n        paleRed: { key: 'pr', color: '#882020', opacity: 0.4, lineWidth: 15 },\n        paleGrey: { key: 'pgr', color: '#4a4a4a', opacity: 0.35, lineWidth: 15 }\n      },\n      pieces: {\n        baseUrl: 'https://lichess1.org/assets/piece/cburnett/'\n      },\n      prevSvgHash: ''\n    },\n    hold: timer()\n  };\n}\n","import { State } from './state'\nimport { key2pos } from './util'\nimport { Drawable, DrawShape, DrawShapePiece, DrawBrush, DrawBrushes, DrawModifiers } from './draw'\nimport * as cg from './types'\n\nexport function createElement(tagName: string): SVGElement {\n  return document.createElementNS('http://www.w3.org/2000/svg', tagName);\n}\n\ninterface Shape {\n  shape: DrawShape;\n  current: boolean;\n  hash: Hash;\n}\n\ninterface CustomBrushes {\n  [hash: string]: DrawBrush\n}\n\ninterface ArrowDests {\n  [key: string]: number; // how many arrows land on a square\n}\n\ntype Hash = string;\n\nexport function renderSvg(state: State, root: SVGElement): void {\n\n  const d = state.drawable,\n  curD = d.current,\n  cur = curD && curD.mouseSq ? curD as DrawShape : undefined,\n  arrowDests: ArrowDests = {};\n\n  d.shapes.concat(d.autoShapes).concat(cur ? [cur] : []).forEach(s => {\n    if (s.dest) arrowDests[s.dest] = (arrowDests[s.dest] || 0) + 1;\n  });\n\n  const shapes: Shape[] = d.shapes.concat(d.autoShapes).map((s: DrawShape) => {\n    return {\n      shape: s,\n      current: false,\n      hash: shapeHash(s, arrowDests, false)\n    };\n  });\n  if (cur) shapes.push({\n    shape: cur,\n    current: true,\n    hash: shapeHash(cur, arrowDests, true)\n  });\n\n  const fullHash = shapes.map(sc => sc.hash).join('');\n  if (fullHash === state.drawable.prevSvgHash) return;\n  state.drawable.prevSvgHash = fullHash;\n\n  const defsEl = root.firstChild as SVGElement;\n\n  syncDefs(d, shapes, defsEl);\n  syncShapes(state, shapes, d.brushes, arrowDests, root, defsEl);\n}\n\n// append only. Don't try to update/remove.\nfunction syncDefs(d: Drawable, shapes: Shape[], defsEl: SVGElement) {\n  const brushes: CustomBrushes = {};\n  let brush: DrawBrush;\n  shapes.forEach(s => {\n    if (s.shape.dest) {\n      brush = d.brushes[s.shape.brush];\n      if (s.shape.modifiers) brush = makeCustomBrush(brush, s.shape.modifiers);\n      brushes[brush.key] = brush;\n    }\n  });\n  const keysInDom: {[key: string]: boolean} = {};\n  let el: SVGElement = defsEl.firstChild as SVGElement;\n  while(el) {\n    keysInDom[el.getAttribute('cgKey') as string] = true;\n    el = el.nextSibling as SVGElement;\n  }\n  for (let key in brushes) {\n    if (!keysInDom[key]) defsEl.appendChild(renderMarker(brushes[key]));\n  }\n}\n\n// append and remove only. No updates.\nfunction syncShapes(state: State, shapes: Shape[], brushes: DrawBrushes, arrowDests: ArrowDests, root: SVGElement, defsEl: SVGElement): void {\n  const bounds = state.dom.bounds(),\n  hashesInDom: {[hash: string]: boolean} = {},\n  toRemove: SVGElement[] = [];\n  shapes.forEach(sc => { hashesInDom[sc.hash] = false; });\n  let el: SVGElement = defsEl.nextSibling as SVGElement, elHash: Hash;\n  while(el) {\n    elHash = el.getAttribute('cgHash') as Hash;\n    // found a shape element that's here to stay\n    if (hashesInDom.hasOwnProperty(elHash)) hashesInDom[elHash] = true;\n    // or remove it\n    else toRemove.push(el);\n    el = el.nextSibling as SVGElement;\n  }\n  // remove old shapes\n  toRemove.forEach(el => root.removeChild(el));\n  // insert shapes that are not yet in dom\n  shapes.forEach(sc => {\n    if (!hashesInDom[sc.hash]) root.appendChild(renderShape(state, sc, brushes, arrowDests, bounds));\n  });\n}\n\nfunction shapeHash({orig, dest, brush, piece, modifiers}: DrawShape, arrowDests: ArrowDests, current: boolean): Hash {\n  return [current, orig, dest, brush, dest && arrowDests[dest] > 1,\n    piece && pieceHash(piece),\n    modifiers && modifiersHash(modifiers)\n  ].filter(x => x).join('');\n}\n\nfunction pieceHash(piece: DrawShapePiece): Hash {\n  return [piece.color, piece.role, piece.scale].filter(x => x).join('');\n}\n\nfunction modifiersHash(m: DrawModifiers): Hash {\n  return '' + (m.lineWidth || '');\n}\n\nfunction renderShape(state: State, {shape, current, hash}: Shape, brushes: DrawBrushes, arrowDests: ArrowDests, bounds: ClientRect): SVGElement {\n  let el: SVGElement;\n  if (shape.piece) el = renderPiece(\n    state.drawable.pieces.baseUrl,\n    orient(key2pos(shape.orig), state.orientation),\n    shape.piece,\n    bounds);\n  else {\n    const orig = orient(key2pos(shape.orig), state.orientation);\n    if (shape.orig && shape.dest) {\n      let brush: DrawBrush = brushes[shape.brush];\n      if (shape.modifiers) brush = makeCustomBrush(brush, shape.modifiers);\n      el = renderArrow(\n        brush,\n        orig,\n        orient(key2pos(shape.dest), state.orientation),\n        current,\n        arrowDests[shape.dest] > 1,\n        bounds);\n    }\n    else el = renderCircle(brushes[shape.brush], orig, current, bounds);\n  }\n  el.setAttribute('cgHash', hash);\n  return el;\n}\n\nfunction renderCircle(brush: DrawBrush, pos: cg.Pos, current: boolean, bounds: ClientRect): SVGElement {\n  const o = pos2px(pos, bounds),\n  widths = circleWidth(bounds),\n  radius = (bounds.width + bounds.height) / 32;\n  return setAttributes(createElement('circle'), {\n    stroke: brush.color,\n    'stroke-width': widths[current ? 0 : 1],\n    fill: 'none',\n    opacity: opacity(brush, current),\n    cx: o[0],\n    cy: o[1],\n    r: radius - widths[1] / 2\n  });\n}\n\nfunction renderArrow(brush: DrawBrush, orig: cg.Pos, dest: cg.Pos, current: boolean, shorten: boolean, bounds: ClientRect): SVGElement {\n  const m = arrowMargin(bounds, shorten && !current),\n  a = pos2px(orig, bounds),\n  b = pos2px(dest, bounds),\n  dx = b[0] - a[0],\n  dy = b[1] - a[1],\n  angle = Math.atan2(dy, dx),\n  xo = Math.cos(angle) * m,\n  yo = Math.sin(angle) * m;\n  return setAttributes(createElement('line'), {\n    stroke: brush.color,\n    'stroke-width': lineWidth(brush, current, bounds),\n    'stroke-linecap': 'round',\n    'marker-end': 'url(#arrowhead-' + brush.key + ')',\n    opacity: opacity(brush, current),\n    x1: a[0],\n    y1: a[1],\n    x2: b[0] - xo,\n    y2: b[1] - yo\n  });\n}\n\nfunction renderPiece(baseUrl: string, pos: cg.Pos, piece: DrawShapePiece, bounds: ClientRect): SVGElement {\n  const o = pos2px(pos, bounds),\n  size = bounds.width / 8 * (piece.scale || 1),\n  name = piece.color[0] + (piece.role === 'knight' ? 'n' : piece.role[0]).toUpperCase();\n  return setAttributes(createElement('image'), {\n    className: `${piece.role} ${piece.color}`,\n    x: o[0] - size / 2,\n    y: o[1] - size / 2,\n    width: size,\n    height: size,\n    href: baseUrl + name + '.svg'\n  });\n}\n\nfunction renderMarker(brush: DrawBrush): SVGElement {\n  const marker = setAttributes(createElement('marker'), {\n    id: 'arrowhead-' + brush.key,\n    orient: 'auto',\n    markerWidth: 4,\n    markerHeight: 8,\n    refX: 2.05,\n    refY: 2.01\n  });\n  marker.appendChild(setAttributes(createElement('path'), {\n    d: 'M0,0 V4 L3,2 Z',\n    fill: brush.color\n  }));\n  marker.setAttribute('cgKey', brush.key);\n  return marker;\n}\n\nfunction setAttributes(el: SVGElement, attrs: { [key: string]: any }): SVGElement {\n  for (let key in attrs) el.setAttribute(key, attrs[key]);\n  return el;\n}\n\nfunction orient(pos: cg.Pos, color: cg.Color): cg.Pos {\n  return color === 'white' ? pos : [9 - pos[0], 9 - pos[1]];\n}\n\nfunction makeCustomBrush(base: DrawBrush, modifiers: DrawModifiers): DrawBrush {\n  const brush: Partial<DrawBrush> = {\n    color: base.color,\n    opacity: Math.round(base.opacity * 10) / 10,\n    lineWidth: Math.round(modifiers.lineWidth || base.lineWidth)\n  };\n  brush.key = [base.key, modifiers.lineWidth].filter(x => x).join('');\n  return brush as DrawBrush;\n}\n\nfunction circleWidth(bounds: ClientRect): [number, number] {\n  const base = bounds.width / 512;\n  return [3 * base, 4 * base];\n}\n\nfunction lineWidth(brush: DrawBrush, current: boolean, bounds: ClientRect): number {\n  return (brush.lineWidth || 10) * (current ? 0.85 : 1) / 512 * bounds.width;\n}\n\nfunction opacity(brush: DrawBrush, current: boolean): number {\n  return (brush.opacity || 1) * (current ? 0.9 : 1);\n}\n\nfunction arrowMargin(bounds: ClientRect, shorten: boolean): number {\n  return (shorten ? 20 : 10) / 512 * bounds.width;\n}\n\nfunction pos2px(pos: cg.Pos, bounds: ClientRect): cg.NumberPair {\n  return [(pos[0] - 0.5) * bounds.width / 8, (8.5 - pos[1]) * bounds.height / 8];\n}\n","export type Color = 'white' | 'black';\nexport type Role = 'king' | 'queen' | 'rook' | 'bishop' | 'knight' | 'pawn';\nexport type Key = 'a0' | 'a1' | 'b1' | 'c1' | 'd1' | 'e1' | 'f1' | 'g1' | 'h1' | 'a2' | 'b2' | 'c2' | 'd2' | 'e2' | 'f2' | 'g2' | 'h2' | 'a3' | 'b3' | 'c3' | 'd3' | 'e3' | 'f3' | 'g3' | 'h3' | 'a4' | 'b4' | 'c4' | 'd4' | 'e4' | 'f4' | 'g4' | 'h4' | 'a5' | 'b5' | 'c5' | 'd5' | 'e5' | 'f5' | 'g5' | 'h5' | 'a6' | 'b6' | 'c6' | 'd6' | 'e6' | 'f6' | 'g6' | 'h6' | 'a7' | 'b7' | 'c7' | 'd7' | 'e7' | 'f7' | 'g7' | 'h7' | 'a8' | 'b8' | 'c8' | 'd8' | 'e8' | 'f8' | 'g8' | 'h8';\nexport type File = 'a' | 'b' | 'c' | 'd' | 'e' | 'f' | 'g' | 'h';\nexport type Rank = 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8;\nexport type FEN = string;\nexport type Pos = [number, number];\nexport interface Piece {\n  role: Role;\n  color: Color;\n  promoted?: boolean;\n}\nexport interface Drop {\n  role: Role;\n  key: Key;\n}\nexport interface Pieces {\n  [key: string]: Piece | undefined;\n}\nexport interface PiecesDiff {\n  [key: string]: Piece | undefined;\n}\n\nexport type KeyPair = [Key, Key];\n\nexport type NumberPair = [number, number];\n\nexport type NumberQuad = [number, number, number, number];\n\nexport interface Dests {\n  [key: string]: Key[]\n}\n\nexport interface Elements {\n  board: HTMLElement;\n  container: HTMLElement;\n  ghost?: HTMLElement;\n  svg?: SVGElement;\n}\nexport interface Dom {\n  elements: Elements,\n  bounds: Memo<ClientRect>;\n  redraw: () => void;\n  redrawNow: (skipSvg?: boolean) => void;\n  unbind?: Unbind;\n  destroyed?: boolean;\n  relative?: boolean; // don't compute bounds, use relative % to place pieces\n}\nexport interface Exploding {\n  stage: number;\n  keys: Key[];\n}\n\nexport interface MoveMetadata {\n  premove: boolean;\n  ctrlKey?: boolean;\n  holdTime?: number;\n  captured?: Piece;\n  predrop?: boolean;\n}\nexport interface SetPremoveMetadata {\n  ctrlKey?: boolean;\n}\n\nexport type WindowEvent = 'onscroll' | 'onresize';\n\nexport type MouchEvent = MouseEvent & TouchEvent;\n\nexport interface KeyedNode extends HTMLElement {\n  cgKey: Key;\n}\nexport interface PieceNode extends KeyedNode {\n  cgPiece: string;\n  cgAnimating?: boolean;\n  cgFading?: boolean;\n  cgDragging?: boolean;\n}\nexport interface SquareNode extends KeyedNode { }\n\nexport interface Memo<A> { (): A; clear: () => void; }\n\nexport interface Timer {\n  start: () => void;\n  cancel: () => void;\n  stop: () => number;\n}\n\nexport type Redraw = () => void;\nexport type Unbind = () => void;\nexport type Milliseconds = number;\nexport type KHz = number;\n\nexport const files: File[] = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h'];\nexport const ranks: Rank[] = [1, 2, 3, 4, 5, 6, 7, 8];\n","import * as cg from './types';\n\nexport const colors: cg.Color[] = ['white', 'black'];\n\nexport const invRanks: cg.Rank[] = [8, 7, 6, 5, 4, 3, 2, 1];\n\nexport const allKeys: cg.Key[] = Array.prototype.concat(...cg.files.map(c => cg.ranks.map(r => c+r)));\n\nexport const pos2key = (pos: cg.Pos) => allKeys[8 * pos[0] + pos[1] - 9];\n\nexport const key2pos = (k: cg.Key) => [k.charCodeAt(0) - 96, k.charCodeAt(1) - 48] as cg.Pos;\n\nexport function memo<A>(f: () => A): cg.Memo<A> {\n  let v: A | undefined;\n  const ret: any = () => {\n    if (v === undefined) v = f();\n    return v;\n  };\n  ret.clear = () => { v = undefined };\n  return ret;\n}\n\nexport const timer: () => cg.Timer = () => {\n  let startAt: number | undefined;\n  return {\n    start() { startAt = performance.now() },\n    cancel() { startAt = undefined },\n    stop() {\n      if (!startAt) return 0;\n      const time = performance.now() - startAt;\n      startAt = undefined;\n      return time;\n    }\n  };\n}\n\nexport const opposite = (c: cg.Color) => c === 'white' ? 'black' : 'white';\n\nexport function containsX<X>(xs: X[] | undefined, x: X): boolean {\n  return xs !== undefined && xs.indexOf(x) !== -1;\n}\n\nexport const distanceSq: (pos1: cg.Pos, pos2: cg.Pos) => number = (pos1, pos2) => {\n  return Math.pow(pos1[0] - pos2[0], 2) + Math.pow(pos1[1] - pos2[1], 2);\n}\n\nexport const samePiece: (p1: cg.Piece, p2: cg.Piece) => boolean = (p1, p2) =>\n  p1.role === p2.role && p1.color === p2.color;\n\nconst posToTranslateBase: (pos: cg.Pos, asWhite: boolean, xFactor: number, yFactor: number) => cg.NumberPair =\n(pos, asWhite, xFactor, yFactor) => [\n  (asWhite ? pos[0] - 1 : 8 - pos[0]) * xFactor,\n  (asWhite ? 8 - pos[1] : pos[1] - 1) * yFactor\n];\n\nexport const posToTranslateAbs = (bounds: ClientRect) => {\n  const xFactor = bounds.width / 8,\n  yFactor = bounds.height / 8;\n  return (pos: cg.Pos, asWhite: boolean) => posToTranslateBase(pos, asWhite, xFactor, yFactor);\n};\n\nexport const posToTranslateRel: (pos: cg.Pos, asWhite: boolean) => cg.NumberPair =\n  (pos, asWhite) => posToTranslateBase(pos, asWhite, 100, 100);\n\nexport const translateAbs = (el: HTMLElement, pos: cg.NumberPair) => {\n  el.style.transform = `translate(${pos[0]}px,${pos[1]}px)`;\n}\n\nexport const translateRel = (el: HTMLElement, percents: cg.NumberPair) => {\n  el.style.transform = `translate(${percents[0]}%,${percents[1]}%)`;\n}\n\nexport const setVisible = (el: HTMLElement, v: boolean) => {\n  el.style.visibility = v ? 'visible' : 'hidden';\n}\n\n// touchend has no position!\nexport const eventPosition: (e: cg.MouchEvent) => cg.NumberPair | undefined = e => {\n  if (e.clientX || e.clientX === 0) return [e.clientX, e.clientY];\n  if (e.touches && e.targetTouches[0]) return [e.targetTouches[0].clientX, e.targetTouches[0].clientY];\n  return undefined;\n}\n\nexport const isRightButton = (e: MouseEvent) => e.buttons === 2 || e.button === 2;\n\nexport const createEl = (tagName: string, className?: string) => {\n  const el = document.createElement(tagName);\n  if (className) el.className = className;\n  return el;\n}\n","import { State } from './state'\nimport { colors, setVisible, createEl } from './util'\nimport { files, ranks } from './types'\nimport { createElement as createSVG } from './svg'\nimport { Elements } from './types'\n\nexport default function wrap(element: HTMLElement, s: State, relative: boolean): Elements {\n\n  // .cg-wrap (element passed to Chessground)\n  //   cg-helper (12.5%)\n  //     cg-container (800%)\n  //       cg-board\n  //       svg\n  //       coords.ranks\n  //       coords.files\n  //       piece.ghost\n\n  element.innerHTML = '';\n\n  // ensure the cg-wrap class is set\n  // so bounds calculation can use the CSS width/height values\n  // add that class yourself to the element before calling chessground\n  // for a slight performance improvement! (avoids recomputing style)\n  element.classList.add('cg-wrap');\n\n  colors.forEach(c => element.classList.toggle('orientation-' + c, s.orientation === c));\n  element.classList.toggle('manipulable', !s.viewOnly);\n\n  const helper = createEl('cg-helper');\n  element.appendChild(helper);\n  const container = createEl('cg-container');\n  helper.appendChild(container);\n\n  const board = createEl('cg-board');\n  container.appendChild(board);\n\n  let svg: SVGElement | undefined;\n  if (s.drawable.visible && !relative) {\n    svg = createSVG('svg');\n    svg.appendChild(createSVG('defs'));\n    container.appendChild(svg);\n  }\n\n  if (s.coordinates) {\n    const orientClass = s.orientation === 'black' ? ' black' : '';\n    container.appendChild(renderCoords(ranks, 'ranks' + orientClass));\n    container.appendChild(renderCoords(files, 'files' + orientClass));\n  }\n\n  let ghost: HTMLElement | undefined;\n  if (s.draggable.showGhost && !relative) {\n    ghost = createEl('piece', 'ghost');\n    setVisible(ghost, false);\n    container.appendChild(ghost);\n  }\n\n  return {\n    board,\n    container,\n    ghost,\n    svg\n  };\n}\n\nfunction renderCoords(elems: any[], className: string): HTMLElement {\n  const el = createEl('coords', className);\n  let f: HTMLElement;\n  for (let i in elems) {\n    f = createEl('coord');\n    f.textContent = elems[i];\n    el.appendChild(f);\n  }\n  return el;\n}\n","\"use strict\";\n\n/* Array utilities. */\nvar arrays = {\n  range: function(start, stop) {\n    var length = stop - start,\n        result = new Array(length),\n        i, j;\n\n    for (i = 0, j = start; i < length; i++, j++) {\n      result[i] = j;\n    }\n\n    return result;\n  },\n\n  find: function(array, valueOrPredicate) {\n    var length = array.length, i;\n\n    if (typeof valueOrPredicate === \"function\") {\n      for (i = 0; i < length; i++) {\n        if (valueOrPredicate(array[i])) {\n          return array[i];\n        }\n      }\n    } else {\n      for (i = 0; i < length; i++) {\n        if (array[i] === valueOrPredicate) {\n          return array[i];\n        }\n      }\n    }\n  },\n\n  indexOf: function(array, valueOrPredicate) {\n    var length = array.length, i;\n\n    if (typeof valueOrPredicate === \"function\") {\n      for (i = 0; i < length; i++) {\n        if (valueOrPredicate(array[i])) {\n          return i;\n        }\n      }\n    } else {\n      for (i = 0; i < length; i++) {\n        if (array[i] === valueOrPredicate) {\n          return i;\n        }\n      }\n    }\n\n    return -1;\n  },\n\n  contains: function(array, valueOrPredicate) {\n    return arrays.indexOf(array, valueOrPredicate) !== -1;\n  },\n\n  each: function(array, iterator) {\n    var length = array.length, i;\n\n    for (i = 0; i < length; i++) {\n      iterator(array[i], i);\n    }\n  },\n\n  map: function(array, iterator) {\n    var length = array.length,\n        result = new Array(length),\n        i;\n\n    for (i = 0; i < length; i++) {\n      result[i] = iterator(array[i], i);\n    }\n\n    return result;\n  },\n\n  pluck: function(array, key) {\n    return arrays.map(array, function (e) { return e[key]; });\n  },\n\n  every: function(array, predicate) {\n    var length = array.length, i;\n\n    for (i = 0; i < length; i++) {\n      if (!predicate(array[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  },\n\n  some: function(array, predicate) {\n    var length = array.length, i;\n\n    for (i = 0; i < length; i++) {\n      if (predicate(array[i])) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n};\n\nmodule.exports = arrays;\n","\"use strict\";\n\n/* Object utilities. */\nvar objects = {\n  keys: function(object) {\n    var result = [], key;\n\n    for (key in object) {\n      if (object.hasOwnProperty(key)) {\n        result.push(key);\n      }\n    }\n\n    return result;\n  },\n\n  values: function(object) {\n    var result = [], key;\n\n    for (key in object) {\n      if (object.hasOwnProperty(key)) {\n        result.push(object[key]);\n      }\n    }\n\n    return result;\n  },\n\n  clone: function(object) {\n    var result = {}, key;\n\n    for (key in object) {\n      if (object.hasOwnProperty(key)) {\n        result[key] = object[key];\n      }\n    }\n\n    return result;\n  },\n\n  defaults: function(object, defaults) {\n    var key;\n\n    for (key in defaults) {\n      if (defaults.hasOwnProperty(key)) {\n        if (!(key in object)) {\n          object[key] = defaults[key];\n        }\n      }\n    }\n  }\n};\n\nmodule.exports = objects;\n","\"use strict\";\n\n/* Class utilities */\nvar classes = {\n  subclass: function(child, parent) {\n    function ctor() { this.constructor = child; }\n    ctor.prototype = parent.prototype;\n    child.prototype = new ctor();\n  }\n};\n\nmodule.exports = classes;\n","\"use strict\";\n\nvar classes = require(\"./utils/classes\");\n\n/* Thrown when the grammar contains an error. */\nfunction GrammarError(message, location) {\n  this.name = \"GrammarError\";\n  this.message = message;\n  this.location = location;\n\n  if (typeof Error.captureStackTrace === \"function\") {\n    Error.captureStackTrace(this, GrammarError);\n  }\n}\n\nclasses.subclass(GrammarError, Error);\n\nmodule.exports = GrammarError;\n","/* eslint-env node, amd */\n/* eslint no-unused-vars: 0 */\n\n/*\n * Generated by PEG.js 0.10.0.\n *\n * http://pegjs.org/\n */\n\n\"use strict\";\n\nfunction peg$subclass(child, parent) {\n  function ctor() { this.constructor = child; }\n  ctor.prototype = parent.prototype;\n  child.prototype = new ctor();\n}\n\nfunction peg$SyntaxError(message, expected, found, location) {\n  this.message  = message;\n  this.expected = expected;\n  this.found    = found;\n  this.location = location;\n  this.name     = \"SyntaxError\";\n\n  if (typeof Error.captureStackTrace === \"function\") {\n    Error.captureStackTrace(this, peg$SyntaxError);\n  }\n}\n\npeg$subclass(peg$SyntaxError, Error);\n\npeg$SyntaxError.buildMessage = function(expected, found) {\n  var DESCRIBE_EXPECTATION_FNS = {\n        literal: function(expectation) {\n          return \"\\\"\" + literalEscape(expectation.text) + \"\\\"\";\n        },\n\n        \"class\": function(expectation) {\n          var escapedParts = \"\",\n              i;\n\n          for (i = 0; i < expectation.parts.length; i++) {\n            escapedParts += expectation.parts[i] instanceof Array\n              ? classEscape(expectation.parts[i][0]) + \"-\" + classEscape(expectation.parts[i][1])\n              : classEscape(expectation.parts[i]);\n          }\n\n          return \"[\" + (expectation.inverted ? \"^\" : \"\") + escapedParts + \"]\";\n        },\n\n        any: function(expectation) {\n          return \"any character\";\n        },\n\n        end: function(expectation) {\n          return \"end of input\";\n        },\n\n        other: function(expectation) {\n          return expectation.description;\n        }\n      };\n\n  function hex(ch) {\n    return ch.charCodeAt(0).toString(16).toUpperCase();\n  }\n\n  function literalEscape(s) {\n    return s\n      .replace(/\\\\/g, '\\\\\\\\')\n      .replace(/\"/g,  '\\\\\"')\n      .replace(/\\0/g, '\\\\0')\n      .replace(/\\t/g, '\\\\t')\n      .replace(/\\n/g, '\\\\n')\n      .replace(/\\r/g, '\\\\r')\n      .replace(/[\\x00-\\x0F]/g,          function(ch) { return '\\\\x0' + hex(ch); })\n      .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function(ch) { return '\\\\x'  + hex(ch); });\n  }\n\n  function classEscape(s) {\n    return s\n      .replace(/\\\\/g, '\\\\\\\\')\n      .replace(/\\]/g, '\\\\]')\n      .replace(/\\^/g, '\\\\^')\n      .replace(/-/g,  '\\\\-')\n      .replace(/\\0/g, '\\\\0')\n      .replace(/\\t/g, '\\\\t')\n      .replace(/\\n/g, '\\\\n')\n      .replace(/\\r/g, '\\\\r')\n      .replace(/[\\x00-\\x0F]/g,          function(ch) { return '\\\\x0' + hex(ch); })\n      .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function(ch) { return '\\\\x'  + hex(ch); });\n  }\n\n  function describeExpectation(expectation) {\n    return DESCRIBE_EXPECTATION_FNS[expectation.type](expectation);\n  }\n\n  function describeExpected(expected) {\n    var descriptions = new Array(expected.length),\n        i, j;\n\n    for (i = 0; i < expected.length; i++) {\n      descriptions[i] = describeExpectation(expected[i]);\n    }\n\n    descriptions.sort();\n\n    if (descriptions.length > 0) {\n      for (i = 1, j = 1; i < descriptions.length; i++) {\n        if (descriptions[i - 1] !== descriptions[i]) {\n          descriptions[j] = descriptions[i];\n          j++;\n        }\n      }\n      descriptions.length = j;\n    }\n\n    switch (descriptions.length) {\n      case 1:\n        return descriptions[0];\n\n      case 2:\n        return descriptions[0] + \" or \" + descriptions[1];\n\n      default:\n        return descriptions.slice(0, -1).join(\", \")\n          + \", or \"\n          + descriptions[descriptions.length - 1];\n    }\n  }\n\n  function describeFound(found) {\n    return found ? \"\\\"\" + literalEscape(found) + \"\\\"\" : \"end of input\";\n  }\n\n  return \"Expected \" + describeExpected(expected) + \" but \" + describeFound(found) + \" found.\";\n};\n\nfunction peg$parse(input, options) {\n  options = options !== void 0 ? options : {};\n\n  var peg$FAILED = {},\n\n      peg$startRuleFunctions = { Grammar: peg$parseGrammar },\n      peg$startRuleFunction  = peg$parseGrammar,\n\n      peg$c0 = function(initializer, rules) {\n            return {\n              type:        \"grammar\",\n              initializer: extractOptional(initializer, 0),\n              rules:       extractList(rules, 0),\n              location:    location()\n            };\n          },\n      peg$c1 = function(code) {\n            return { type: \"initializer\", code: code, location: location() };\n          },\n      peg$c2 = \"=\",\n      peg$c3 = peg$literalExpectation(\"=\", false),\n      peg$c4 = function(name, displayName, expression) {\n            return {\n              type:        \"rule\",\n              name:        name,\n              expression:  displayName !== null\n                ? {\n                    type:       \"named\",\n                    name:       displayName[0],\n                    expression: expression,\n                    location:   location()\n                  }\n                : expression,\n              location:    location()\n            };\n          },\n      peg$c5 = \"/\",\n      peg$c6 = peg$literalExpectation(\"/\", false),\n      peg$c7 = function(head, tail) {\n            return tail.length > 0\n              ? {\n                  type:         \"choice\",\n                  alternatives: buildList(head, tail, 3),\n                  location:     location()\n                }\n              : head;\n          },\n      peg$c8 = function(expression, code) {\n            return code !== null\n              ? {\n                  type:       \"action\",\n                  expression: expression,\n                  code:       code[1],\n                  location:   location()\n                }\n              : expression;\n          },\n      peg$c9 = function(head, tail) {\n            return tail.length > 0\n              ? {\n                  type:     \"sequence\",\n                  elements: buildList(head, tail, 1),\n                  location: location()\n                }\n              : head;\n          },\n      peg$c10 = \":\",\n      peg$c11 = peg$literalExpectation(\":\", false),\n      peg$c12 = function(label, expression) {\n            return {\n              type:       \"labeled\",\n              label:      label,\n              expression: expression,\n              location:   location()\n            };\n          },\n      peg$c13 = function(operator, expression) {\n            return {\n              type:       OPS_TO_PREFIXED_TYPES[operator],\n              expression: expression,\n              location:   location()\n            };\n          },\n      peg$c14 = \"$\",\n      peg$c15 = peg$literalExpectation(\"$\", false),\n      peg$c16 = \"&\",\n      peg$c17 = peg$literalExpectation(\"&\", false),\n      peg$c18 = \"!\",\n      peg$c19 = peg$literalExpectation(\"!\", false),\n      peg$c20 = function(expression, operator) {\n            return {\n              type:       OPS_TO_SUFFIXED_TYPES[operator],\n              expression: expression,\n              location:   location()\n            };\n          },\n      peg$c21 = \"?\",\n      peg$c22 = peg$literalExpectation(\"?\", false),\n      peg$c23 = \"*\",\n      peg$c24 = peg$literalExpectation(\"*\", false),\n      peg$c25 = \"+\",\n      peg$c26 = peg$literalExpectation(\"+\", false),\n      peg$c27 = \"(\",\n      peg$c28 = peg$literalExpectation(\"(\", false),\n      peg$c29 = \")\",\n      peg$c30 = peg$literalExpectation(\")\", false),\n      peg$c31 = function(expression) {\n            /*\n             * The purpose of the \"group\" AST node is just to isolate label scope. We\n             * don't need to put it around nodes that can't contain any labels or\n             * nodes that already isolate label scope themselves. This leaves us with\n             * \"labeled\" and \"sequence\".\n             */\n            return expression.type === 'labeled' || expression.type === 'sequence'\n                ? { type: \"group\", expression: expression }\n                : expression;\n          },\n      peg$c32 = function(name) {\n            return { type: \"rule_ref\", name: name, location: location() };\n          },\n      peg$c33 = function(operator, code) {\n            return {\n              type:     OPS_TO_SEMANTIC_PREDICATE_TYPES[operator],\n              code:     code,\n              location: location()\n            };\n          },\n      peg$c34 = peg$anyExpectation(),\n      peg$c35 = peg$otherExpectation(\"whitespace\"),\n      peg$c36 = \"\\t\",\n      peg$c37 = peg$literalExpectation(\"\\t\", false),\n      peg$c38 = \"\\x0B\",\n      peg$c39 = peg$literalExpectation(\"\\x0B\", false),\n      peg$c40 = \"\\f\",\n      peg$c41 = peg$literalExpectation(\"\\f\", false),\n      peg$c42 = \" \",\n      peg$c43 = peg$literalExpectation(\" \", false),\n      peg$c44 = \"\\xA0\",\n      peg$c45 = peg$literalExpectation(\"\\xA0\", false),\n      peg$c46 = \"\\uFEFF\",\n      peg$c47 = peg$literalExpectation(\"\\uFEFF\", false),\n      peg$c48 = /^[\\n\\r\\u2028\\u2029]/,\n      peg$c49 = peg$classExpectation([\"\\n\", \"\\r\", \"\\u2028\", \"\\u2029\"], false, false),\n      peg$c50 = peg$otherExpectation(\"end of line\"),\n      peg$c51 = \"\\n\",\n      peg$c52 = peg$literalExpectation(\"\\n\", false),\n      peg$c53 = \"\\r\\n\",\n      peg$c54 = peg$literalExpectation(\"\\r\\n\", false),\n      peg$c55 = \"\\r\",\n      peg$c56 = peg$literalExpectation(\"\\r\", false),\n      peg$c57 = \"\\u2028\",\n      peg$c58 = peg$literalExpectation(\"\\u2028\", false),\n      peg$c59 = \"\\u2029\",\n      peg$c60 = peg$literalExpectation(\"\\u2029\", false),\n      peg$c61 = peg$otherExpectation(\"comment\"),\n      peg$c62 = \"/*\",\n      peg$c63 = peg$literalExpectation(\"/*\", false),\n      peg$c64 = \"*/\",\n      peg$c65 = peg$literalExpectation(\"*/\", false),\n      peg$c66 = \"//\",\n      peg$c67 = peg$literalExpectation(\"//\", false),\n      peg$c68 = function(name) { return name; },\n      peg$c69 = peg$otherExpectation(\"identifier\"),\n      peg$c70 = function(head, tail) { return head + tail.join(\"\"); },\n      peg$c71 = \"_\",\n      peg$c72 = peg$literalExpectation(\"_\", false),\n      peg$c73 = \"\\\\\",\n      peg$c74 = peg$literalExpectation(\"\\\\\", false),\n      peg$c75 = function(sequence) { return sequence; },\n      peg$c76 = \"\\u200C\",\n      peg$c77 = peg$literalExpectation(\"\\u200C\", false),\n      peg$c78 = \"\\u200D\",\n      peg$c79 = peg$literalExpectation(\"\\u200D\", false),\n      peg$c80 = peg$otherExpectation(\"literal\"),\n      peg$c81 = \"i\",\n      peg$c82 = peg$literalExpectation(\"i\", false),\n      peg$c83 = function(value, ignoreCase) {\n            return {\n              type:       \"literal\",\n              value:      value,\n              ignoreCase: ignoreCase !== null,\n              location:   location()\n            };\n          },\n      peg$c84 = peg$otherExpectation(\"string\"),\n      peg$c85 = \"\\\"\",\n      peg$c86 = peg$literalExpectation(\"\\\"\", false),\n      peg$c87 = function(chars) { return chars.join(\"\"); },\n      peg$c88 = \"'\",\n      peg$c89 = peg$literalExpectation(\"'\", false),\n      peg$c90 = function() { return text(); },\n      peg$c91 = peg$otherExpectation(\"character class\"),\n      peg$c92 = \"[\",\n      peg$c93 = peg$literalExpectation(\"[\", false),\n      peg$c94 = \"^\",\n      peg$c95 = peg$literalExpectation(\"^\", false),\n      peg$c96 = \"]\",\n      peg$c97 = peg$literalExpectation(\"]\", false),\n      peg$c98 = function(inverted, parts, ignoreCase) {\n            return {\n              type:       \"class\",\n              parts:      filterEmptyStrings(parts),\n              inverted:   inverted !== null,\n              ignoreCase: ignoreCase !== null,\n              location:   location()\n            };\n          },\n      peg$c99 = \"-\",\n      peg$c100 = peg$literalExpectation(\"-\", false),\n      peg$c101 = function(begin, end) {\n            if (begin.charCodeAt(0) > end.charCodeAt(0)) {\n              error(\n                \"Invalid character range: \" + text() + \".\"\n              );\n            }\n\n            return [begin, end];\n          },\n      peg$c102 = function() { return \"\"; },\n      peg$c103 = \"0\",\n      peg$c104 = peg$literalExpectation(\"0\", false),\n      peg$c105 = function() { return \"\\0\"; },\n      peg$c106 = \"b\",\n      peg$c107 = peg$literalExpectation(\"b\", false),\n      peg$c108 = function() { return \"\\b\";   },\n      peg$c109 = \"f\",\n      peg$c110 = peg$literalExpectation(\"f\", false),\n      peg$c111 = function() { return \"\\f\";   },\n      peg$c112 = \"n\",\n      peg$c113 = peg$literalExpectation(\"n\", false),\n      peg$c114 = function() { return \"\\n\";   },\n      peg$c115 = \"r\",\n      peg$c116 = peg$literalExpectation(\"r\", false),\n      peg$c117 = function() { return \"\\r\";   },\n      peg$c118 = \"t\",\n      peg$c119 = peg$literalExpectation(\"t\", false),\n      peg$c120 = function() { return \"\\t\";   },\n      peg$c121 = \"v\",\n      peg$c122 = peg$literalExpectation(\"v\", false),\n      peg$c123 = function() { return \"\\x0B\"; },\n      peg$c124 = \"x\",\n      peg$c125 = peg$literalExpectation(\"x\", false),\n      peg$c126 = \"u\",\n      peg$c127 = peg$literalExpectation(\"u\", false),\n      peg$c128 = function(digits) {\n            return String.fromCharCode(parseInt(digits, 16));\n          },\n      peg$c129 = /^[0-9]/,\n      peg$c130 = peg$classExpectation([[\"0\", \"9\"]], false, false),\n      peg$c131 = /^[0-9a-f]/i,\n      peg$c132 = peg$classExpectation([[\"0\", \"9\"], [\"a\", \"f\"]], false, true),\n      peg$c133 = \".\",\n      peg$c134 = peg$literalExpectation(\".\", false),\n      peg$c135 = function() { return { type: \"any\", location: location() }; },\n      peg$c136 = peg$otherExpectation(\"code block\"),\n      peg$c137 = \"{\",\n      peg$c138 = peg$literalExpectation(\"{\", false),\n      peg$c139 = \"}\",\n      peg$c140 = peg$literalExpectation(\"}\", false),\n      peg$c141 = function(code) { return code; },\n      peg$c142 = /^[{}]/,\n      peg$c143 = peg$classExpectation([\"{\", \"}\"], false, false),\n      peg$c144 = /^[a-z\\xB5\\xDF-\\xF6\\xF8-\\xFF\\u0101\\u0103\\u0105\\u0107\\u0109\\u010B\\u010D\\u010F\\u0111\\u0113\\u0115\\u0117\\u0119\\u011B\\u011D\\u011F\\u0121\\u0123\\u0125\\u0127\\u0129\\u012B\\u012D\\u012F\\u0131\\u0133\\u0135\\u0137-\\u0138\\u013A\\u013C\\u013E\\u0140\\u0142\\u0144\\u0146\\u0148-\\u0149\\u014B\\u014D\\u014F\\u0151\\u0153\\u0155\\u0157\\u0159\\u015B\\u015D\\u015F\\u0161\\u0163\\u0165\\u0167\\u0169\\u016B\\u016D\\u016F\\u0171\\u0173\\u0175\\u0177\\u017A\\u017C\\u017E-\\u0180\\u0183\\u0185\\u0188\\u018C-\\u018D\\u0192\\u0195\\u0199-\\u019B\\u019E\\u01A1\\u01A3\\u01A5\\u01A8\\u01AA-\\u01AB\\u01AD\\u01B0\\u01B4\\u01B6\\u01B9-\\u01BA\\u01BD-\\u01BF\\u01C6\\u01C9\\u01CC\\u01CE\\u01D0\\u01D2\\u01D4\\u01D6\\u01D8\\u01DA\\u01DC-\\u01DD\\u01DF\\u01E1\\u01E3\\u01E5\\u01E7\\u01E9\\u01EB\\u01ED\\u01EF-\\u01F0\\u01F3\\u01F5\\u01F9\\u01FB\\u01FD\\u01FF\\u0201\\u0203\\u0205\\u0207\\u0209\\u020B\\u020D\\u020F\\u0211\\u0213\\u0215\\u0217\\u0219\\u021B\\u021D\\u021F\\u0221\\u0223\\u0225\\u0227\\u0229\\u022B\\u022D\\u022F\\u0231\\u0233-\\u0239\\u023C\\u023F-\\u0240\\u0242\\u0247\\u0249\\u024B\\u024D\\u024F-\\u0293\\u0295-\\u02AF\\u0371\\u0373\\u0377\\u037B-\\u037D\\u0390\\u03AC-\\u03CE\\u03D0-\\u03D1\\u03D5-\\u03D7\\u03D9\\u03DB\\u03DD\\u03DF\\u03E1\\u03E3\\u03E5\\u03E7\\u03E9\\u03EB\\u03ED\\u03EF-\\u03F3\\u03F5\\u03F8\\u03FB-\\u03FC\\u0430-\\u045F\\u0461\\u0463\\u0465\\u0467\\u0469\\u046B\\u046D\\u046F\\u0471\\u0473\\u0475\\u0477\\u0479\\u047B\\u047D\\u047F\\u0481\\u048B\\u048D\\u048F\\u0491\\u0493\\u0495\\u0497\\u0499\\u049B\\u049D\\u049F\\u04A1\\u04A3\\u04A5\\u04A7\\u04A9\\u04AB\\u04AD\\u04AF\\u04B1\\u04B3\\u04B5\\u04B7\\u04B9\\u04BB\\u04BD\\u04BF\\u04C2\\u04C4\\u04C6\\u04C8\\u04CA\\u04CC\\u04CE-\\u04CF\\u04D1\\u04D3\\u04D5\\u04D7\\u04D9\\u04DB\\u04DD\\u04DF\\u04E1\\u04E3\\u04E5\\u04E7\\u04E9\\u04EB\\u04ED\\u04EF\\u04F1\\u04F3\\u04F5\\u04F7\\u04F9\\u04FB\\u04FD\\u04FF\\u0501\\u0503\\u0505\\u0507\\u0509\\u050B\\u050D\\u050F\\u0511\\u0513\\u0515\\u0517\\u0519\\u051B\\u051D\\u051F\\u0521\\u0523\\u0525\\u0527\\u0529\\u052B\\u052D\\u052F\\u0561-\\u0587\\u13F8-\\u13FD\\u1D00-\\u1D2B\\u1D6B-\\u1D77\\u1D79-\\u1D9A\\u1E01\\u1E03\\u1E05\\u1E07\\u1E09\\u1E0B\\u1E0D\\u1E0F\\u1E11\\u1E13\\u1E15\\u1E17\\u1E19\\u1E1B\\u1E1D\\u1E1F\\u1E21\\u1E23\\u1E25\\u1E27\\u1E29\\u1E2B\\u1E2D\\u1E2F\\u1E31\\u1E33\\u1E35\\u1E37\\u1E39\\u1E3B\\u1E3D\\u1E3F\\u1E41\\u1E43\\u1E45\\u1E47\\u1E49\\u1E4B\\u1E4D\\u1E4F\\u1E51\\u1E53\\u1E55\\u1E57\\u1E59\\u1E5B\\u1E5D\\u1E5F\\u1E61\\u1E63\\u1E65\\u1E67\\u1E69\\u1E6B\\u1E6D\\u1E6F\\u1E71\\u1E73\\u1E75\\u1E77\\u1E79\\u1E7B\\u1E7D\\u1E7F\\u1E81\\u1E83\\u1E85\\u1E87\\u1E89\\u1E8B\\u1E8D\\u1E8F\\u1E91\\u1E93\\u1E95-\\u1E9D\\u1E9F\\u1EA1\\u1EA3\\u1EA5\\u1EA7\\u1EA9\\u1EAB\\u1EAD\\u1EAF\\u1EB1\\u1EB3\\u1EB5\\u1EB7\\u1EB9\\u1EBB\\u1EBD\\u1EBF\\u1EC1\\u1EC3\\u1EC5\\u1EC7\\u1EC9\\u1ECB\\u1ECD\\u1ECF\\u1ED1\\u1ED3\\u1ED5\\u1ED7\\u1ED9\\u1EDB\\u1EDD\\u1EDF\\u1EE1\\u1EE3\\u1EE5\\u1EE7\\u1EE9\\u1EEB\\u1EED\\u1EEF\\u1EF1\\u1EF3\\u1EF5\\u1EF7\\u1EF9\\u1EFB\\u1EFD\\u1EFF-\\u1F07\\u1F10-\\u1F15\\u1F20-\\u1F27\\u1F30-\\u1F37\\u1F40-\\u1F45\\u1F50-\\u1F57\\u1F60-\\u1F67\\u1F70-\\u1F7D\\u1F80-\\u1F87\\u1F90-\\u1F97\\u1FA0-\\u1FA7\\u1FB0-\\u1FB4\\u1FB6-\\u1FB7\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FC7\\u1FD0-\\u1FD3\\u1FD6-\\u1FD7\\u1FE0-\\u1FE7\\u1FF2-\\u1FF4\\u1FF6-\\u1FF7\\u210A\\u210E-\\u210F\\u2113\\u212F\\u2134\\u2139\\u213C-\\u213D\\u2146-\\u2149\\u214E\\u2184\\u2C30-\\u2C5E\\u2C61\\u2C65-\\u2C66\\u2C68\\u2C6A\\u2C6C\\u2C71\\u2C73-\\u2C74\\u2C76-\\u2C7B\\u2C81\\u2C83\\u2C85\\u2C87\\u2C89\\u2C8B\\u2C8D\\u2C8F\\u2C91\\u2C93\\u2C95\\u2C97\\u2C99\\u2C9B\\u2C9D\\u2C9F\\u2CA1\\u2CA3\\u2CA5\\u2CA7\\u2CA9\\u2CAB\\u2CAD\\u2CAF\\u2CB1\\u2CB3\\u2CB5\\u2CB7\\u2CB9\\u2CBB\\u2CBD\\u2CBF\\u2CC1\\u2CC3\\u2CC5\\u2CC7\\u2CC9\\u2CCB\\u2CCD\\u2CCF\\u2CD1\\u2CD3\\u2CD5\\u2CD7\\u2CD9\\u2CDB\\u2CDD\\u2CDF\\u2CE1\\u2CE3-\\u2CE4\\u2CEC\\u2CEE\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\uA641\\uA643\\uA645\\uA647\\uA649\\uA64B\\uA64D\\uA64F\\uA651\\uA653\\uA655\\uA657\\uA659\\uA65B\\uA65D\\uA65F\\uA661\\uA663\\uA665\\uA667\\uA669\\uA66B\\uA66D\\uA681\\uA683\\uA685\\uA687\\uA689\\uA68B\\uA68D\\uA68F\\uA691\\uA693\\uA695\\uA697\\uA699\\uA69B\\uA723\\uA725\\uA727\\uA729\\uA72B\\uA72D\\uA72F-\\uA731\\uA733\\uA735\\uA737\\uA739\\uA73B\\uA73D\\uA73F\\uA741\\uA743\\uA745\\uA747\\uA749\\uA74B\\uA74D\\uA74F\\uA751\\uA753\\uA755\\uA757\\uA759\\uA75B\\uA75D\\uA75F\\uA761\\uA763\\uA765\\uA767\\uA769\\uA76B\\uA76D\\uA76F\\uA771-\\uA778\\uA77A\\uA77C\\uA77F\\uA781\\uA783\\uA785\\uA787\\uA78C\\uA78E\\uA791\\uA793-\\uA795\\uA797\\uA799\\uA79B\\uA79D\\uA79F\\uA7A1\\uA7A3\\uA7A5\\uA7A7\\uA7A9\\uA7B5\\uA7B7\\uA7FA\\uAB30-\\uAB5A\\uAB60-\\uAB65\\uAB70-\\uABBF\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFF41-\\uFF5A]/,\n      peg$c145 = peg$classExpectation([[\"a\", \"z\"], \"\\xB5\", [\"\\xDF\", \"\\xF6\"], [\"\\xF8\", \"\\xFF\"], \"\\u0101\", \"\\u0103\", \"\\u0105\", \"\\u0107\", \"\\u0109\", \"\\u010B\", \"\\u010D\", \"\\u010F\", \"\\u0111\", \"\\u0113\", \"\\u0115\", \"\\u0117\", \"\\u0119\", \"\\u011B\", \"\\u011D\", \"\\u011F\", \"\\u0121\", \"\\u0123\", \"\\u0125\", \"\\u0127\", \"\\u0129\", \"\\u012B\", \"\\u012D\", \"\\u012F\", \"\\u0131\", \"\\u0133\", \"\\u0135\", [\"\\u0137\", \"\\u0138\"], \"\\u013A\", \"\\u013C\", \"\\u013E\", \"\\u0140\", \"\\u0142\", \"\\u0144\", \"\\u0146\", [\"\\u0148\", \"\\u0149\"], \"\\u014B\", \"\\u014D\", \"\\u014F\", \"\\u0151\", \"\\u0153\", \"\\u0155\", \"\\u0157\", \"\\u0159\", \"\\u015B\", \"\\u015D\", \"\\u015F\", \"\\u0161\", \"\\u0163\", \"\\u0165\", \"\\u0167\", \"\\u0169\", \"\\u016B\", \"\\u016D\", \"\\u016F\", \"\\u0171\", \"\\u0173\", \"\\u0175\", \"\\u0177\", \"\\u017A\", \"\\u017C\", [\"\\u017E\", \"\\u0180\"], \"\\u0183\", \"\\u0185\", \"\\u0188\", [\"\\u018C\", \"\\u018D\"], \"\\u0192\", \"\\u0195\", [\"\\u0199\", \"\\u019B\"], \"\\u019E\", \"\\u01A1\", \"\\u01A3\", \"\\u01A5\", \"\\u01A8\", [\"\\u01AA\", \"\\u01AB\"], \"\\u01AD\", \"\\u01B0\", \"\\u01B4\", \"\\u01B6\", [\"\\u01B9\", \"\\u01BA\"], [\"\\u01BD\", \"\\u01BF\"], \"\\u01C6\", \"\\u01C9\", \"\\u01CC\", \"\\u01CE\", \"\\u01D0\", \"\\u01D2\", \"\\u01D4\", \"\\u01D6\", \"\\u01D8\", \"\\u01DA\", [\"\\u01DC\", \"\\u01DD\"], \"\\u01DF\", \"\\u01E1\", \"\\u01E3\", \"\\u01E5\", \"\\u01E7\", \"\\u01E9\", \"\\u01EB\", \"\\u01ED\", [\"\\u01EF\", \"\\u01F0\"], \"\\u01F3\", \"\\u01F5\", \"\\u01F9\", \"\\u01FB\", \"\\u01FD\", \"\\u01FF\", \"\\u0201\", \"\\u0203\", \"\\u0205\", \"\\u0207\", \"\\u0209\", \"\\u020B\", \"\\u020D\", \"\\u020F\", \"\\u0211\", \"\\u0213\", \"\\u0215\", \"\\u0217\", \"\\u0219\", \"\\u021B\", \"\\u021D\", \"\\u021F\", \"\\u0221\", \"\\u0223\", \"\\u0225\", \"\\u0227\", \"\\u0229\", \"\\u022B\", \"\\u022D\", \"\\u022F\", \"\\u0231\", [\"\\u0233\", \"\\u0239\"], \"\\u023C\", [\"\\u023F\", \"\\u0240\"], \"\\u0242\", \"\\u0247\", \"\\u0249\", \"\\u024B\", \"\\u024D\", [\"\\u024F\", \"\\u0293\"], [\"\\u0295\", \"\\u02AF\"], \"\\u0371\", \"\\u0373\", \"\\u0377\", [\"\\u037B\", \"\\u037D\"], \"\\u0390\", [\"\\u03AC\", \"\\u03CE\"], [\"\\u03D0\", \"\\u03D1\"], [\"\\u03D5\", \"\\u03D7\"], \"\\u03D9\", \"\\u03DB\", \"\\u03DD\", \"\\u03DF\", \"\\u03E1\", \"\\u03E3\", \"\\u03E5\", \"\\u03E7\", \"\\u03E9\", \"\\u03EB\", \"\\u03ED\", [\"\\u03EF\", \"\\u03F3\"], \"\\u03F5\", \"\\u03F8\", [\"\\u03FB\", \"\\u03FC\"], [\"\\u0430\", \"\\u045F\"], \"\\u0461\", \"\\u0463\", \"\\u0465\", \"\\u0467\", \"\\u0469\", \"\\u046B\", \"\\u046D\", \"\\u046F\", \"\\u0471\", \"\\u0473\", \"\\u0475\", \"\\u0477\", \"\\u0479\", \"\\u047B\", \"\\u047D\", \"\\u047F\", \"\\u0481\", \"\\u048B\", \"\\u048D\", \"\\u048F\", \"\\u0491\", \"\\u0493\", \"\\u0495\", \"\\u0497\", \"\\u0499\", \"\\u049B\", \"\\u049D\", \"\\u049F\", \"\\u04A1\", \"\\u04A3\", \"\\u04A5\", \"\\u04A7\", \"\\u04A9\", \"\\u04AB\", \"\\u04AD\", \"\\u04AF\", \"\\u04B1\", \"\\u04B3\", \"\\u04B5\", \"\\u04B7\", \"\\u04B9\", \"\\u04BB\", \"\\u04BD\", \"\\u04BF\", \"\\u04C2\", \"\\u04C4\", \"\\u04C6\", \"\\u04C8\", \"\\u04CA\", \"\\u04CC\", [\"\\u04CE\", \"\\u04CF\"], \"\\u04D1\", \"\\u04D3\", \"\\u04D5\", \"\\u04D7\", \"\\u04D9\", \"\\u04DB\", \"\\u04DD\", \"\\u04DF\", \"\\u04E1\", \"\\u04E3\", \"\\u04E5\", \"\\u04E7\", \"\\u04E9\", \"\\u04EB\", \"\\u04ED\", \"\\u04EF\", \"\\u04F1\", \"\\u04F3\", \"\\u04F5\", \"\\u04F7\", \"\\u04F9\", \"\\u04FB\", \"\\u04FD\", \"\\u04FF\", \"\\u0501\", \"\\u0503\", \"\\u0505\", \"\\u0507\", \"\\u0509\", \"\\u050B\", \"\\u050D\", \"\\u050F\", \"\\u0511\", \"\\u0513\", \"\\u0515\", \"\\u0517\", \"\\u0519\", \"\\u051B\", \"\\u051D\", \"\\u051F\", \"\\u0521\", \"\\u0523\", \"\\u0525\", \"\\u0527\", \"\\u0529\", \"\\u052B\", \"\\u052D\", \"\\u052F\", [\"\\u0561\", \"\\u0587\"], [\"\\u13F8\", \"\\u13FD\"], [\"\\u1D00\", \"\\u1D2B\"], [\"\\u1D6B\", \"\\u1D77\"], [\"\\u1D79\", \"\\u1D9A\"], \"\\u1E01\", \"\\u1E03\", \"\\u1E05\", \"\\u1E07\", \"\\u1E09\", \"\\u1E0B\", \"\\u1E0D\", \"\\u1E0F\", \"\\u1E11\", \"\\u1E13\", \"\\u1E15\", \"\\u1E17\", \"\\u1E19\", \"\\u1E1B\", \"\\u1E1D\", \"\\u1E1F\", \"\\u1E21\", \"\\u1E23\", \"\\u1E25\", \"\\u1E27\", \"\\u1E29\", \"\\u1E2B\", \"\\u1E2D\", \"\\u1E2F\", \"\\u1E31\", \"\\u1E33\", \"\\u1E35\", \"\\u1E37\", \"\\u1E39\", \"\\u1E3B\", \"\\u1E3D\", \"\\u1E3F\", \"\\u1E41\", \"\\u1E43\", \"\\u1E45\", \"\\u1E47\", \"\\u1E49\", \"\\u1E4B\", \"\\u1E4D\", \"\\u1E4F\", \"\\u1E51\", \"\\u1E53\", \"\\u1E55\", \"\\u1E57\", \"\\u1E59\", \"\\u1E5B\", \"\\u1E5D\", \"\\u1E5F\", \"\\u1E61\", \"\\u1E63\", \"\\u1E65\", \"\\u1E67\", \"\\u1E69\", \"\\u1E6B\", \"\\u1E6D\", \"\\u1E6F\", \"\\u1E71\", \"\\u1E73\", \"\\u1E75\", \"\\u1E77\", \"\\u1E79\", \"\\u1E7B\", \"\\u1E7D\", \"\\u1E7F\", \"\\u1E81\", \"\\u1E83\", \"\\u1E85\", \"\\u1E87\", \"\\u1E89\", \"\\u1E8B\", \"\\u1E8D\", \"\\u1E8F\", \"\\u1E91\", \"\\u1E93\", [\"\\u1E95\", \"\\u1E9D\"], \"\\u1E9F\", \"\\u1EA1\", \"\\u1EA3\", \"\\u1EA5\", \"\\u1EA7\", \"\\u1EA9\", \"\\u1EAB\", \"\\u1EAD\", \"\\u1EAF\", \"\\u1EB1\", \"\\u1EB3\", \"\\u1EB5\", \"\\u1EB7\", \"\\u1EB9\", \"\\u1EBB\", \"\\u1EBD\", \"\\u1EBF\", \"\\u1EC1\", \"\\u1EC3\", \"\\u1EC5\", \"\\u1EC7\", \"\\u1EC9\", \"\\u1ECB\", \"\\u1ECD\", \"\\u1ECF\", \"\\u1ED1\", \"\\u1ED3\", \"\\u1ED5\", \"\\u1ED7\", \"\\u1ED9\", \"\\u1EDB\", \"\\u1EDD\", \"\\u1EDF\", \"\\u1EE1\", \"\\u1EE3\", \"\\u1EE5\", \"\\u1EE7\", \"\\u1EE9\", \"\\u1EEB\", \"\\u1EED\", \"\\u1EEF\", \"\\u1EF1\", \"\\u1EF3\", \"\\u1EF5\", \"\\u1EF7\", \"\\u1EF9\", \"\\u1EFB\", \"\\u1EFD\", [\"\\u1EFF\", \"\\u1F07\"], [\"\\u1F10\", \"\\u1F15\"], [\"\\u1F20\", \"\\u1F27\"], [\"\\u1F30\", \"\\u1F37\"], [\"\\u1F40\", \"\\u1F45\"], [\"\\u1F50\", \"\\u1F57\"], [\"\\u1F60\", \"\\u1F67\"], [\"\\u1F70\", \"\\u1F7D\"], [\"\\u1F80\", \"\\u1F87\"], [\"\\u1F90\", \"\\u1F97\"], [\"\\u1FA0\", \"\\u1FA7\"], [\"\\u1FB0\", \"\\u1FB4\"], [\"\\u1FB6\", \"\\u1FB7\"], \"\\u1FBE\", [\"\\u1FC2\", \"\\u1FC4\"], [\"\\u1FC6\", \"\\u1FC7\"], [\"\\u1FD0\", \"\\u1FD3\"], [\"\\u1FD6\", \"\\u1FD7\"], [\"\\u1FE0\", \"\\u1FE7\"], [\"\\u1FF2\", \"\\u1FF4\"], [\"\\u1FF6\", \"\\u1FF7\"], \"\\u210A\", [\"\\u210E\", \"\\u210F\"], \"\\u2113\", \"\\u212F\", \"\\u2134\", \"\\u2139\", [\"\\u213C\", \"\\u213D\"], [\"\\u2146\", \"\\u2149\"], \"\\u214E\", \"\\u2184\", [\"\\u2C30\", \"\\u2C5E\"], \"\\u2C61\", [\"\\u2C65\", \"\\u2C66\"], \"\\u2C68\", \"\\u2C6A\", \"\\u2C6C\", \"\\u2C71\", [\"\\u2C73\", \"\\u2C74\"], [\"\\u2C76\", \"\\u2C7B\"], \"\\u2C81\", \"\\u2C83\", \"\\u2C85\", \"\\u2C87\", \"\\u2C89\", \"\\u2C8B\", \"\\u2C8D\", \"\\u2C8F\", \"\\u2C91\", \"\\u2C93\", \"\\u2C95\", \"\\u2C97\", \"\\u2C99\", \"\\u2C9B\", \"\\u2C9D\", \"\\u2C9F\", \"\\u2CA1\", \"\\u2CA3\", \"\\u2CA5\", \"\\u2CA7\", \"\\u2CA9\", \"\\u2CAB\", \"\\u2CAD\", \"\\u2CAF\", \"\\u2CB1\", \"\\u2CB3\", \"\\u2CB5\", \"\\u2CB7\", \"\\u2CB9\", \"\\u2CBB\", \"\\u2CBD\", \"\\u2CBF\", \"\\u2CC1\", \"\\u2CC3\", \"\\u2CC5\", \"\\u2CC7\", \"\\u2CC9\", \"\\u2CCB\", \"\\u2CCD\", \"\\u2CCF\", \"\\u2CD1\", \"\\u2CD3\", \"\\u2CD5\", \"\\u2CD7\", \"\\u2CD9\", \"\\u2CDB\", \"\\u2CDD\", \"\\u2CDF\", \"\\u2CE1\", [\"\\u2CE3\", \"\\u2CE4\"], \"\\u2CEC\", \"\\u2CEE\", \"\\u2CF3\", [\"\\u2D00\", \"\\u2D25\"], \"\\u2D27\", \"\\u2D2D\", \"\\uA641\", \"\\uA643\", \"\\uA645\", \"\\uA647\", \"\\uA649\", \"\\uA64B\", \"\\uA64D\", \"\\uA64F\", \"\\uA651\", \"\\uA653\", \"\\uA655\", \"\\uA657\", \"\\uA659\", \"\\uA65B\", \"\\uA65D\", \"\\uA65F\", \"\\uA661\", \"\\uA663\", \"\\uA665\", \"\\uA667\", \"\\uA669\", \"\\uA66B\", \"\\uA66D\", \"\\uA681\", \"\\uA683\", \"\\uA685\", \"\\uA687\", \"\\uA689\", \"\\uA68B\", \"\\uA68D\", \"\\uA68F\", \"\\uA691\", \"\\uA693\", \"\\uA695\", \"\\uA697\", \"\\uA699\", \"\\uA69B\", \"\\uA723\", \"\\uA725\", \"\\uA727\", \"\\uA729\", \"\\uA72B\", \"\\uA72D\", [\"\\uA72F\", \"\\uA731\"], \"\\uA733\", \"\\uA735\", \"\\uA737\", \"\\uA739\", \"\\uA73B\", \"\\uA73D\", \"\\uA73F\", \"\\uA741\", \"\\uA743\", \"\\uA745\", \"\\uA747\", \"\\uA749\", \"\\uA74B\", \"\\uA74D\", \"\\uA74F\", \"\\uA751\", \"\\uA753\", \"\\uA755\", \"\\uA757\", \"\\uA759\", \"\\uA75B\", \"\\uA75D\", \"\\uA75F\", \"\\uA761\", \"\\uA763\", \"\\uA765\", \"\\uA767\", \"\\uA769\", \"\\uA76B\", \"\\uA76D\", \"\\uA76F\", [\"\\uA771\", \"\\uA778\"], \"\\uA77A\", \"\\uA77C\", \"\\uA77F\", \"\\uA781\", \"\\uA783\", \"\\uA785\", \"\\uA787\", \"\\uA78C\", \"\\uA78E\", \"\\uA791\", [\"\\uA793\", \"\\uA795\"], \"\\uA797\", \"\\uA799\", \"\\uA79B\", \"\\uA79D\", \"\\uA79F\", \"\\uA7A1\", \"\\uA7A3\", \"\\uA7A5\", \"\\uA7A7\", \"\\uA7A9\", \"\\uA7B5\", \"\\uA7B7\", \"\\uA7FA\", [\"\\uAB30\", \"\\uAB5A\"], [\"\\uAB60\", \"\\uAB65\"], [\"\\uAB70\", \"\\uABBF\"], [\"\\uFB00\", \"\\uFB06\"], [\"\\uFB13\", \"\\uFB17\"], [\"\\uFF41\", \"\\uFF5A\"]], false, false),\n      peg$c146 = /^[\\u02B0-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0374\\u037A\\u0559\\u0640\\u06E5-\\u06E6\\u07F4-\\u07F5\\u07FA\\u081A\\u0824\\u0828\\u0971\\u0E46\\u0EC6\\u10FC\\u17D7\\u1843\\u1AA7\\u1C78-\\u1C7D\\u1D2C-\\u1D6A\\u1D78\\u1D9B-\\u1DBF\\u2071\\u207F\\u2090-\\u209C\\u2C7C-\\u2C7D\\u2D6F\\u2E2F\\u3005\\u3031-\\u3035\\u303B\\u309D-\\u309E\\u30FC-\\u30FE\\uA015\\uA4F8-\\uA4FD\\uA60C\\uA67F\\uA69C-\\uA69D\\uA717-\\uA71F\\uA770\\uA788\\uA7F8-\\uA7F9\\uA9CF\\uA9E6\\uAA70\\uAADD\\uAAF3-\\uAAF4\\uAB5C-\\uAB5F\\uFF70\\uFF9E-\\uFF9F]/,\n      peg$c147 = peg$classExpectation([[\"\\u02B0\", \"\\u02C1\"], [\"\\u02C6\", \"\\u02D1\"], [\"\\u02E0\", \"\\u02E4\"], \"\\u02EC\", \"\\u02EE\", \"\\u0374\", \"\\u037A\", \"\\u0559\", \"\\u0640\", [\"\\u06E5\", \"\\u06E6\"], [\"\\u07F4\", \"\\u07F5\"], \"\\u07FA\", \"\\u081A\", \"\\u0824\", \"\\u0828\", \"\\u0971\", \"\\u0E46\", \"\\u0EC6\", \"\\u10FC\", \"\\u17D7\", \"\\u1843\", \"\\u1AA7\", [\"\\u1C78\", \"\\u1C7D\"], [\"\\u1D2C\", \"\\u1D6A\"], \"\\u1D78\", [\"\\u1D9B\", \"\\u1DBF\"], \"\\u2071\", \"\\u207F\", [\"\\u2090\", \"\\u209C\"], [\"\\u2C7C\", \"\\u2C7D\"], \"\\u2D6F\", \"\\u2E2F\", \"\\u3005\", [\"\\u3031\", \"\\u3035\"], \"\\u303B\", [\"\\u309D\", \"\\u309E\"], [\"\\u30FC\", \"\\u30FE\"], \"\\uA015\", [\"\\uA4F8\", \"\\uA4FD\"], \"\\uA60C\", \"\\uA67F\", [\"\\uA69C\", \"\\uA69D\"], [\"\\uA717\", \"\\uA71F\"], \"\\uA770\", \"\\uA788\", [\"\\uA7F8\", \"\\uA7F9\"], \"\\uA9CF\", \"\\uA9E6\", \"\\uAA70\", \"\\uAADD\", [\"\\uAAF3\", \"\\uAAF4\"], [\"\\uAB5C\", \"\\uAB5F\"], \"\\uFF70\", [\"\\uFF9E\", \"\\uFF9F\"]], false, false),\n      peg$c148 = /^[\\xAA\\xBA\\u01BB\\u01C0-\\u01C3\\u0294\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u063F\\u0641-\\u064A\\u066E-\\u066F\\u0671-\\u06D3\\u06D5\\u06EE-\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u0800-\\u0815\\u0840-\\u0858\\u08A0-\\u08B4\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0972-\\u0980\\u0985-\\u098C\\u098F-\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC-\\u09DD\\u09DF-\\u09E1\\u09F0-\\u09F1\\u0A05-\\u0A0A\\u0A0F-\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32-\\u0A33\\u0A35-\\u0A36\\u0A38-\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2-\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0-\\u0AE1\\u0AF9\\u0B05-\\u0B0C\\u0B0F-\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32-\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C-\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99-\\u0B9A\\u0B9C\\u0B9E-\\u0B9F\\u0BA3-\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C60-\\u0C61\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0-\\u0CE1\\u0CF1-\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D5F-\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32-\\u0E33\\u0E40-\\u0E45\\u0E81-\\u0E82\\u0E84\\u0E87-\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA-\\u0EAB\\u0EAD-\\u0EB0\\u0EB2-\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065-\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10D0-\\u10FA\\u10FD-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16F1-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17DC\\u1820-\\u1842\\u1844-\\u1877\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE-\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C77\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5-\\u1CF6\\u2135-\\u2138\\u2D30-\\u2D67\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u3006\\u303C\\u3041-\\u3096\\u309F\\u30A1-\\u30FA\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FD5\\uA000-\\uA014\\uA016-\\uA48C\\uA4D0-\\uA4F7\\uA500-\\uA60B\\uA610-\\uA61F\\uA62A-\\uA62B\\uA66E\\uA6A0-\\uA6E5\\uA78F\\uA7F7\\uA7FB-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9E0-\\uA9E4\\uA9E7-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA6F\\uAA71-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5-\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADC\\uAAE0-\\uAAEA\\uAAF2\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uABC0-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40-\\uFB41\\uFB43-\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF66-\\uFF6F\\uFF71-\\uFF9D\\uFFA0-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]/,\n      peg$c149 = peg$classExpectation([\"\\xAA\", \"\\xBA\", \"\\u01BB\", [\"\\u01C0\", \"\\u01C3\"], \"\\u0294\", [\"\\u05D0\", \"\\u05EA\"], [\"\\u05F0\", \"\\u05F2\"], [\"\\u0620\", \"\\u063F\"], [\"\\u0641\", \"\\u064A\"], [\"\\u066E\", \"\\u066F\"], [\"\\u0671\", \"\\u06D3\"], \"\\u06D5\", [\"\\u06EE\", \"\\u06EF\"], [\"\\u06FA\", \"\\u06FC\"], \"\\u06FF\", \"\\u0710\", [\"\\u0712\", \"\\u072F\"], [\"\\u074D\", \"\\u07A5\"], \"\\u07B1\", [\"\\u07CA\", \"\\u07EA\"], [\"\\u0800\", \"\\u0815\"], [\"\\u0840\", \"\\u0858\"], [\"\\u08A0\", \"\\u08B4\"], [\"\\u0904\", \"\\u0939\"], \"\\u093D\", \"\\u0950\", [\"\\u0958\", \"\\u0961\"], [\"\\u0972\", \"\\u0980\"], [\"\\u0985\", \"\\u098C\"], [\"\\u098F\", \"\\u0990\"], [\"\\u0993\", \"\\u09A8\"], [\"\\u09AA\", \"\\u09B0\"], \"\\u09B2\", [\"\\u09B6\", \"\\u09B9\"], \"\\u09BD\", \"\\u09CE\", [\"\\u09DC\", \"\\u09DD\"], [\"\\u09DF\", \"\\u09E1\"], [\"\\u09F0\", \"\\u09F1\"], [\"\\u0A05\", \"\\u0A0A\"], [\"\\u0A0F\", \"\\u0A10\"], [\"\\u0A13\", \"\\u0A28\"], [\"\\u0A2A\", \"\\u0A30\"], [\"\\u0A32\", \"\\u0A33\"], [\"\\u0A35\", \"\\u0A36\"], [\"\\u0A38\", \"\\u0A39\"], [\"\\u0A59\", \"\\u0A5C\"], \"\\u0A5E\", [\"\\u0A72\", \"\\u0A74\"], [\"\\u0A85\", \"\\u0A8D\"], [\"\\u0A8F\", \"\\u0A91\"], [\"\\u0A93\", \"\\u0AA8\"], [\"\\u0AAA\", \"\\u0AB0\"], [\"\\u0AB2\", \"\\u0AB3\"], [\"\\u0AB5\", \"\\u0AB9\"], \"\\u0ABD\", \"\\u0AD0\", [\"\\u0AE0\", \"\\u0AE1\"], \"\\u0AF9\", [\"\\u0B05\", \"\\u0B0C\"], [\"\\u0B0F\", \"\\u0B10\"], [\"\\u0B13\", \"\\u0B28\"], [\"\\u0B2A\", \"\\u0B30\"], [\"\\u0B32\", \"\\u0B33\"], [\"\\u0B35\", \"\\u0B39\"], \"\\u0B3D\", [\"\\u0B5C\", \"\\u0B5D\"], [\"\\u0B5F\", \"\\u0B61\"], \"\\u0B71\", \"\\u0B83\", [\"\\u0B85\", \"\\u0B8A\"], [\"\\u0B8E\", \"\\u0B90\"], [\"\\u0B92\", \"\\u0B95\"], [\"\\u0B99\", \"\\u0B9A\"], \"\\u0B9C\", [\"\\u0B9E\", \"\\u0B9F\"], [\"\\u0BA3\", \"\\u0BA4\"], [\"\\u0BA8\", \"\\u0BAA\"], [\"\\u0BAE\", \"\\u0BB9\"], \"\\u0BD0\", [\"\\u0C05\", \"\\u0C0C\"], [\"\\u0C0E\", \"\\u0C10\"], [\"\\u0C12\", \"\\u0C28\"], [\"\\u0C2A\", \"\\u0C39\"], \"\\u0C3D\", [\"\\u0C58\", \"\\u0C5A\"], [\"\\u0C60\", \"\\u0C61\"], [\"\\u0C85\", \"\\u0C8C\"], [\"\\u0C8E\", \"\\u0C90\"], [\"\\u0C92\", \"\\u0CA8\"], [\"\\u0CAA\", \"\\u0CB3\"], [\"\\u0CB5\", \"\\u0CB9\"], \"\\u0CBD\", \"\\u0CDE\", [\"\\u0CE0\", \"\\u0CE1\"], [\"\\u0CF1\", \"\\u0CF2\"], [\"\\u0D05\", \"\\u0D0C\"], [\"\\u0D0E\", \"\\u0D10\"], [\"\\u0D12\", \"\\u0D3A\"], \"\\u0D3D\", \"\\u0D4E\", [\"\\u0D5F\", \"\\u0D61\"], [\"\\u0D7A\", \"\\u0D7F\"], [\"\\u0D85\", \"\\u0D96\"], [\"\\u0D9A\", \"\\u0DB1\"], [\"\\u0DB3\", \"\\u0DBB\"], \"\\u0DBD\", [\"\\u0DC0\", \"\\u0DC6\"], [\"\\u0E01\", \"\\u0E30\"], [\"\\u0E32\", \"\\u0E33\"], [\"\\u0E40\", \"\\u0E45\"], [\"\\u0E81\", \"\\u0E82\"], \"\\u0E84\", [\"\\u0E87\", \"\\u0E88\"], \"\\u0E8A\", \"\\u0E8D\", [\"\\u0E94\", \"\\u0E97\"], [\"\\u0E99\", \"\\u0E9F\"], [\"\\u0EA1\", \"\\u0EA3\"], \"\\u0EA5\", \"\\u0EA7\", [\"\\u0EAA\", \"\\u0EAB\"], [\"\\u0EAD\", \"\\u0EB0\"], [\"\\u0EB2\", \"\\u0EB3\"], \"\\u0EBD\", [\"\\u0EC0\", \"\\u0EC4\"], [\"\\u0EDC\", \"\\u0EDF\"], \"\\u0F00\", [\"\\u0F40\", \"\\u0F47\"], [\"\\u0F49\", \"\\u0F6C\"], [\"\\u0F88\", \"\\u0F8C\"], [\"\\u1000\", \"\\u102A\"], \"\\u103F\", [\"\\u1050\", \"\\u1055\"], [\"\\u105A\", \"\\u105D\"], \"\\u1061\", [\"\\u1065\", \"\\u1066\"], [\"\\u106E\", \"\\u1070\"], [\"\\u1075\", \"\\u1081\"], \"\\u108E\", [\"\\u10D0\", \"\\u10FA\"], [\"\\u10FD\", \"\\u1248\"], [\"\\u124A\", \"\\u124D\"], [\"\\u1250\", \"\\u1256\"], \"\\u1258\", [\"\\u125A\", \"\\u125D\"], [\"\\u1260\", \"\\u1288\"], [\"\\u128A\", \"\\u128D\"], [\"\\u1290\", \"\\u12B0\"], [\"\\u12B2\", \"\\u12B5\"], [\"\\u12B8\", \"\\u12BE\"], \"\\u12C0\", [\"\\u12C2\", \"\\u12C5\"], [\"\\u12C8\", \"\\u12D6\"], [\"\\u12D8\", \"\\u1310\"], [\"\\u1312\", \"\\u1315\"], [\"\\u1318\", \"\\u135A\"], [\"\\u1380\", \"\\u138F\"], [\"\\u1401\", \"\\u166C\"], [\"\\u166F\", \"\\u167F\"], [\"\\u1681\", \"\\u169A\"], [\"\\u16A0\", \"\\u16EA\"], [\"\\u16F1\", \"\\u16F8\"], [\"\\u1700\", \"\\u170C\"], [\"\\u170E\", \"\\u1711\"], [\"\\u1720\", \"\\u1731\"], [\"\\u1740\", \"\\u1751\"], [\"\\u1760\", \"\\u176C\"], [\"\\u176E\", \"\\u1770\"], [\"\\u1780\", \"\\u17B3\"], \"\\u17DC\", [\"\\u1820\", \"\\u1842\"], [\"\\u1844\", \"\\u1877\"], [\"\\u1880\", \"\\u18A8\"], \"\\u18AA\", [\"\\u18B0\", \"\\u18F5\"], [\"\\u1900\", \"\\u191E\"], [\"\\u1950\", \"\\u196D\"], [\"\\u1970\", \"\\u1974\"], [\"\\u1980\", \"\\u19AB\"], [\"\\u19B0\", \"\\u19C9\"], [\"\\u1A00\", \"\\u1A16\"], [\"\\u1A20\", \"\\u1A54\"], [\"\\u1B05\", \"\\u1B33\"], [\"\\u1B45\", \"\\u1B4B\"], [\"\\u1B83\", \"\\u1BA0\"], [\"\\u1BAE\", \"\\u1BAF\"], [\"\\u1BBA\", \"\\u1BE5\"], [\"\\u1C00\", \"\\u1C23\"], [\"\\u1C4D\", \"\\u1C4F\"], [\"\\u1C5A\", \"\\u1C77\"], [\"\\u1CE9\", \"\\u1CEC\"], [\"\\u1CEE\", \"\\u1CF1\"], [\"\\u1CF5\", \"\\u1CF6\"], [\"\\u2135\", \"\\u2138\"], [\"\\u2D30\", \"\\u2D67\"], [\"\\u2D80\", \"\\u2D96\"], [\"\\u2DA0\", \"\\u2DA6\"], [\"\\u2DA8\", \"\\u2DAE\"], [\"\\u2DB0\", \"\\u2DB6\"], [\"\\u2DB8\", \"\\u2DBE\"], [\"\\u2DC0\", \"\\u2DC6\"], [\"\\u2DC8\", \"\\u2DCE\"], [\"\\u2DD0\", \"\\u2DD6\"], [\"\\u2DD8\", \"\\u2DDE\"], \"\\u3006\", \"\\u303C\", [\"\\u3041\", \"\\u3096\"], \"\\u309F\", [\"\\u30A1\", \"\\u30FA\"], \"\\u30FF\", [\"\\u3105\", \"\\u312D\"], [\"\\u3131\", \"\\u318E\"], [\"\\u31A0\", \"\\u31BA\"], [\"\\u31F0\", \"\\u31FF\"], [\"\\u3400\", \"\\u4DB5\"], [\"\\u4E00\", \"\\u9FD5\"], [\"\\uA000\", \"\\uA014\"], [\"\\uA016\", \"\\uA48C\"], [\"\\uA4D0\", \"\\uA4F7\"], [\"\\uA500\", \"\\uA60B\"], [\"\\uA610\", \"\\uA61F\"], [\"\\uA62A\", \"\\uA62B\"], \"\\uA66E\", [\"\\uA6A0\", \"\\uA6E5\"], \"\\uA78F\", \"\\uA7F7\", [\"\\uA7FB\", \"\\uA801\"], [\"\\uA803\", \"\\uA805\"], [\"\\uA807\", \"\\uA80A\"], [\"\\uA80C\", \"\\uA822\"], [\"\\uA840\", \"\\uA873\"], [\"\\uA882\", \"\\uA8B3\"], [\"\\uA8F2\", \"\\uA8F7\"], \"\\uA8FB\", \"\\uA8FD\", [\"\\uA90A\", \"\\uA925\"], [\"\\uA930\", \"\\uA946\"], [\"\\uA960\", \"\\uA97C\"], [\"\\uA984\", \"\\uA9B2\"], [\"\\uA9E0\", \"\\uA9E4\"], [\"\\uA9E7\", \"\\uA9EF\"], [\"\\uA9FA\", \"\\uA9FE\"], [\"\\uAA00\", \"\\uAA28\"], [\"\\uAA40\", \"\\uAA42\"], [\"\\uAA44\", \"\\uAA4B\"], [\"\\uAA60\", \"\\uAA6F\"], [\"\\uAA71\", \"\\uAA76\"], \"\\uAA7A\", [\"\\uAA7E\", \"\\uAAAF\"], \"\\uAAB1\", [\"\\uAAB5\", \"\\uAAB6\"], [\"\\uAAB9\", \"\\uAABD\"], \"\\uAAC0\", \"\\uAAC2\", [\"\\uAADB\", \"\\uAADC\"], [\"\\uAAE0\", \"\\uAAEA\"], \"\\uAAF2\", [\"\\uAB01\", \"\\uAB06\"], [\"\\uAB09\", \"\\uAB0E\"], [\"\\uAB11\", \"\\uAB16\"], [\"\\uAB20\", \"\\uAB26\"], [\"\\uAB28\", \"\\uAB2E\"], [\"\\uABC0\", \"\\uABE2\"], [\"\\uAC00\", \"\\uD7A3\"], [\"\\uD7B0\", \"\\uD7C6\"], [\"\\uD7CB\", \"\\uD7FB\"], [\"\\uF900\", \"\\uFA6D\"], [\"\\uFA70\", \"\\uFAD9\"], \"\\uFB1D\", [\"\\uFB1F\", \"\\uFB28\"], [\"\\uFB2A\", \"\\uFB36\"], [\"\\uFB38\", \"\\uFB3C\"], \"\\uFB3E\", [\"\\uFB40\", \"\\uFB41\"], [\"\\uFB43\", \"\\uFB44\"], [\"\\uFB46\", \"\\uFBB1\"], [\"\\uFBD3\", \"\\uFD3D\"], [\"\\uFD50\", \"\\uFD8F\"], [\"\\uFD92\", \"\\uFDC7\"], [\"\\uFDF0\", \"\\uFDFB\"], [\"\\uFE70\", \"\\uFE74\"], [\"\\uFE76\", \"\\uFEFC\"], [\"\\uFF66\", \"\\uFF6F\"], [\"\\uFF71\", \"\\uFF9D\"], [\"\\uFFA0\", \"\\uFFBE\"], [\"\\uFFC2\", \"\\uFFC7\"], [\"\\uFFCA\", \"\\uFFCF\"], [\"\\uFFD2\", \"\\uFFD7\"], [\"\\uFFDA\", \"\\uFFDC\"]], false, false),\n      peg$c150 = /^[\\u01C5\\u01C8\\u01CB\\u01F2\\u1F88-\\u1F8F\\u1F98-\\u1F9F\\u1FA8-\\u1FAF\\u1FBC\\u1FCC\\u1FFC]/,\n      peg$c151 = peg$classExpectation([\"\\u01C5\", \"\\u01C8\", \"\\u01CB\", \"\\u01F2\", [\"\\u1F88\", \"\\u1F8F\"], [\"\\u1F98\", \"\\u1F9F\"], [\"\\u1FA8\", \"\\u1FAF\"], \"\\u1FBC\", \"\\u1FCC\", \"\\u1FFC\"], false, false),\n      peg$c152 = /^[A-Z\\xC0-\\xD6\\xD8-\\xDE\\u0100\\u0102\\u0104\\u0106\\u0108\\u010A\\u010C\\u010E\\u0110\\u0112\\u0114\\u0116\\u0118\\u011A\\u011C\\u011E\\u0120\\u0122\\u0124\\u0126\\u0128\\u012A\\u012C\\u012E\\u0130\\u0132\\u0134\\u0136\\u0139\\u013B\\u013D\\u013F\\u0141\\u0143\\u0145\\u0147\\u014A\\u014C\\u014E\\u0150\\u0152\\u0154\\u0156\\u0158\\u015A\\u015C\\u015E\\u0160\\u0162\\u0164\\u0166\\u0168\\u016A\\u016C\\u016E\\u0170\\u0172\\u0174\\u0176\\u0178-\\u0179\\u017B\\u017D\\u0181-\\u0182\\u0184\\u0186-\\u0187\\u0189-\\u018B\\u018E-\\u0191\\u0193-\\u0194\\u0196-\\u0198\\u019C-\\u019D\\u019F-\\u01A0\\u01A2\\u01A4\\u01A6-\\u01A7\\u01A9\\u01AC\\u01AE-\\u01AF\\u01B1-\\u01B3\\u01B5\\u01B7-\\u01B8\\u01BC\\u01C4\\u01C7\\u01CA\\u01CD\\u01CF\\u01D1\\u01D3\\u01D5\\u01D7\\u01D9\\u01DB\\u01DE\\u01E0\\u01E2\\u01E4\\u01E6\\u01E8\\u01EA\\u01EC\\u01EE\\u01F1\\u01F4\\u01F6-\\u01F8\\u01FA\\u01FC\\u01FE\\u0200\\u0202\\u0204\\u0206\\u0208\\u020A\\u020C\\u020E\\u0210\\u0212\\u0214\\u0216\\u0218\\u021A\\u021C\\u021E\\u0220\\u0222\\u0224\\u0226\\u0228\\u022A\\u022C\\u022E\\u0230\\u0232\\u023A-\\u023B\\u023D-\\u023E\\u0241\\u0243-\\u0246\\u0248\\u024A\\u024C\\u024E\\u0370\\u0372\\u0376\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u038F\\u0391-\\u03A1\\u03A3-\\u03AB\\u03CF\\u03D2-\\u03D4\\u03D8\\u03DA\\u03DC\\u03DE\\u03E0\\u03E2\\u03E4\\u03E6\\u03E8\\u03EA\\u03EC\\u03EE\\u03F4\\u03F7\\u03F9-\\u03FA\\u03FD-\\u042F\\u0460\\u0462\\u0464\\u0466\\u0468\\u046A\\u046C\\u046E\\u0470\\u0472\\u0474\\u0476\\u0478\\u047A\\u047C\\u047E\\u0480\\u048A\\u048C\\u048E\\u0490\\u0492\\u0494\\u0496\\u0498\\u049A\\u049C\\u049E\\u04A0\\u04A2\\u04A4\\u04A6\\u04A8\\u04AA\\u04AC\\u04AE\\u04B0\\u04B2\\u04B4\\u04B6\\u04B8\\u04BA\\u04BC\\u04BE\\u04C0-\\u04C1\\u04C3\\u04C5\\u04C7\\u04C9\\u04CB\\u04CD\\u04D0\\u04D2\\u04D4\\u04D6\\u04D8\\u04DA\\u04DC\\u04DE\\u04E0\\u04E2\\u04E4\\u04E6\\u04E8\\u04EA\\u04EC\\u04EE\\u04F0\\u04F2\\u04F4\\u04F6\\u04F8\\u04FA\\u04FC\\u04FE\\u0500\\u0502\\u0504\\u0506\\u0508\\u050A\\u050C\\u050E\\u0510\\u0512\\u0514\\u0516\\u0518\\u051A\\u051C\\u051E\\u0520\\u0522\\u0524\\u0526\\u0528\\u052A\\u052C\\u052E\\u0531-\\u0556\\u10A0-\\u10C5\\u10C7\\u10CD\\u13A0-\\u13F5\\u1E00\\u1E02\\u1E04\\u1E06\\u1E08\\u1E0A\\u1E0C\\u1E0E\\u1E10\\u1E12\\u1E14\\u1E16\\u1E18\\u1E1A\\u1E1C\\u1E1E\\u1E20\\u1E22\\u1E24\\u1E26\\u1E28\\u1E2A\\u1E2C\\u1E2E\\u1E30\\u1E32\\u1E34\\u1E36\\u1E38\\u1E3A\\u1E3C\\u1E3E\\u1E40\\u1E42\\u1E44\\u1E46\\u1E48\\u1E4A\\u1E4C\\u1E4E\\u1E50\\u1E52\\u1E54\\u1E56\\u1E58\\u1E5A\\u1E5C\\u1E5E\\u1E60\\u1E62\\u1E64\\u1E66\\u1E68\\u1E6A\\u1E6C\\u1E6E\\u1E70\\u1E72\\u1E74\\u1E76\\u1E78\\u1E7A\\u1E7C\\u1E7E\\u1E80\\u1E82\\u1E84\\u1E86\\u1E88\\u1E8A\\u1E8C\\u1E8E\\u1E90\\u1E92\\u1E94\\u1E9E\\u1EA0\\u1EA2\\u1EA4\\u1EA6\\u1EA8\\u1EAA\\u1EAC\\u1EAE\\u1EB0\\u1EB2\\u1EB4\\u1EB6\\u1EB8\\u1EBA\\u1EBC\\u1EBE\\u1EC0\\u1EC2\\u1EC4\\u1EC6\\u1EC8\\u1ECA\\u1ECC\\u1ECE\\u1ED0\\u1ED2\\u1ED4\\u1ED6\\u1ED8\\u1EDA\\u1EDC\\u1EDE\\u1EE0\\u1EE2\\u1EE4\\u1EE6\\u1EE8\\u1EEA\\u1EEC\\u1EEE\\u1EF0\\u1EF2\\u1EF4\\u1EF6\\u1EF8\\u1EFA\\u1EFC\\u1EFE\\u1F08-\\u1F0F\\u1F18-\\u1F1D\\u1F28-\\u1F2F\\u1F38-\\u1F3F\\u1F48-\\u1F4D\\u1F59\\u1F5B\\u1F5D\\u1F5F\\u1F68-\\u1F6F\\u1FB8-\\u1FBB\\u1FC8-\\u1FCB\\u1FD8-\\u1FDB\\u1FE8-\\u1FEC\\u1FF8-\\u1FFB\\u2102\\u2107\\u210B-\\u210D\\u2110-\\u2112\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u2130-\\u2133\\u213E-\\u213F\\u2145\\u2183\\u2C00-\\u2C2E\\u2C60\\u2C62-\\u2C64\\u2C67\\u2C69\\u2C6B\\u2C6D-\\u2C70\\u2C72\\u2C75\\u2C7E-\\u2C80\\u2C82\\u2C84\\u2C86\\u2C88\\u2C8A\\u2C8C\\u2C8E\\u2C90\\u2C92\\u2C94\\u2C96\\u2C98\\u2C9A\\u2C9C\\u2C9E\\u2CA0\\u2CA2\\u2CA4\\u2CA6\\u2CA8\\u2CAA\\u2CAC\\u2CAE\\u2CB0\\u2CB2\\u2CB4\\u2CB6\\u2CB8\\u2CBA\\u2CBC\\u2CBE\\u2CC0\\u2CC2\\u2CC4\\u2CC6\\u2CC8\\u2CCA\\u2CCC\\u2CCE\\u2CD0\\u2CD2\\u2CD4\\u2CD6\\u2CD8\\u2CDA\\u2CDC\\u2CDE\\u2CE0\\u2CE2\\u2CEB\\u2CED\\u2CF2\\uA640\\uA642\\uA644\\uA646\\uA648\\uA64A\\uA64C\\uA64E\\uA650\\uA652\\uA654\\uA656\\uA658\\uA65A\\uA65C\\uA65E\\uA660\\uA662\\uA664\\uA666\\uA668\\uA66A\\uA66C\\uA680\\uA682\\uA684\\uA686\\uA688\\uA68A\\uA68C\\uA68E\\uA690\\uA692\\uA694\\uA696\\uA698\\uA69A\\uA722\\uA724\\uA726\\uA728\\uA72A\\uA72C\\uA72E\\uA732\\uA734\\uA736\\uA738\\uA73A\\uA73C\\uA73E\\uA740\\uA742\\uA744\\uA746\\uA748\\uA74A\\uA74C\\uA74E\\uA750\\uA752\\uA754\\uA756\\uA758\\uA75A\\uA75C\\uA75E\\uA760\\uA762\\uA764\\uA766\\uA768\\uA76A\\uA76C\\uA76E\\uA779\\uA77B\\uA77D-\\uA77E\\uA780\\uA782\\uA784\\uA786\\uA78B\\uA78D\\uA790\\uA792\\uA796\\uA798\\uA79A\\uA79C\\uA79E\\uA7A0\\uA7A2\\uA7A4\\uA7A6\\uA7A8\\uA7AA-\\uA7AD\\uA7B0-\\uA7B4\\uA7B6\\uFF21-\\uFF3A]/,\n      peg$c153 = peg$classExpectation([[\"A\", \"Z\"], [\"\\xC0\", \"\\xD6\"], [\"\\xD8\", \"\\xDE\"], \"\\u0100\", \"\\u0102\", \"\\u0104\", \"\\u0106\", \"\\u0108\", \"\\u010A\", \"\\u010C\", \"\\u010E\", \"\\u0110\", \"\\u0112\", \"\\u0114\", \"\\u0116\", \"\\u0118\", \"\\u011A\", \"\\u011C\", \"\\u011E\", \"\\u0120\", \"\\u0122\", \"\\u0124\", \"\\u0126\", \"\\u0128\", \"\\u012A\", \"\\u012C\", \"\\u012E\", \"\\u0130\", \"\\u0132\", \"\\u0134\", \"\\u0136\", \"\\u0139\", \"\\u013B\", \"\\u013D\", \"\\u013F\", \"\\u0141\", \"\\u0143\", \"\\u0145\", \"\\u0147\", \"\\u014A\", \"\\u014C\", \"\\u014E\", \"\\u0150\", \"\\u0152\", \"\\u0154\", \"\\u0156\", \"\\u0158\", \"\\u015A\", \"\\u015C\", \"\\u015E\", \"\\u0160\", \"\\u0162\", \"\\u0164\", \"\\u0166\", \"\\u0168\", \"\\u016A\", \"\\u016C\", \"\\u016E\", \"\\u0170\", \"\\u0172\", \"\\u0174\", \"\\u0176\", [\"\\u0178\", \"\\u0179\"], \"\\u017B\", \"\\u017D\", [\"\\u0181\", \"\\u0182\"], \"\\u0184\", [\"\\u0186\", \"\\u0187\"], [\"\\u0189\", \"\\u018B\"], [\"\\u018E\", \"\\u0191\"], [\"\\u0193\", \"\\u0194\"], [\"\\u0196\", \"\\u0198\"], [\"\\u019C\", \"\\u019D\"], [\"\\u019F\", \"\\u01A0\"], \"\\u01A2\", \"\\u01A4\", [\"\\u01A6\", \"\\u01A7\"], \"\\u01A9\", \"\\u01AC\", [\"\\u01AE\", \"\\u01AF\"], [\"\\u01B1\", \"\\u01B3\"], \"\\u01B5\", [\"\\u01B7\", \"\\u01B8\"], \"\\u01BC\", \"\\u01C4\", \"\\u01C7\", \"\\u01CA\", \"\\u01CD\", \"\\u01CF\", \"\\u01D1\", \"\\u01D3\", \"\\u01D5\", \"\\u01D7\", \"\\u01D9\", \"\\u01DB\", \"\\u01DE\", \"\\u01E0\", \"\\u01E2\", \"\\u01E4\", \"\\u01E6\", \"\\u01E8\", \"\\u01EA\", \"\\u01EC\", \"\\u01EE\", \"\\u01F1\", \"\\u01F4\", [\"\\u01F6\", \"\\u01F8\"], \"\\u01FA\", \"\\u01FC\", \"\\u01FE\", \"\\u0200\", \"\\u0202\", \"\\u0204\", \"\\u0206\", \"\\u0208\", \"\\u020A\", \"\\u020C\", \"\\u020E\", \"\\u0210\", \"\\u0212\", \"\\u0214\", \"\\u0216\", \"\\u0218\", \"\\u021A\", \"\\u021C\", \"\\u021E\", \"\\u0220\", \"\\u0222\", \"\\u0224\", \"\\u0226\", \"\\u0228\", \"\\u022A\", \"\\u022C\", \"\\u022E\", \"\\u0230\", \"\\u0232\", [\"\\u023A\", \"\\u023B\"], [\"\\u023D\", \"\\u023E\"], \"\\u0241\", [\"\\u0243\", \"\\u0246\"], \"\\u0248\", \"\\u024A\", \"\\u024C\", \"\\u024E\", \"\\u0370\", \"\\u0372\", \"\\u0376\", \"\\u037F\", \"\\u0386\", [\"\\u0388\", \"\\u038A\"], \"\\u038C\", [\"\\u038E\", \"\\u038F\"], [\"\\u0391\", \"\\u03A1\"], [\"\\u03A3\", \"\\u03AB\"], \"\\u03CF\", [\"\\u03D2\", \"\\u03D4\"], \"\\u03D8\", \"\\u03DA\", \"\\u03DC\", \"\\u03DE\", \"\\u03E0\", \"\\u03E2\", \"\\u03E4\", \"\\u03E6\", \"\\u03E8\", \"\\u03EA\", \"\\u03EC\", \"\\u03EE\", \"\\u03F4\", \"\\u03F7\", [\"\\u03F9\", \"\\u03FA\"], [\"\\u03FD\", \"\\u042F\"], \"\\u0460\", \"\\u0462\", \"\\u0464\", \"\\u0466\", \"\\u0468\", \"\\u046A\", \"\\u046C\", \"\\u046E\", \"\\u0470\", \"\\u0472\", \"\\u0474\", \"\\u0476\", \"\\u0478\", \"\\u047A\", \"\\u047C\", \"\\u047E\", \"\\u0480\", \"\\u048A\", \"\\u048C\", \"\\u048E\", \"\\u0490\", \"\\u0492\", \"\\u0494\", \"\\u0496\", \"\\u0498\", \"\\u049A\", \"\\u049C\", \"\\u049E\", \"\\u04A0\", \"\\u04A2\", \"\\u04A4\", \"\\u04A6\", \"\\u04A8\", \"\\u04AA\", \"\\u04AC\", \"\\u04AE\", \"\\u04B0\", \"\\u04B2\", \"\\u04B4\", \"\\u04B6\", \"\\u04B8\", \"\\u04BA\", \"\\u04BC\", \"\\u04BE\", [\"\\u04C0\", \"\\u04C1\"], \"\\u04C3\", \"\\u04C5\", \"\\u04C7\", \"\\u04C9\", \"\\u04CB\", \"\\u04CD\", \"\\u04D0\", \"\\u04D2\", \"\\u04D4\", \"\\u04D6\", \"\\u04D8\", \"\\u04DA\", \"\\u04DC\", \"\\u04DE\", \"\\u04E0\", \"\\u04E2\", \"\\u04E4\", \"\\u04E6\", \"\\u04E8\", \"\\u04EA\", \"\\u04EC\", \"\\u04EE\", \"\\u04F0\", \"\\u04F2\", \"\\u04F4\", \"\\u04F6\", \"\\u04F8\", \"\\u04FA\", \"\\u04FC\", \"\\u04FE\", \"\\u0500\", \"\\u0502\", \"\\u0504\", \"\\u0506\", \"\\u0508\", \"\\u050A\", \"\\u050C\", \"\\u050E\", \"\\u0510\", \"\\u0512\", \"\\u0514\", \"\\u0516\", \"\\u0518\", \"\\u051A\", \"\\u051C\", \"\\u051E\", \"\\u0520\", \"\\u0522\", \"\\u0524\", \"\\u0526\", \"\\u0528\", \"\\u052A\", \"\\u052C\", \"\\u052E\", [\"\\u0531\", \"\\u0556\"], [\"\\u10A0\", \"\\u10C5\"], \"\\u10C7\", \"\\u10CD\", [\"\\u13A0\", \"\\u13F5\"], \"\\u1E00\", \"\\u1E02\", \"\\u1E04\", \"\\u1E06\", \"\\u1E08\", \"\\u1E0A\", \"\\u1E0C\", \"\\u1E0E\", \"\\u1E10\", \"\\u1E12\", \"\\u1E14\", \"\\u1E16\", \"\\u1E18\", \"\\u1E1A\", \"\\u1E1C\", \"\\u1E1E\", \"\\u1E20\", \"\\u1E22\", \"\\u1E24\", \"\\u1E26\", \"\\u1E28\", \"\\u1E2A\", \"\\u1E2C\", \"\\u1E2E\", \"\\u1E30\", \"\\u1E32\", \"\\u1E34\", \"\\u1E36\", \"\\u1E38\", \"\\u1E3A\", \"\\u1E3C\", \"\\u1E3E\", \"\\u1E40\", \"\\u1E42\", \"\\u1E44\", \"\\u1E46\", \"\\u1E48\", \"\\u1E4A\", \"\\u1E4C\", \"\\u1E4E\", \"\\u1E50\", \"\\u1E52\", \"\\u1E54\", \"\\u1E56\", \"\\u1E58\", \"\\u1E5A\", \"\\u1E5C\", \"\\u1E5E\", \"\\u1E60\", \"\\u1E62\", \"\\u1E64\", \"\\u1E66\", \"\\u1E68\", \"\\u1E6A\", \"\\u1E6C\", \"\\u1E6E\", \"\\u1E70\", \"\\u1E72\", \"\\u1E74\", \"\\u1E76\", \"\\u1E78\", \"\\u1E7A\", \"\\u1E7C\", \"\\u1E7E\", \"\\u1E80\", \"\\u1E82\", \"\\u1E84\", \"\\u1E86\", \"\\u1E88\", \"\\u1E8A\", \"\\u1E8C\", \"\\u1E8E\", \"\\u1E90\", \"\\u1E92\", \"\\u1E94\", \"\\u1E9E\", \"\\u1EA0\", \"\\u1EA2\", \"\\u1EA4\", \"\\u1EA6\", \"\\u1EA8\", \"\\u1EAA\", \"\\u1EAC\", \"\\u1EAE\", \"\\u1EB0\", \"\\u1EB2\", \"\\u1EB4\", \"\\u1EB6\", \"\\u1EB8\", \"\\u1EBA\", \"\\u1EBC\", \"\\u1EBE\", \"\\u1EC0\", \"\\u1EC2\", \"\\u1EC4\", \"\\u1EC6\", \"\\u1EC8\", \"\\u1ECA\", \"\\u1ECC\", \"\\u1ECE\", \"\\u1ED0\", \"\\u1ED2\", \"\\u1ED4\", \"\\u1ED6\", \"\\u1ED8\", \"\\u1EDA\", \"\\u1EDC\", \"\\u1EDE\", \"\\u1EE0\", \"\\u1EE2\", \"\\u1EE4\", \"\\u1EE6\", \"\\u1EE8\", \"\\u1EEA\", \"\\u1EEC\", \"\\u1EEE\", \"\\u1EF0\", \"\\u1EF2\", \"\\u1EF4\", \"\\u1EF6\", \"\\u1EF8\", \"\\u1EFA\", \"\\u1EFC\", \"\\u1EFE\", [\"\\u1F08\", \"\\u1F0F\"], [\"\\u1F18\", \"\\u1F1D\"], [\"\\u1F28\", \"\\u1F2F\"], [\"\\u1F38\", \"\\u1F3F\"], [\"\\u1F48\", \"\\u1F4D\"], \"\\u1F59\", \"\\u1F5B\", \"\\u1F5D\", \"\\u1F5F\", [\"\\u1F68\", \"\\u1F6F\"], [\"\\u1FB8\", \"\\u1FBB\"], [\"\\u1FC8\", \"\\u1FCB\"], [\"\\u1FD8\", \"\\u1FDB\"], [\"\\u1FE8\", \"\\u1FEC\"], [\"\\u1FF8\", \"\\u1FFB\"], \"\\u2102\", \"\\u2107\", [\"\\u210B\", \"\\u210D\"], [\"\\u2110\", \"\\u2112\"], \"\\u2115\", [\"\\u2119\", \"\\u211D\"], \"\\u2124\", \"\\u2126\", \"\\u2128\", [\"\\u212A\", \"\\u212D\"], [\"\\u2130\", \"\\u2133\"], [\"\\u213E\", \"\\u213F\"], \"\\u2145\", \"\\u2183\", [\"\\u2C00\", \"\\u2C2E\"], \"\\u2C60\", [\"\\u2C62\", \"\\u2C64\"], \"\\u2C67\", \"\\u2C69\", \"\\u2C6B\", [\"\\u2C6D\", \"\\u2C70\"], \"\\u2C72\", \"\\u2C75\", [\"\\u2C7E\", \"\\u2C80\"], \"\\u2C82\", \"\\u2C84\", \"\\u2C86\", \"\\u2C88\", \"\\u2C8A\", \"\\u2C8C\", \"\\u2C8E\", \"\\u2C90\", \"\\u2C92\", \"\\u2C94\", \"\\u2C96\", \"\\u2C98\", \"\\u2C9A\", \"\\u2C9C\", \"\\u2C9E\", \"\\u2CA0\", \"\\u2CA2\", \"\\u2CA4\", \"\\u2CA6\", \"\\u2CA8\", \"\\u2CAA\", \"\\u2CAC\", \"\\u2CAE\", \"\\u2CB0\", \"\\u2CB2\", \"\\u2CB4\", \"\\u2CB6\", \"\\u2CB8\", \"\\u2CBA\", \"\\u2CBC\", \"\\u2CBE\", \"\\u2CC0\", \"\\u2CC2\", \"\\u2CC4\", \"\\u2CC6\", \"\\u2CC8\", \"\\u2CCA\", \"\\u2CCC\", \"\\u2CCE\", \"\\u2CD0\", \"\\u2CD2\", \"\\u2CD4\", \"\\u2CD6\", \"\\u2CD8\", \"\\u2CDA\", \"\\u2CDC\", \"\\u2CDE\", \"\\u2CE0\", \"\\u2CE2\", \"\\u2CEB\", \"\\u2CED\", \"\\u2CF2\", \"\\uA640\", \"\\uA642\", \"\\uA644\", \"\\uA646\", \"\\uA648\", \"\\uA64A\", \"\\uA64C\", \"\\uA64E\", \"\\uA650\", \"\\uA652\", \"\\uA654\", \"\\uA656\", \"\\uA658\", \"\\uA65A\", \"\\uA65C\", \"\\uA65E\", \"\\uA660\", \"\\uA662\", \"\\uA664\", \"\\uA666\", \"\\uA668\", \"\\uA66A\", \"\\uA66C\", \"\\uA680\", \"\\uA682\", \"\\uA684\", \"\\uA686\", \"\\uA688\", \"\\uA68A\", \"\\uA68C\", \"\\uA68E\", \"\\uA690\", \"\\uA692\", \"\\uA694\", \"\\uA696\", \"\\uA698\", \"\\uA69A\", \"\\uA722\", \"\\uA724\", \"\\uA726\", \"\\uA728\", \"\\uA72A\", \"\\uA72C\", \"\\uA72E\", \"\\uA732\", \"\\uA734\", \"\\uA736\", \"\\uA738\", \"\\uA73A\", \"\\uA73C\", \"\\uA73E\", \"\\uA740\", \"\\uA742\", \"\\uA744\", \"\\uA746\", \"\\uA748\", \"\\uA74A\", \"\\uA74C\", \"\\uA74E\", \"\\uA750\", \"\\uA752\", \"\\uA754\", \"\\uA756\", \"\\uA758\", \"\\uA75A\", \"\\uA75C\", \"\\uA75E\", \"\\uA760\", \"\\uA762\", \"\\uA764\", \"\\uA766\", \"\\uA768\", \"\\uA76A\", \"\\uA76C\", \"\\uA76E\", \"\\uA779\", \"\\uA77B\", [\"\\uA77D\", \"\\uA77E\"], \"\\uA780\", \"\\uA782\", \"\\uA784\", \"\\uA786\", \"\\uA78B\", \"\\uA78D\", \"\\uA790\", \"\\uA792\", \"\\uA796\", \"\\uA798\", \"\\uA79A\", \"\\uA79C\", \"\\uA79E\", \"\\uA7A0\", \"\\uA7A2\", \"\\uA7A4\", \"\\uA7A6\", \"\\uA7A8\", [\"\\uA7AA\", \"\\uA7AD\"], [\"\\uA7B0\", \"\\uA7B4\"], \"\\uA7B6\", [\"\\uFF21\", \"\\uFF3A\"]], false, false),\n      peg$c154 = /^[\\u0903\\u093B\\u093E-\\u0940\\u0949-\\u094C\\u094E-\\u094F\\u0982-\\u0983\\u09BE-\\u09C0\\u09C7-\\u09C8\\u09CB-\\u09CC\\u09D7\\u0A03\\u0A3E-\\u0A40\\u0A83\\u0ABE-\\u0AC0\\u0AC9\\u0ACB-\\u0ACC\\u0B02-\\u0B03\\u0B3E\\u0B40\\u0B47-\\u0B48\\u0B4B-\\u0B4C\\u0B57\\u0BBE-\\u0BBF\\u0BC1-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCC\\u0BD7\\u0C01-\\u0C03\\u0C41-\\u0C44\\u0C82-\\u0C83\\u0CBE\\u0CC0-\\u0CC4\\u0CC7-\\u0CC8\\u0CCA-\\u0CCB\\u0CD5-\\u0CD6\\u0D02-\\u0D03\\u0D3E-\\u0D40\\u0D46-\\u0D48\\u0D4A-\\u0D4C\\u0D57\\u0D82-\\u0D83\\u0DCF-\\u0DD1\\u0DD8-\\u0DDF\\u0DF2-\\u0DF3\\u0F3E-\\u0F3F\\u0F7F\\u102B-\\u102C\\u1031\\u1038\\u103B-\\u103C\\u1056-\\u1057\\u1062-\\u1064\\u1067-\\u106D\\u1083-\\u1084\\u1087-\\u108C\\u108F\\u109A-\\u109C\\u17B6\\u17BE-\\u17C5\\u17C7-\\u17C8\\u1923-\\u1926\\u1929-\\u192B\\u1930-\\u1931\\u1933-\\u1938\\u1A19-\\u1A1A\\u1A55\\u1A57\\u1A61\\u1A63-\\u1A64\\u1A6D-\\u1A72\\u1B04\\u1B35\\u1B3B\\u1B3D-\\u1B41\\u1B43-\\u1B44\\u1B82\\u1BA1\\u1BA6-\\u1BA7\\u1BAA\\u1BE7\\u1BEA-\\u1BEC\\u1BEE\\u1BF2-\\u1BF3\\u1C24-\\u1C2B\\u1C34-\\u1C35\\u1CE1\\u1CF2-\\u1CF3\\u302E-\\u302F\\uA823-\\uA824\\uA827\\uA880-\\uA881\\uA8B4-\\uA8C3\\uA952-\\uA953\\uA983\\uA9B4-\\uA9B5\\uA9BA-\\uA9BB\\uA9BD-\\uA9C0\\uAA2F-\\uAA30\\uAA33-\\uAA34\\uAA4D\\uAA7B\\uAA7D\\uAAEB\\uAAEE-\\uAAEF\\uAAF5\\uABE3-\\uABE4\\uABE6-\\uABE7\\uABE9-\\uABEA\\uABEC]/,\n      peg$c155 = peg$classExpectation([\"\\u0903\", \"\\u093B\", [\"\\u093E\", \"\\u0940\"], [\"\\u0949\", \"\\u094C\"], [\"\\u094E\", \"\\u094F\"], [\"\\u0982\", \"\\u0983\"], [\"\\u09BE\", \"\\u09C0\"], [\"\\u09C7\", \"\\u09C8\"], [\"\\u09CB\", \"\\u09CC\"], \"\\u09D7\", \"\\u0A03\", [\"\\u0A3E\", \"\\u0A40\"], \"\\u0A83\", [\"\\u0ABE\", \"\\u0AC0\"], \"\\u0AC9\", [\"\\u0ACB\", \"\\u0ACC\"], [\"\\u0B02\", \"\\u0B03\"], \"\\u0B3E\", \"\\u0B40\", [\"\\u0B47\", \"\\u0B48\"], [\"\\u0B4B\", \"\\u0B4C\"], \"\\u0B57\", [\"\\u0BBE\", \"\\u0BBF\"], [\"\\u0BC1\", \"\\u0BC2\"], [\"\\u0BC6\", \"\\u0BC8\"], [\"\\u0BCA\", \"\\u0BCC\"], \"\\u0BD7\", [\"\\u0C01\", \"\\u0C03\"], [\"\\u0C41\", \"\\u0C44\"], [\"\\u0C82\", \"\\u0C83\"], \"\\u0CBE\", [\"\\u0CC0\", \"\\u0CC4\"], [\"\\u0CC7\", \"\\u0CC8\"], [\"\\u0CCA\", \"\\u0CCB\"], [\"\\u0CD5\", \"\\u0CD6\"], [\"\\u0D02\", \"\\u0D03\"], [\"\\u0D3E\", \"\\u0D40\"], [\"\\u0D46\", \"\\u0D48\"], [\"\\u0D4A\", \"\\u0D4C\"], \"\\u0D57\", [\"\\u0D82\", \"\\u0D83\"], [\"\\u0DCF\", \"\\u0DD1\"], [\"\\u0DD8\", \"\\u0DDF\"], [\"\\u0DF2\", \"\\u0DF3\"], [\"\\u0F3E\", \"\\u0F3F\"], \"\\u0F7F\", [\"\\u102B\", \"\\u102C\"], \"\\u1031\", \"\\u1038\", [\"\\u103B\", \"\\u103C\"], [\"\\u1056\", \"\\u1057\"], [\"\\u1062\", \"\\u1064\"], [\"\\u1067\", \"\\u106D\"], [\"\\u1083\", \"\\u1084\"], [\"\\u1087\", \"\\u108C\"], \"\\u108F\", [\"\\u109A\", \"\\u109C\"], \"\\u17B6\", [\"\\u17BE\", \"\\u17C5\"], [\"\\u17C7\", \"\\u17C8\"], [\"\\u1923\", \"\\u1926\"], [\"\\u1929\", \"\\u192B\"], [\"\\u1930\", \"\\u1931\"], [\"\\u1933\", \"\\u1938\"], [\"\\u1A19\", \"\\u1A1A\"], \"\\u1A55\", \"\\u1A57\", \"\\u1A61\", [\"\\u1A63\", \"\\u1A64\"], [\"\\u1A6D\", \"\\u1A72\"], \"\\u1B04\", \"\\u1B35\", \"\\u1B3B\", [\"\\u1B3D\", \"\\u1B41\"], [\"\\u1B43\", \"\\u1B44\"], \"\\u1B82\", \"\\u1BA1\", [\"\\u1BA6\", \"\\u1BA7\"], \"\\u1BAA\", \"\\u1BE7\", [\"\\u1BEA\", \"\\u1BEC\"], \"\\u1BEE\", [\"\\u1BF2\", \"\\u1BF3\"], [\"\\u1C24\", \"\\u1C2B\"], [\"\\u1C34\", \"\\u1C35\"], \"\\u1CE1\", [\"\\u1CF2\", \"\\u1CF3\"], [\"\\u302E\", \"\\u302F\"], [\"\\uA823\", \"\\uA824\"], \"\\uA827\", [\"\\uA880\", \"\\uA881\"], [\"\\uA8B4\", \"\\uA8C3\"], [\"\\uA952\", \"\\uA953\"], \"\\uA983\", [\"\\uA9B4\", \"\\uA9B5\"], [\"\\uA9BA\", \"\\uA9BB\"], [\"\\uA9BD\", \"\\uA9C0\"], [\"\\uAA2F\", \"\\uAA30\"], [\"\\uAA33\", \"\\uAA34\"], \"\\uAA4D\", \"\\uAA7B\", \"\\uAA7D\", \"\\uAAEB\", [\"\\uAAEE\", \"\\uAAEF\"], \"\\uAAF5\", [\"\\uABE3\", \"\\uABE4\"], [\"\\uABE6\", \"\\uABE7\"], [\"\\uABE9\", \"\\uABEA\"], \"\\uABEC\"], false, false),\n      peg$c156 = /^[\\u0300-\\u036F\\u0483-\\u0487\\u0591-\\u05BD\\u05BF\\u05C1-\\u05C2\\u05C4-\\u05C5\\u05C7\\u0610-\\u061A\\u064B-\\u065F\\u0670\\u06D6-\\u06DC\\u06DF-\\u06E4\\u06E7-\\u06E8\\u06EA-\\u06ED\\u0711\\u0730-\\u074A\\u07A6-\\u07B0\\u07EB-\\u07F3\\u0816-\\u0819\\u081B-\\u0823\\u0825-\\u0827\\u0829-\\u082D\\u0859-\\u085B\\u08E3-\\u0902\\u093A\\u093C\\u0941-\\u0948\\u094D\\u0951-\\u0957\\u0962-\\u0963\\u0981\\u09BC\\u09C1-\\u09C4\\u09CD\\u09E2-\\u09E3\\u0A01-\\u0A02\\u0A3C\\u0A41-\\u0A42\\u0A47-\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A70-\\u0A71\\u0A75\\u0A81-\\u0A82\\u0ABC\\u0AC1-\\u0AC5\\u0AC7-\\u0AC8\\u0ACD\\u0AE2-\\u0AE3\\u0B01\\u0B3C\\u0B3F\\u0B41-\\u0B44\\u0B4D\\u0B56\\u0B62-\\u0B63\\u0B82\\u0BC0\\u0BCD\\u0C00\\u0C3E-\\u0C40\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55-\\u0C56\\u0C62-\\u0C63\\u0C81\\u0CBC\\u0CBF\\u0CC6\\u0CCC-\\u0CCD\\u0CE2-\\u0CE3\\u0D01\\u0D41-\\u0D44\\u0D4D\\u0D62-\\u0D63\\u0DCA\\u0DD2-\\u0DD4\\u0DD6\\u0E31\\u0E34-\\u0E3A\\u0E47-\\u0E4E\\u0EB1\\u0EB4-\\u0EB9\\u0EBB-\\u0EBC\\u0EC8-\\u0ECD\\u0F18-\\u0F19\\u0F35\\u0F37\\u0F39\\u0F71-\\u0F7E\\u0F80-\\u0F84\\u0F86-\\u0F87\\u0F8D-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u102D-\\u1030\\u1032-\\u1037\\u1039-\\u103A\\u103D-\\u103E\\u1058-\\u1059\\u105E-\\u1060\\u1071-\\u1074\\u1082\\u1085-\\u1086\\u108D\\u109D\\u135D-\\u135F\\u1712-\\u1714\\u1732-\\u1734\\u1752-\\u1753\\u1772-\\u1773\\u17B4-\\u17B5\\u17B7-\\u17BD\\u17C6\\u17C9-\\u17D3\\u17DD\\u180B-\\u180D\\u18A9\\u1920-\\u1922\\u1927-\\u1928\\u1932\\u1939-\\u193B\\u1A17-\\u1A18\\u1A1B\\u1A56\\u1A58-\\u1A5E\\u1A60\\u1A62\\u1A65-\\u1A6C\\u1A73-\\u1A7C\\u1A7F\\u1AB0-\\u1ABD\\u1B00-\\u1B03\\u1B34\\u1B36-\\u1B3A\\u1B3C\\u1B42\\u1B6B-\\u1B73\\u1B80-\\u1B81\\u1BA2-\\u1BA5\\u1BA8-\\u1BA9\\u1BAB-\\u1BAD\\u1BE6\\u1BE8-\\u1BE9\\u1BED\\u1BEF-\\u1BF1\\u1C2C-\\u1C33\\u1C36-\\u1C37\\u1CD0-\\u1CD2\\u1CD4-\\u1CE0\\u1CE2-\\u1CE8\\u1CED\\u1CF4\\u1CF8-\\u1CF9\\u1DC0-\\u1DF5\\u1DFC-\\u1DFF\\u20D0-\\u20DC\\u20E1\\u20E5-\\u20F0\\u2CEF-\\u2CF1\\u2D7F\\u2DE0-\\u2DFF\\u302A-\\u302D\\u3099-\\u309A\\uA66F\\uA674-\\uA67D\\uA69E-\\uA69F\\uA6F0-\\uA6F1\\uA802\\uA806\\uA80B\\uA825-\\uA826\\uA8C4\\uA8E0-\\uA8F1\\uA926-\\uA92D\\uA947-\\uA951\\uA980-\\uA982\\uA9B3\\uA9B6-\\uA9B9\\uA9BC\\uA9E5\\uAA29-\\uAA2E\\uAA31-\\uAA32\\uAA35-\\uAA36\\uAA43\\uAA4C\\uAA7C\\uAAB0\\uAAB2-\\uAAB4\\uAAB7-\\uAAB8\\uAABE-\\uAABF\\uAAC1\\uAAEC-\\uAAED\\uAAF6\\uABE5\\uABE8\\uABED\\uFB1E\\uFE00-\\uFE0F\\uFE20-\\uFE2F]/,\n      peg$c157 = peg$classExpectation([[\"\\u0300\", \"\\u036F\"], [\"\\u0483\", \"\\u0487\"], [\"\\u0591\", \"\\u05BD\"], \"\\u05BF\", [\"\\u05C1\", \"\\u05C2\"], [\"\\u05C4\", \"\\u05C5\"], \"\\u05C7\", [\"\\u0610\", \"\\u061A\"], [\"\\u064B\", \"\\u065F\"], \"\\u0670\", [\"\\u06D6\", \"\\u06DC\"], [\"\\u06DF\", \"\\u06E4\"], [\"\\u06E7\", \"\\u06E8\"], [\"\\u06EA\", \"\\u06ED\"], \"\\u0711\", [\"\\u0730\", \"\\u074A\"], [\"\\u07A6\", \"\\u07B0\"], [\"\\u07EB\", \"\\u07F3\"], [\"\\u0816\", \"\\u0819\"], [\"\\u081B\", \"\\u0823\"], [\"\\u0825\", \"\\u0827\"], [\"\\u0829\", \"\\u082D\"], [\"\\u0859\", \"\\u085B\"], [\"\\u08E3\", \"\\u0902\"], \"\\u093A\", \"\\u093C\", [\"\\u0941\", \"\\u0948\"], \"\\u094D\", [\"\\u0951\", \"\\u0957\"], [\"\\u0962\", \"\\u0963\"], \"\\u0981\", \"\\u09BC\", [\"\\u09C1\", \"\\u09C4\"], \"\\u09CD\", [\"\\u09E2\", \"\\u09E3\"], [\"\\u0A01\", \"\\u0A02\"], \"\\u0A3C\", [\"\\u0A41\", \"\\u0A42\"], [\"\\u0A47\", \"\\u0A48\"], [\"\\u0A4B\", \"\\u0A4D\"], \"\\u0A51\", [\"\\u0A70\", \"\\u0A71\"], \"\\u0A75\", [\"\\u0A81\", \"\\u0A82\"], \"\\u0ABC\", [\"\\u0AC1\", \"\\u0AC5\"], [\"\\u0AC7\", \"\\u0AC8\"], \"\\u0ACD\", [\"\\u0AE2\", \"\\u0AE3\"], \"\\u0B01\", \"\\u0B3C\", \"\\u0B3F\", [\"\\u0B41\", \"\\u0B44\"], \"\\u0B4D\", \"\\u0B56\", [\"\\u0B62\", \"\\u0B63\"], \"\\u0B82\", \"\\u0BC0\", \"\\u0BCD\", \"\\u0C00\", [\"\\u0C3E\", \"\\u0C40\"], [\"\\u0C46\", \"\\u0C48\"], [\"\\u0C4A\", \"\\u0C4D\"], [\"\\u0C55\", \"\\u0C56\"], [\"\\u0C62\", \"\\u0C63\"], \"\\u0C81\", \"\\u0CBC\", \"\\u0CBF\", \"\\u0CC6\", [\"\\u0CCC\", \"\\u0CCD\"], [\"\\u0CE2\", \"\\u0CE3\"], \"\\u0D01\", [\"\\u0D41\", \"\\u0D44\"], \"\\u0D4D\", [\"\\u0D62\", \"\\u0D63\"], \"\\u0DCA\", [\"\\u0DD2\", \"\\u0DD4\"], \"\\u0DD6\", \"\\u0E31\", [\"\\u0E34\", \"\\u0E3A\"], [\"\\u0E47\", \"\\u0E4E\"], \"\\u0EB1\", [\"\\u0EB4\", \"\\u0EB9\"], [\"\\u0EBB\", \"\\u0EBC\"], [\"\\u0EC8\", \"\\u0ECD\"], [\"\\u0F18\", \"\\u0F19\"], \"\\u0F35\", \"\\u0F37\", \"\\u0F39\", [\"\\u0F71\", \"\\u0F7E\"], [\"\\u0F80\", \"\\u0F84\"], [\"\\u0F86\", \"\\u0F87\"], [\"\\u0F8D\", \"\\u0F97\"], [\"\\u0F99\", \"\\u0FBC\"], \"\\u0FC6\", [\"\\u102D\", \"\\u1030\"], [\"\\u1032\", \"\\u1037\"], [\"\\u1039\", \"\\u103A\"], [\"\\u103D\", \"\\u103E\"], [\"\\u1058\", \"\\u1059\"], [\"\\u105E\", \"\\u1060\"], [\"\\u1071\", \"\\u1074\"], \"\\u1082\", [\"\\u1085\", \"\\u1086\"], \"\\u108D\", \"\\u109D\", [\"\\u135D\", \"\\u135F\"], [\"\\u1712\", \"\\u1714\"], [\"\\u1732\", \"\\u1734\"], [\"\\u1752\", \"\\u1753\"], [\"\\u1772\", \"\\u1773\"], [\"\\u17B4\", \"\\u17B5\"], [\"\\u17B7\", \"\\u17BD\"], \"\\u17C6\", [\"\\u17C9\", \"\\u17D3\"], \"\\u17DD\", [\"\\u180B\", \"\\u180D\"], \"\\u18A9\", [\"\\u1920\", \"\\u1922\"], [\"\\u1927\", \"\\u1928\"], \"\\u1932\", [\"\\u1939\", \"\\u193B\"], [\"\\u1A17\", \"\\u1A18\"], \"\\u1A1B\", \"\\u1A56\", [\"\\u1A58\", \"\\u1A5E\"], \"\\u1A60\", \"\\u1A62\", [\"\\u1A65\", \"\\u1A6C\"], [\"\\u1A73\", \"\\u1A7C\"], \"\\u1A7F\", [\"\\u1AB0\", \"\\u1ABD\"], [\"\\u1B00\", \"\\u1B03\"], \"\\u1B34\", [\"\\u1B36\", \"\\u1B3A\"], \"\\u1B3C\", \"\\u1B42\", [\"\\u1B6B\", \"\\u1B73\"], [\"\\u1B80\", \"\\u1B81\"], [\"\\u1BA2\", \"\\u1BA5\"], [\"\\u1BA8\", \"\\u1BA9\"], [\"\\u1BAB\", \"\\u1BAD\"], \"\\u1BE6\", [\"\\u1BE8\", \"\\u1BE9\"], \"\\u1BED\", [\"\\u1BEF\", \"\\u1BF1\"], [\"\\u1C2C\", \"\\u1C33\"], [\"\\u1C36\", \"\\u1C37\"], [\"\\u1CD0\", \"\\u1CD2\"], [\"\\u1CD4\", \"\\u1CE0\"], [\"\\u1CE2\", \"\\u1CE8\"], \"\\u1CED\", \"\\u1CF4\", [\"\\u1CF8\", \"\\u1CF9\"], [\"\\u1DC0\", \"\\u1DF5\"], [\"\\u1DFC\", \"\\u1DFF\"], [\"\\u20D0\", \"\\u20DC\"], \"\\u20E1\", [\"\\u20E5\", \"\\u20F0\"], [\"\\u2CEF\", \"\\u2CF1\"], \"\\u2D7F\", [\"\\u2DE0\", \"\\u2DFF\"], [\"\\u302A\", \"\\u302D\"], [\"\\u3099\", \"\\u309A\"], \"\\uA66F\", [\"\\uA674\", \"\\uA67D\"], [\"\\uA69E\", \"\\uA69F\"], [\"\\uA6F0\", \"\\uA6F1\"], \"\\uA802\", \"\\uA806\", \"\\uA80B\", [\"\\uA825\", \"\\uA826\"], \"\\uA8C4\", [\"\\uA8E0\", \"\\uA8F1\"], [\"\\uA926\", \"\\uA92D\"], [\"\\uA947\", \"\\uA951\"], [\"\\uA980\", \"\\uA982\"], \"\\uA9B3\", [\"\\uA9B6\", \"\\uA9B9\"], \"\\uA9BC\", \"\\uA9E5\", [\"\\uAA29\", \"\\uAA2E\"], [\"\\uAA31\", \"\\uAA32\"], [\"\\uAA35\", \"\\uAA36\"], \"\\uAA43\", \"\\uAA4C\", \"\\uAA7C\", \"\\uAAB0\", [\"\\uAAB2\", \"\\uAAB4\"], [\"\\uAAB7\", \"\\uAAB8\"], [\"\\uAABE\", \"\\uAABF\"], \"\\uAAC1\", [\"\\uAAEC\", \"\\uAAED\"], \"\\uAAF6\", \"\\uABE5\", \"\\uABE8\", \"\\uABED\", \"\\uFB1E\", [\"\\uFE00\", \"\\uFE0F\"], [\"\\uFE20\", \"\\uFE2F\"]], false, false),\n      peg$c158 = /^[0-9\\u0660-\\u0669\\u06F0-\\u06F9\\u07C0-\\u07C9\\u0966-\\u096F\\u09E6-\\u09EF\\u0A66-\\u0A6F\\u0AE6-\\u0AEF\\u0B66-\\u0B6F\\u0BE6-\\u0BEF\\u0C66-\\u0C6F\\u0CE6-\\u0CEF\\u0D66-\\u0D6F\\u0DE6-\\u0DEF\\u0E50-\\u0E59\\u0ED0-\\u0ED9\\u0F20-\\u0F29\\u1040-\\u1049\\u1090-\\u1099\\u17E0-\\u17E9\\u1810-\\u1819\\u1946-\\u194F\\u19D0-\\u19D9\\u1A80-\\u1A89\\u1A90-\\u1A99\\u1B50-\\u1B59\\u1BB0-\\u1BB9\\u1C40-\\u1C49\\u1C50-\\u1C59\\uA620-\\uA629\\uA8D0-\\uA8D9\\uA900-\\uA909\\uA9D0-\\uA9D9\\uA9F0-\\uA9F9\\uAA50-\\uAA59\\uABF0-\\uABF9\\uFF10-\\uFF19]/,\n      peg$c159 = peg$classExpectation([[\"0\", \"9\"], [\"\\u0660\", \"\\u0669\"], [\"\\u06F0\", \"\\u06F9\"], [\"\\u07C0\", \"\\u07C9\"], [\"\\u0966\", \"\\u096F\"], [\"\\u09E6\", \"\\u09EF\"], [\"\\u0A66\", \"\\u0A6F\"], [\"\\u0AE6\", \"\\u0AEF\"], [\"\\u0B66\", \"\\u0B6F\"], [\"\\u0BE6\", \"\\u0BEF\"], [\"\\u0C66\", \"\\u0C6F\"], [\"\\u0CE6\", \"\\u0CEF\"], [\"\\u0D66\", \"\\u0D6F\"], [\"\\u0DE6\", \"\\u0DEF\"], [\"\\u0E50\", \"\\u0E59\"], [\"\\u0ED0\", \"\\u0ED9\"], [\"\\u0F20\", \"\\u0F29\"], [\"\\u1040\", \"\\u1049\"], [\"\\u1090\", \"\\u1099\"], [\"\\u17E0\", \"\\u17E9\"], [\"\\u1810\", \"\\u1819\"], [\"\\u1946\", \"\\u194F\"], [\"\\u19D0\", \"\\u19D9\"], [\"\\u1A80\", \"\\u1A89\"], [\"\\u1A90\", \"\\u1A99\"], [\"\\u1B50\", \"\\u1B59\"], [\"\\u1BB0\", \"\\u1BB9\"], [\"\\u1C40\", \"\\u1C49\"], [\"\\u1C50\", \"\\u1C59\"], [\"\\uA620\", \"\\uA629\"], [\"\\uA8D0\", \"\\uA8D9\"], [\"\\uA900\", \"\\uA909\"], [\"\\uA9D0\", \"\\uA9D9\"], [\"\\uA9F0\", \"\\uA9F9\"], [\"\\uAA50\", \"\\uAA59\"], [\"\\uABF0\", \"\\uABF9\"], [\"\\uFF10\", \"\\uFF19\"]], false, false),\n      peg$c160 = /^[\\u16EE-\\u16F0\\u2160-\\u2182\\u2185-\\u2188\\u3007\\u3021-\\u3029\\u3038-\\u303A\\uA6E6-\\uA6EF]/,\n      peg$c161 = peg$classExpectation([[\"\\u16EE\", \"\\u16F0\"], [\"\\u2160\", \"\\u2182\"], [\"\\u2185\", \"\\u2188\"], \"\\u3007\", [\"\\u3021\", \"\\u3029\"], [\"\\u3038\", \"\\u303A\"], [\"\\uA6E6\", \"\\uA6EF\"]], false, false),\n      peg$c162 = /^[_\\u203F-\\u2040\\u2054\\uFE33-\\uFE34\\uFE4D-\\uFE4F\\uFF3F]/,\n      peg$c163 = peg$classExpectation([\"_\", [\"\\u203F\", \"\\u2040\"], \"\\u2054\", [\"\\uFE33\", \"\\uFE34\"], [\"\\uFE4D\", \"\\uFE4F\"], \"\\uFF3F\"], false, false),\n      peg$c164 = /^[ \\xA0\\u1680\\u2000-\\u200A\\u202F\\u205F\\u3000]/,\n      peg$c165 = peg$classExpectation([\" \", \"\\xA0\", \"\\u1680\", [\"\\u2000\", \"\\u200A\"], \"\\u202F\", \"\\u205F\", \"\\u3000\"], false, false),\n      peg$c166 = \"break\",\n      peg$c167 = peg$literalExpectation(\"break\", false),\n      peg$c168 = \"case\",\n      peg$c169 = peg$literalExpectation(\"case\", false),\n      peg$c170 = \"catch\",\n      peg$c171 = peg$literalExpectation(\"catch\", false),\n      peg$c172 = \"class\",\n      peg$c173 = peg$literalExpectation(\"class\", false),\n      peg$c174 = \"const\",\n      peg$c175 = peg$literalExpectation(\"const\", false),\n      peg$c176 = \"continue\",\n      peg$c177 = peg$literalExpectation(\"continue\", false),\n      peg$c178 = \"debugger\",\n      peg$c179 = peg$literalExpectation(\"debugger\", false),\n      peg$c180 = \"default\",\n      peg$c181 = peg$literalExpectation(\"default\", false),\n      peg$c182 = \"delete\",\n      peg$c183 = peg$literalExpectation(\"delete\", false),\n      peg$c184 = \"do\",\n      peg$c185 = peg$literalExpectation(\"do\", false),\n      peg$c186 = \"else\",\n      peg$c187 = peg$literalExpectation(\"else\", false),\n      peg$c188 = \"enum\",\n      peg$c189 = peg$literalExpectation(\"enum\", false),\n      peg$c190 = \"export\",\n      peg$c191 = peg$literalExpectation(\"export\", false),\n      peg$c192 = \"extends\",\n      peg$c193 = peg$literalExpectation(\"extends\", false),\n      peg$c194 = \"false\",\n      peg$c195 = peg$literalExpectation(\"false\", false),\n      peg$c196 = \"finally\",\n      peg$c197 = peg$literalExpectation(\"finally\", false),\n      peg$c198 = \"for\",\n      peg$c199 = peg$literalExpectation(\"for\", false),\n      peg$c200 = \"function\",\n      peg$c201 = peg$literalExpectation(\"function\", false),\n      peg$c202 = \"if\",\n      peg$c203 = peg$literalExpectation(\"if\", false),\n      peg$c204 = \"import\",\n      peg$c205 = peg$literalExpectation(\"import\", false),\n      peg$c206 = \"instanceof\",\n      peg$c207 = peg$literalExpectation(\"instanceof\", false),\n      peg$c208 = \"in\",\n      peg$c209 = peg$literalExpectation(\"in\", false),\n      peg$c210 = \"new\",\n      peg$c211 = peg$literalExpectation(\"new\", false),\n      peg$c212 = \"null\",\n      peg$c213 = peg$literalExpectation(\"null\", false),\n      peg$c214 = \"return\",\n      peg$c215 = peg$literalExpectation(\"return\", false),\n      peg$c216 = \"super\",\n      peg$c217 = peg$literalExpectation(\"super\", false),\n      peg$c218 = \"switch\",\n      peg$c219 = peg$literalExpectation(\"switch\", false),\n      peg$c220 = \"this\",\n      peg$c221 = peg$literalExpectation(\"this\", false),\n      peg$c222 = \"throw\",\n      peg$c223 = peg$literalExpectation(\"throw\", false),\n      peg$c224 = \"true\",\n      peg$c225 = peg$literalExpectation(\"true\", false),\n      peg$c226 = \"try\",\n      peg$c227 = peg$literalExpectation(\"try\", false),\n      peg$c228 = \"typeof\",\n      peg$c229 = peg$literalExpectation(\"typeof\", false),\n      peg$c230 = \"var\",\n      peg$c231 = peg$literalExpectation(\"var\", false),\n      peg$c232 = \"void\",\n      peg$c233 = peg$literalExpectation(\"void\", false),\n      peg$c234 = \"while\",\n      peg$c235 = peg$literalExpectation(\"while\", false),\n      peg$c236 = \"with\",\n      peg$c237 = peg$literalExpectation(\"with\", false),\n      peg$c238 = \";\",\n      peg$c239 = peg$literalExpectation(\";\", false),\n\n      peg$currPos          = 0,\n      peg$savedPos         = 0,\n      peg$posDetailsCache  = [{ line: 1, column: 1 }],\n      peg$maxFailPos       = 0,\n      peg$maxFailExpected  = [],\n      peg$silentFails      = 0,\n\n      peg$result;\n\n  if (\"startRule\" in options) {\n    if (!(options.startRule in peg$startRuleFunctions)) {\n      throw new Error(\"Can't start parsing from rule \\\"\" + options.startRule + \"\\\".\");\n    }\n\n    peg$startRuleFunction = peg$startRuleFunctions[options.startRule];\n  }\n\n  function text() {\n    return input.substring(peg$savedPos, peg$currPos);\n  }\n\n  function location() {\n    return peg$computeLocation(peg$savedPos, peg$currPos);\n  }\n\n  function expected(description, location) {\n    location = location !== void 0 ? location : peg$computeLocation(peg$savedPos, peg$currPos)\n\n    throw peg$buildStructuredError(\n      [peg$otherExpectation(description)],\n      input.substring(peg$savedPos, peg$currPos),\n      location\n    );\n  }\n\n  function error(message, location) {\n    location = location !== void 0 ? location : peg$computeLocation(peg$savedPos, peg$currPos)\n\n    throw peg$buildSimpleError(message, location);\n  }\n\n  function peg$literalExpectation(text, ignoreCase) {\n    return { type: \"literal\", text: text, ignoreCase: ignoreCase };\n  }\n\n  function peg$classExpectation(parts, inverted, ignoreCase) {\n    return { type: \"class\", parts: parts, inverted: inverted, ignoreCase: ignoreCase };\n  }\n\n  function peg$anyExpectation() {\n    return { type: \"any\" };\n  }\n\n  function peg$endExpectation() {\n    return { type: \"end\" };\n  }\n\n  function peg$otherExpectation(description) {\n    return { type: \"other\", description: description };\n  }\n\n  function peg$computePosDetails(pos) {\n    var details = peg$posDetailsCache[pos], p;\n\n    if (details) {\n      return details;\n    } else {\n      p = pos - 1;\n      while (!peg$posDetailsCache[p]) {\n        p--;\n      }\n\n      details = peg$posDetailsCache[p];\n      details = {\n        line:   details.line,\n        column: details.column\n      };\n\n      while (p < pos) {\n        if (input.charCodeAt(p) === 10) {\n          details.line++;\n          details.column = 1;\n        } else {\n          details.column++;\n        }\n\n        p++;\n      }\n\n      peg$posDetailsCache[pos] = details;\n      return details;\n    }\n  }\n\n  function peg$computeLocation(startPos, endPos) {\n    var startPosDetails = peg$computePosDetails(startPos),\n        endPosDetails   = peg$computePosDetails(endPos);\n\n    return {\n      start: {\n        offset: startPos,\n        line:   startPosDetails.line,\n        column: startPosDetails.column\n      },\n      end: {\n        offset: endPos,\n        line:   endPosDetails.line,\n        column: endPosDetails.column\n      }\n    };\n  }\n\n  function peg$fail(expected) {\n    if (peg$currPos < peg$maxFailPos) { return; }\n\n    if (peg$currPos > peg$maxFailPos) {\n      peg$maxFailPos = peg$currPos;\n      peg$maxFailExpected = [];\n    }\n\n    peg$maxFailExpected.push(expected);\n  }\n\n  function peg$buildSimpleError(message, location) {\n    return new peg$SyntaxError(message, null, null, location);\n  }\n\n  function peg$buildStructuredError(expected, found, location) {\n    return new peg$SyntaxError(\n      peg$SyntaxError.buildMessage(expected, found),\n      expected,\n      found,\n      location\n    );\n  }\n\n  function peg$parseGrammar() {\n    var s0, s1, s2, s3, s4, s5, s6;\n\n    s0 = peg$currPos;\n    s1 = peg$parse__();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$currPos;\n      s3 = peg$parseInitializer();\n      if (s3 !== peg$FAILED) {\n        s4 = peg$parse__();\n        if (s4 !== peg$FAILED) {\n          s3 = [s3, s4];\n          s2 = s3;\n        } else {\n          peg$currPos = s2;\n          s2 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s2;\n        s2 = peg$FAILED;\n      }\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = [];\n        s4 = peg$currPos;\n        s5 = peg$parseRule();\n        if (s5 !== peg$FAILED) {\n          s6 = peg$parse__();\n          if (s6 !== peg$FAILED) {\n            s5 = [s5, s6];\n            s4 = s5;\n          } else {\n            peg$currPos = s4;\n            s4 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s4;\n          s4 = peg$FAILED;\n        }\n        if (s4 !== peg$FAILED) {\n          while (s4 !== peg$FAILED) {\n            s3.push(s4);\n            s4 = peg$currPos;\n            s5 = peg$parseRule();\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parse__();\n              if (s6 !== peg$FAILED) {\n                s5 = [s5, s6];\n                s4 = s5;\n              } else {\n                peg$currPos = s4;\n                s4 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s4;\n              s4 = peg$FAILED;\n            }\n          }\n        } else {\n          s3 = peg$FAILED;\n        }\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c0(s2, s3);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseInitializer() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    s1 = peg$parseCodeBlock();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseEOS();\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c1(s1);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseRule() {\n    var s0, s1, s2, s3, s4, s5, s6, s7;\n\n    s0 = peg$currPos;\n    s1 = peg$parseIdentifierName();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parse__();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$currPos;\n        s4 = peg$parseStringLiteral();\n        if (s4 !== peg$FAILED) {\n          s5 = peg$parse__();\n          if (s5 !== peg$FAILED) {\n            s4 = [s4, s5];\n            s3 = s4;\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n        if (s3 === peg$FAILED) {\n          s3 = null;\n        }\n        if (s3 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 61) {\n            s4 = peg$c2;\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c3); }\n          }\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parse__();\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parseChoiceExpression();\n              if (s6 !== peg$FAILED) {\n                s7 = peg$parseEOS();\n                if (s7 !== peg$FAILED) {\n                  peg$savedPos = s0;\n                  s1 = peg$c4(s1, s3, s6);\n                  s0 = s1;\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseChoiceExpression() {\n    var s0, s1, s2, s3, s4, s5, s6, s7;\n\n    s0 = peg$currPos;\n    s1 = peg$parseActionExpression();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$currPos;\n      s4 = peg$parse__();\n      if (s4 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 47) {\n          s5 = peg$c5;\n          peg$currPos++;\n        } else {\n          s5 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c6); }\n        }\n        if (s5 !== peg$FAILED) {\n          s6 = peg$parse__();\n          if (s6 !== peg$FAILED) {\n            s7 = peg$parseActionExpression();\n            if (s7 !== peg$FAILED) {\n              s4 = [s4, s5, s6, s7];\n              s3 = s4;\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$currPos;\n        s4 = peg$parse__();\n        if (s4 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 47) {\n            s5 = peg$c5;\n            peg$currPos++;\n          } else {\n            s5 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c6); }\n          }\n          if (s5 !== peg$FAILED) {\n            s6 = peg$parse__();\n            if (s6 !== peg$FAILED) {\n              s7 = peg$parseActionExpression();\n              if (s7 !== peg$FAILED) {\n                s4 = [s4, s5, s6, s7];\n                s3 = s4;\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c7(s1, s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseActionExpression() {\n    var s0, s1, s2, s3, s4;\n\n    s0 = peg$currPos;\n    s1 = peg$parseSequenceExpression();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$currPos;\n      s3 = peg$parse__();\n      if (s3 !== peg$FAILED) {\n        s4 = peg$parseCodeBlock();\n        if (s4 !== peg$FAILED) {\n          s3 = [s3, s4];\n          s2 = s3;\n        } else {\n          peg$currPos = s2;\n          s2 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s2;\n        s2 = peg$FAILED;\n      }\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c8(s1, s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseSequenceExpression() {\n    var s0, s1, s2, s3, s4, s5;\n\n    s0 = peg$currPos;\n    s1 = peg$parseLabeledExpression();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$currPos;\n      s4 = peg$parse__();\n      if (s4 !== peg$FAILED) {\n        s5 = peg$parseLabeledExpression();\n        if (s5 !== peg$FAILED) {\n          s4 = [s4, s5];\n          s3 = s4;\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$currPos;\n        s4 = peg$parse__();\n        if (s4 !== peg$FAILED) {\n          s5 = peg$parseLabeledExpression();\n          if (s5 !== peg$FAILED) {\n            s4 = [s4, s5];\n            s3 = s4;\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c9(s1, s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseLabeledExpression() {\n    var s0, s1, s2, s3, s4, s5;\n\n    s0 = peg$currPos;\n    s1 = peg$parseIdentifier();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parse__();\n      if (s2 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 58) {\n          s3 = peg$c10;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c11); }\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parse__();\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parsePrefixedExpression();\n            if (s5 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c12(s1, s5);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$parsePrefixedExpression();\n    }\n\n    return s0;\n  }\n\n  function peg$parsePrefixedExpression() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = peg$parsePrefixedOperator();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parse__();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseSuffixedExpression();\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c13(s1, s3);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseSuffixedExpression();\n    }\n\n    return s0;\n  }\n\n  function peg$parsePrefixedOperator() {\n    var s0;\n\n    if (input.charCodeAt(peg$currPos) === 36) {\n      s0 = peg$c14;\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c15); }\n    }\n    if (s0 === peg$FAILED) {\n      if (input.charCodeAt(peg$currPos) === 38) {\n        s0 = peg$c16;\n        peg$currPos++;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c17); }\n      }\n      if (s0 === peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 33) {\n          s0 = peg$c18;\n          peg$currPos++;\n        } else {\n          s0 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c19); }\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseSuffixedExpression() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = peg$parsePrimaryExpression();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parse__();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseSuffixedOperator();\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c20(s1, s3);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$parsePrimaryExpression();\n    }\n\n    return s0;\n  }\n\n  function peg$parseSuffixedOperator() {\n    var s0;\n\n    if (input.charCodeAt(peg$currPos) === 63) {\n      s0 = peg$c21;\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c22); }\n    }\n    if (s0 === peg$FAILED) {\n      if (input.charCodeAt(peg$currPos) === 42) {\n        s0 = peg$c23;\n        peg$currPos++;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c24); }\n      }\n      if (s0 === peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 43) {\n          s0 = peg$c25;\n          peg$currPos++;\n        } else {\n          s0 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c26); }\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parsePrimaryExpression() {\n    var s0, s1, s2, s3, s4, s5;\n\n    s0 = peg$parseLiteralMatcher();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseCharacterClassMatcher();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseAnyMatcher();\n        if (s0 === peg$FAILED) {\n          s0 = peg$parseRuleReferenceExpression();\n          if (s0 === peg$FAILED) {\n            s0 = peg$parseSemanticPredicateExpression();\n            if (s0 === peg$FAILED) {\n              s0 = peg$currPos;\n              if (input.charCodeAt(peg$currPos) === 40) {\n                s1 = peg$c27;\n                peg$currPos++;\n              } else {\n                s1 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c28); }\n              }\n              if (s1 !== peg$FAILED) {\n                s2 = peg$parse__();\n                if (s2 !== peg$FAILED) {\n                  s3 = peg$parseChoiceExpression();\n                  if (s3 !== peg$FAILED) {\n                    s4 = peg$parse__();\n                    if (s4 !== peg$FAILED) {\n                      if (input.charCodeAt(peg$currPos) === 41) {\n                        s5 = peg$c29;\n                        peg$currPos++;\n                      } else {\n                        s5 = peg$FAILED;\n                        if (peg$silentFails === 0) { peg$fail(peg$c30); }\n                      }\n                      if (s5 !== peg$FAILED) {\n                        peg$savedPos = s0;\n                        s1 = peg$c31(s3);\n                        s0 = s1;\n                      } else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseRuleReferenceExpression() {\n    var s0, s1, s2, s3, s4, s5, s6, s7;\n\n    s0 = peg$currPos;\n    s1 = peg$parseIdentifierName();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$currPos;\n      peg$silentFails++;\n      s3 = peg$currPos;\n      s4 = peg$parse__();\n      if (s4 !== peg$FAILED) {\n        s5 = peg$currPos;\n        s6 = peg$parseStringLiteral();\n        if (s6 !== peg$FAILED) {\n          s7 = peg$parse__();\n          if (s7 !== peg$FAILED) {\n            s6 = [s6, s7];\n            s5 = s6;\n          } else {\n            peg$currPos = s5;\n            s5 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s5;\n          s5 = peg$FAILED;\n        }\n        if (s5 === peg$FAILED) {\n          s5 = null;\n        }\n        if (s5 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 61) {\n            s6 = peg$c2;\n            peg$currPos++;\n          } else {\n            s6 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c3); }\n          }\n          if (s6 !== peg$FAILED) {\n            s4 = [s4, s5, s6];\n            s3 = s4;\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n      peg$silentFails--;\n      if (s3 === peg$FAILED) {\n        s2 = void 0;\n      } else {\n        peg$currPos = s2;\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c32(s1);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseSemanticPredicateExpression() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = peg$parseSemanticPredicateOperator();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parse__();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseCodeBlock();\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c33(s1, s3);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseSemanticPredicateOperator() {\n    var s0;\n\n    if (input.charCodeAt(peg$currPos) === 38) {\n      s0 = peg$c16;\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c17); }\n    }\n    if (s0 === peg$FAILED) {\n      if (input.charCodeAt(peg$currPos) === 33) {\n        s0 = peg$c18;\n        peg$currPos++;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c19); }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseSourceCharacter() {\n    var s0;\n\n    if (input.length > peg$currPos) {\n      s0 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c34); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseWhiteSpace() {\n    var s0, s1;\n\n    peg$silentFails++;\n    if (input.charCodeAt(peg$currPos) === 9) {\n      s0 = peg$c36;\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c37); }\n    }\n    if (s0 === peg$FAILED) {\n      if (input.charCodeAt(peg$currPos) === 11) {\n        s0 = peg$c38;\n        peg$currPos++;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c39); }\n      }\n      if (s0 === peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 12) {\n          s0 = peg$c40;\n          peg$currPos++;\n        } else {\n          s0 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c41); }\n        }\n        if (s0 === peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 32) {\n            s0 = peg$c42;\n            peg$currPos++;\n          } else {\n            s0 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c43); }\n          }\n          if (s0 === peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 160) {\n              s0 = peg$c44;\n              peg$currPos++;\n            } else {\n              s0 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c45); }\n            }\n            if (s0 === peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 65279) {\n                s0 = peg$c46;\n                peg$currPos++;\n              } else {\n                s0 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c47); }\n              }\n              if (s0 === peg$FAILED) {\n                s0 = peg$parseZs();\n              }\n            }\n          }\n        }\n      }\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c35); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseLineTerminator() {\n    var s0;\n\n    if (peg$c48.test(input.charAt(peg$currPos))) {\n      s0 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c49); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseLineTerminatorSequence() {\n    var s0, s1;\n\n    peg$silentFails++;\n    if (input.charCodeAt(peg$currPos) === 10) {\n      s0 = peg$c51;\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c52); }\n    }\n    if (s0 === peg$FAILED) {\n      if (input.substr(peg$currPos, 2) === peg$c53) {\n        s0 = peg$c53;\n        peg$currPos += 2;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c54); }\n      }\n      if (s0 === peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 13) {\n          s0 = peg$c55;\n          peg$currPos++;\n        } else {\n          s0 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c56); }\n        }\n        if (s0 === peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 8232) {\n            s0 = peg$c57;\n            peg$currPos++;\n          } else {\n            s0 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c58); }\n          }\n          if (s0 === peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 8233) {\n              s0 = peg$c59;\n              peg$currPos++;\n            } else {\n              s0 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c60); }\n            }\n          }\n        }\n      }\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c50); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseComment() {\n    var s0, s1;\n\n    peg$silentFails++;\n    s0 = peg$parseMultiLineComment();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseSingleLineComment();\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c61); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseMultiLineComment() {\n    var s0, s1, s2, s3, s4, s5;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 2) === peg$c62) {\n      s1 = peg$c62;\n      peg$currPos += 2;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c63); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$currPos;\n      s4 = peg$currPos;\n      peg$silentFails++;\n      if (input.substr(peg$currPos, 2) === peg$c64) {\n        s5 = peg$c64;\n        peg$currPos += 2;\n      } else {\n        s5 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c65); }\n      }\n      peg$silentFails--;\n      if (s5 === peg$FAILED) {\n        s4 = void 0;\n      } else {\n        peg$currPos = s4;\n        s4 = peg$FAILED;\n      }\n      if (s4 !== peg$FAILED) {\n        s5 = peg$parseSourceCharacter();\n        if (s5 !== peg$FAILED) {\n          s4 = [s4, s5];\n          s3 = s4;\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$currPos;\n        s4 = peg$currPos;\n        peg$silentFails++;\n        if (input.substr(peg$currPos, 2) === peg$c64) {\n          s5 = peg$c64;\n          peg$currPos += 2;\n        } else {\n          s5 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c65); }\n        }\n        peg$silentFails--;\n        if (s5 === peg$FAILED) {\n          s4 = void 0;\n        } else {\n          peg$currPos = s4;\n          s4 = peg$FAILED;\n        }\n        if (s4 !== peg$FAILED) {\n          s5 = peg$parseSourceCharacter();\n          if (s5 !== peg$FAILED) {\n            s4 = [s4, s5];\n            s3 = s4;\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        if (input.substr(peg$currPos, 2) === peg$c64) {\n          s3 = peg$c64;\n          peg$currPos += 2;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c65); }\n        }\n        if (s3 !== peg$FAILED) {\n          s1 = [s1, s2, s3];\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseMultiLineCommentNoLineTerminator() {\n    var s0, s1, s2, s3, s4, s5;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 2) === peg$c62) {\n      s1 = peg$c62;\n      peg$currPos += 2;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c63); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$currPos;\n      s4 = peg$currPos;\n      peg$silentFails++;\n      if (input.substr(peg$currPos, 2) === peg$c64) {\n        s5 = peg$c64;\n        peg$currPos += 2;\n      } else {\n        s5 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c65); }\n      }\n      if (s5 === peg$FAILED) {\n        s5 = peg$parseLineTerminator();\n      }\n      peg$silentFails--;\n      if (s5 === peg$FAILED) {\n        s4 = void 0;\n      } else {\n        peg$currPos = s4;\n        s4 = peg$FAILED;\n      }\n      if (s4 !== peg$FAILED) {\n        s5 = peg$parseSourceCharacter();\n        if (s5 !== peg$FAILED) {\n          s4 = [s4, s5];\n          s3 = s4;\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$currPos;\n        s4 = peg$currPos;\n        peg$silentFails++;\n        if (input.substr(peg$currPos, 2) === peg$c64) {\n          s5 = peg$c64;\n          peg$currPos += 2;\n        } else {\n          s5 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c65); }\n        }\n        if (s5 === peg$FAILED) {\n          s5 = peg$parseLineTerminator();\n        }\n        peg$silentFails--;\n        if (s5 === peg$FAILED) {\n          s4 = void 0;\n        } else {\n          peg$currPos = s4;\n          s4 = peg$FAILED;\n        }\n        if (s4 !== peg$FAILED) {\n          s5 = peg$parseSourceCharacter();\n          if (s5 !== peg$FAILED) {\n            s4 = [s4, s5];\n            s3 = s4;\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        if (input.substr(peg$currPos, 2) === peg$c64) {\n          s3 = peg$c64;\n          peg$currPos += 2;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c65); }\n        }\n        if (s3 !== peg$FAILED) {\n          s1 = [s1, s2, s3];\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseSingleLineComment() {\n    var s0, s1, s2, s3, s4, s5;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 2) === peg$c66) {\n      s1 = peg$c66;\n      peg$currPos += 2;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c67); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$currPos;\n      s4 = peg$currPos;\n      peg$silentFails++;\n      s5 = peg$parseLineTerminator();\n      peg$silentFails--;\n      if (s5 === peg$FAILED) {\n        s4 = void 0;\n      } else {\n        peg$currPos = s4;\n        s4 = peg$FAILED;\n      }\n      if (s4 !== peg$FAILED) {\n        s5 = peg$parseSourceCharacter();\n        if (s5 !== peg$FAILED) {\n          s4 = [s4, s5];\n          s3 = s4;\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$currPos;\n        s4 = peg$currPos;\n        peg$silentFails++;\n        s5 = peg$parseLineTerminator();\n        peg$silentFails--;\n        if (s5 === peg$FAILED) {\n          s4 = void 0;\n        } else {\n          peg$currPos = s4;\n          s4 = peg$FAILED;\n        }\n        if (s4 !== peg$FAILED) {\n          s5 = peg$parseSourceCharacter();\n          if (s5 !== peg$FAILED) {\n            s4 = [s4, s5];\n            s3 = s4;\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        s1 = [s1, s2];\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseIdentifier() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    s1 = peg$currPos;\n    peg$silentFails++;\n    s2 = peg$parseReservedWord();\n    peg$silentFails--;\n    if (s2 === peg$FAILED) {\n      s1 = void 0;\n    } else {\n      peg$currPos = s1;\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseIdentifierName();\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c68(s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseIdentifierName() {\n    var s0, s1, s2, s3;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = peg$parseIdentifierStart();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$parseIdentifierPart();\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$parseIdentifierPart();\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c70(s1, s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c69); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseIdentifierStart() {\n    var s0, s1, s2;\n\n    s0 = peg$parseUnicodeLetter();\n    if (s0 === peg$FAILED) {\n      if (input.charCodeAt(peg$currPos) === 36) {\n        s0 = peg$c14;\n        peg$currPos++;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c15); }\n      }\n      if (s0 === peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 95) {\n          s0 = peg$c71;\n          peg$currPos++;\n        } else {\n          s0 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c72); }\n        }\n        if (s0 === peg$FAILED) {\n          s0 = peg$currPos;\n          if (input.charCodeAt(peg$currPos) === 92) {\n            s1 = peg$c73;\n            peg$currPos++;\n          } else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c74); }\n          }\n          if (s1 !== peg$FAILED) {\n            s2 = peg$parseUnicodeEscapeSequence();\n            if (s2 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c75(s2);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseIdentifierPart() {\n    var s0;\n\n    s0 = peg$parseIdentifierStart();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseUnicodeCombiningMark();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseNd();\n        if (s0 === peg$FAILED) {\n          s0 = peg$parsePc();\n          if (s0 === peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 8204) {\n              s0 = peg$c76;\n              peg$currPos++;\n            } else {\n              s0 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c77); }\n            }\n            if (s0 === peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 8205) {\n                s0 = peg$c78;\n                peg$currPos++;\n              } else {\n                s0 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c79); }\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseUnicodeLetter() {\n    var s0;\n\n    s0 = peg$parseLu();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseLl();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseLt();\n        if (s0 === peg$FAILED) {\n          s0 = peg$parseLm();\n          if (s0 === peg$FAILED) {\n            s0 = peg$parseLo();\n            if (s0 === peg$FAILED) {\n              s0 = peg$parseNl();\n            }\n          }\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseUnicodeCombiningMark() {\n    var s0;\n\n    s0 = peg$parseMn();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseMc();\n    }\n\n    return s0;\n  }\n\n  function peg$parseReservedWord() {\n    var s0;\n\n    s0 = peg$parseKeyword();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseFutureReservedWord();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseNullToken();\n        if (s0 === peg$FAILED) {\n          s0 = peg$parseBooleanLiteral();\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseKeyword() {\n    var s0;\n\n    s0 = peg$parseBreakToken();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseCaseToken();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseCatchToken();\n        if (s0 === peg$FAILED) {\n          s0 = peg$parseContinueToken();\n          if (s0 === peg$FAILED) {\n            s0 = peg$parseDebuggerToken();\n            if (s0 === peg$FAILED) {\n              s0 = peg$parseDefaultToken();\n              if (s0 === peg$FAILED) {\n                s0 = peg$parseDeleteToken();\n                if (s0 === peg$FAILED) {\n                  s0 = peg$parseDoToken();\n                  if (s0 === peg$FAILED) {\n                    s0 = peg$parseElseToken();\n                    if (s0 === peg$FAILED) {\n                      s0 = peg$parseFinallyToken();\n                      if (s0 === peg$FAILED) {\n                        s0 = peg$parseForToken();\n                        if (s0 === peg$FAILED) {\n                          s0 = peg$parseFunctionToken();\n                          if (s0 === peg$FAILED) {\n                            s0 = peg$parseIfToken();\n                            if (s0 === peg$FAILED) {\n                              s0 = peg$parseInstanceofToken();\n                              if (s0 === peg$FAILED) {\n                                s0 = peg$parseInToken();\n                                if (s0 === peg$FAILED) {\n                                  s0 = peg$parseNewToken();\n                                  if (s0 === peg$FAILED) {\n                                    s0 = peg$parseReturnToken();\n                                    if (s0 === peg$FAILED) {\n                                      s0 = peg$parseSwitchToken();\n                                      if (s0 === peg$FAILED) {\n                                        s0 = peg$parseThisToken();\n                                        if (s0 === peg$FAILED) {\n                                          s0 = peg$parseThrowToken();\n                                          if (s0 === peg$FAILED) {\n                                            s0 = peg$parseTryToken();\n                                            if (s0 === peg$FAILED) {\n                                              s0 = peg$parseTypeofToken();\n                                              if (s0 === peg$FAILED) {\n                                                s0 = peg$parseVarToken();\n                                                if (s0 === peg$FAILED) {\n                                                  s0 = peg$parseVoidToken();\n                                                  if (s0 === peg$FAILED) {\n                                                    s0 = peg$parseWhileToken();\n                                                    if (s0 === peg$FAILED) {\n                                                      s0 = peg$parseWithToken();\n                                                    }\n                                                  }\n                                                }\n                                              }\n                                            }\n                                          }\n                                        }\n                                      }\n                                    }\n                                  }\n                                }\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseFutureReservedWord() {\n    var s0;\n\n    s0 = peg$parseClassToken();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseConstToken();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseEnumToken();\n        if (s0 === peg$FAILED) {\n          s0 = peg$parseExportToken();\n          if (s0 === peg$FAILED) {\n            s0 = peg$parseExtendsToken();\n            if (s0 === peg$FAILED) {\n              s0 = peg$parseImportToken();\n              if (s0 === peg$FAILED) {\n                s0 = peg$parseSuperToken();\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseBooleanLiteral() {\n    var s0;\n\n    s0 = peg$parseTrueToken();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseFalseToken();\n    }\n\n    return s0;\n  }\n\n  function peg$parseLiteralMatcher() {\n    var s0, s1, s2;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = peg$parseStringLiteral();\n    if (s1 !== peg$FAILED) {\n      if (input.charCodeAt(peg$currPos) === 105) {\n        s2 = peg$c81;\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c82); }\n      }\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c83(s1, s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c80); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseStringLiteral() {\n    var s0, s1, s2, s3;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 34) {\n      s1 = peg$c85;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c86); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$parseDoubleStringCharacter();\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$parseDoubleStringCharacter();\n      }\n      if (s2 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 34) {\n          s3 = peg$c85;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c86); }\n        }\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c87(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 39) {\n        s1 = peg$c88;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c89); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        s3 = peg$parseSingleStringCharacter();\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$parseSingleStringCharacter();\n        }\n        if (s2 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 39) {\n            s3 = peg$c88;\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c89); }\n          }\n          if (s3 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c87(s2);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c84); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseDoubleStringCharacter() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    s1 = peg$currPos;\n    peg$silentFails++;\n    if (input.charCodeAt(peg$currPos) === 34) {\n      s2 = peg$c85;\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c86); }\n    }\n    if (s2 === peg$FAILED) {\n      if (input.charCodeAt(peg$currPos) === 92) {\n        s2 = peg$c73;\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c74); }\n      }\n      if (s2 === peg$FAILED) {\n        s2 = peg$parseLineTerminator();\n      }\n    }\n    peg$silentFails--;\n    if (s2 === peg$FAILED) {\n      s1 = void 0;\n    } else {\n      peg$currPos = s1;\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseSourceCharacter();\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c90();\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 92) {\n        s1 = peg$c73;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c74); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseEscapeSequence();\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c75(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseLineContinuation();\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseSingleStringCharacter() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    s1 = peg$currPos;\n    peg$silentFails++;\n    if (input.charCodeAt(peg$currPos) === 39) {\n      s2 = peg$c88;\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c89); }\n    }\n    if (s2 === peg$FAILED) {\n      if (input.charCodeAt(peg$currPos) === 92) {\n        s2 = peg$c73;\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c74); }\n      }\n      if (s2 === peg$FAILED) {\n        s2 = peg$parseLineTerminator();\n      }\n    }\n    peg$silentFails--;\n    if (s2 === peg$FAILED) {\n      s1 = void 0;\n    } else {\n      peg$currPos = s1;\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseSourceCharacter();\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c90();\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 92) {\n        s1 = peg$c73;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c74); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseEscapeSequence();\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c75(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseLineContinuation();\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseCharacterClassMatcher() {\n    var s0, s1, s2, s3, s4, s5;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 91) {\n      s1 = peg$c92;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c93); }\n    }\n    if (s1 !== peg$FAILED) {\n      if (input.charCodeAt(peg$currPos) === 94) {\n        s2 = peg$c94;\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c95); }\n      }\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = [];\n        s4 = peg$parseClassCharacterRange();\n        if (s4 === peg$FAILED) {\n          s4 = peg$parseClassCharacter();\n        }\n        while (s4 !== peg$FAILED) {\n          s3.push(s4);\n          s4 = peg$parseClassCharacterRange();\n          if (s4 === peg$FAILED) {\n            s4 = peg$parseClassCharacter();\n          }\n        }\n        if (s3 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 93) {\n            s4 = peg$c96;\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c97); }\n          }\n          if (s4 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 105) {\n              s5 = peg$c81;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c82); }\n            }\n            if (s5 === peg$FAILED) {\n              s5 = null;\n            }\n            if (s5 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c98(s2, s3, s5);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c91); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseClassCharacterRange() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = peg$parseClassCharacter();\n    if (s1 !== peg$FAILED) {\n      if (input.charCodeAt(peg$currPos) === 45) {\n        s2 = peg$c99;\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c100); }\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseClassCharacter();\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c101(s1, s3);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseClassCharacter() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    s1 = peg$currPos;\n    peg$silentFails++;\n    if (input.charCodeAt(peg$currPos) === 93) {\n      s2 = peg$c96;\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c97); }\n    }\n    if (s2 === peg$FAILED) {\n      if (input.charCodeAt(peg$currPos) === 92) {\n        s2 = peg$c73;\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c74); }\n      }\n      if (s2 === peg$FAILED) {\n        s2 = peg$parseLineTerminator();\n      }\n    }\n    peg$silentFails--;\n    if (s2 === peg$FAILED) {\n      s1 = void 0;\n    } else {\n      peg$currPos = s1;\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseSourceCharacter();\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c90();\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 92) {\n        s1 = peg$c73;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c74); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseEscapeSequence();\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c75(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseLineContinuation();\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseLineContinuation() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 92) {\n      s1 = peg$c73;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c74); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseLineTerminatorSequence();\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c102();\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseEscapeSequence() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$parseCharacterEscapeSequence();\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 48) {\n        s1 = peg$c103;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c104); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$currPos;\n        peg$silentFails++;\n        s3 = peg$parseDecimalDigit();\n        peg$silentFails--;\n        if (s3 === peg$FAILED) {\n          s2 = void 0;\n        } else {\n          peg$currPos = s2;\n          s2 = peg$FAILED;\n        }\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c105();\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseHexEscapeSequence();\n        if (s0 === peg$FAILED) {\n          s0 = peg$parseUnicodeEscapeSequence();\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseCharacterEscapeSequence() {\n    var s0;\n\n    s0 = peg$parseSingleEscapeCharacter();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseNonEscapeCharacter();\n    }\n\n    return s0;\n  }\n\n  function peg$parseSingleEscapeCharacter() {\n    var s0, s1;\n\n    if (input.charCodeAt(peg$currPos) === 39) {\n      s0 = peg$c88;\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c89); }\n    }\n    if (s0 === peg$FAILED) {\n      if (input.charCodeAt(peg$currPos) === 34) {\n        s0 = peg$c85;\n        peg$currPos++;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c86); }\n      }\n      if (s0 === peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 92) {\n          s0 = peg$c73;\n          peg$currPos++;\n        } else {\n          s0 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c74); }\n        }\n        if (s0 === peg$FAILED) {\n          s0 = peg$currPos;\n          if (input.charCodeAt(peg$currPos) === 98) {\n            s1 = peg$c106;\n            peg$currPos++;\n          } else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c107); }\n          }\n          if (s1 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c108();\n          }\n          s0 = s1;\n          if (s0 === peg$FAILED) {\n            s0 = peg$currPos;\n            if (input.charCodeAt(peg$currPos) === 102) {\n              s1 = peg$c109;\n              peg$currPos++;\n            } else {\n              s1 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c110); }\n            }\n            if (s1 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c111();\n            }\n            s0 = s1;\n            if (s0 === peg$FAILED) {\n              s0 = peg$currPos;\n              if (input.charCodeAt(peg$currPos) === 110) {\n                s1 = peg$c112;\n                peg$currPos++;\n              } else {\n                s1 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c113); }\n              }\n              if (s1 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c114();\n              }\n              s0 = s1;\n              if (s0 === peg$FAILED) {\n                s0 = peg$currPos;\n                if (input.charCodeAt(peg$currPos) === 114) {\n                  s1 = peg$c115;\n                  peg$currPos++;\n                } else {\n                  s1 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c116); }\n                }\n                if (s1 !== peg$FAILED) {\n                  peg$savedPos = s0;\n                  s1 = peg$c117();\n                }\n                s0 = s1;\n                if (s0 === peg$FAILED) {\n                  s0 = peg$currPos;\n                  if (input.charCodeAt(peg$currPos) === 116) {\n                    s1 = peg$c118;\n                    peg$currPos++;\n                  } else {\n                    s1 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c119); }\n                  }\n                  if (s1 !== peg$FAILED) {\n                    peg$savedPos = s0;\n                    s1 = peg$c120();\n                  }\n                  s0 = s1;\n                  if (s0 === peg$FAILED) {\n                    s0 = peg$currPos;\n                    if (input.charCodeAt(peg$currPos) === 118) {\n                      s1 = peg$c121;\n                      peg$currPos++;\n                    } else {\n                      s1 = peg$FAILED;\n                      if (peg$silentFails === 0) { peg$fail(peg$c122); }\n                    }\n                    if (s1 !== peg$FAILED) {\n                      peg$savedPos = s0;\n                      s1 = peg$c123();\n                    }\n                    s0 = s1;\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseNonEscapeCharacter() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    s1 = peg$currPos;\n    peg$silentFails++;\n    s2 = peg$parseEscapeCharacter();\n    if (s2 === peg$FAILED) {\n      s2 = peg$parseLineTerminator();\n    }\n    peg$silentFails--;\n    if (s2 === peg$FAILED) {\n      s1 = void 0;\n    } else {\n      peg$currPos = s1;\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseSourceCharacter();\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c90();\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseEscapeCharacter() {\n    var s0;\n\n    s0 = peg$parseSingleEscapeCharacter();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseDecimalDigit();\n      if (s0 === peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 120) {\n          s0 = peg$c124;\n          peg$currPos++;\n        } else {\n          s0 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c125); }\n        }\n        if (s0 === peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 117) {\n            s0 = peg$c126;\n            peg$currPos++;\n          } else {\n            s0 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c127); }\n          }\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseHexEscapeSequence() {\n    var s0, s1, s2, s3, s4, s5;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 120) {\n      s1 = peg$c124;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c125); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$currPos;\n      s3 = peg$currPos;\n      s4 = peg$parseHexDigit();\n      if (s4 !== peg$FAILED) {\n        s5 = peg$parseHexDigit();\n        if (s5 !== peg$FAILED) {\n          s4 = [s4, s5];\n          s3 = s4;\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n      if (s3 !== peg$FAILED) {\n        s2 = input.substring(s2, peg$currPos);\n      } else {\n        s2 = s3;\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c128(s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseUnicodeEscapeSequence() {\n    var s0, s1, s2, s3, s4, s5, s6, s7;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 117) {\n      s1 = peg$c126;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c127); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$currPos;\n      s3 = peg$currPos;\n      s4 = peg$parseHexDigit();\n      if (s4 !== peg$FAILED) {\n        s5 = peg$parseHexDigit();\n        if (s5 !== peg$FAILED) {\n          s6 = peg$parseHexDigit();\n          if (s6 !== peg$FAILED) {\n            s7 = peg$parseHexDigit();\n            if (s7 !== peg$FAILED) {\n              s4 = [s4, s5, s6, s7];\n              s3 = s4;\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n      if (s3 !== peg$FAILED) {\n        s2 = input.substring(s2, peg$currPos);\n      } else {\n        s2 = s3;\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c128(s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseDecimalDigit() {\n    var s0;\n\n    if (peg$c129.test(input.charAt(peg$currPos))) {\n      s0 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c130); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseHexDigit() {\n    var s0;\n\n    if (peg$c131.test(input.charAt(peg$currPos))) {\n      s0 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c132); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseAnyMatcher() {\n    var s0, s1;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 46) {\n      s1 = peg$c133;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c134); }\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c135();\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseCodeBlock() {\n    var s0, s1, s2, s3;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 123) {\n      s1 = peg$c137;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c138); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseCode();\n      if (s2 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 125) {\n          s3 = peg$c139;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c140); }\n        }\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c141(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c136); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseCode() {\n    var s0, s1, s2, s3, s4, s5;\n\n    s0 = peg$currPos;\n    s1 = [];\n    s2 = [];\n    s3 = peg$currPos;\n    s4 = peg$currPos;\n    peg$silentFails++;\n    if (peg$c142.test(input.charAt(peg$currPos))) {\n      s5 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s5 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c143); }\n    }\n    peg$silentFails--;\n    if (s5 === peg$FAILED) {\n      s4 = void 0;\n    } else {\n      peg$currPos = s4;\n      s4 = peg$FAILED;\n    }\n    if (s4 !== peg$FAILED) {\n      s5 = peg$parseSourceCharacter();\n      if (s5 !== peg$FAILED) {\n        s4 = [s4, s5];\n        s3 = s4;\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s3;\n      s3 = peg$FAILED;\n    }\n    if (s3 !== peg$FAILED) {\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$currPos;\n        s4 = peg$currPos;\n        peg$silentFails++;\n        if (peg$c142.test(input.charAt(peg$currPos))) {\n          s5 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s5 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c143); }\n        }\n        peg$silentFails--;\n        if (s5 === peg$FAILED) {\n          s4 = void 0;\n        } else {\n          peg$currPos = s4;\n          s4 = peg$FAILED;\n        }\n        if (s4 !== peg$FAILED) {\n          s5 = peg$parseSourceCharacter();\n          if (s5 !== peg$FAILED) {\n            s4 = [s4, s5];\n            s3 = s4;\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      }\n    } else {\n      s2 = peg$FAILED;\n    }\n    if (s2 === peg$FAILED) {\n      s2 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 123) {\n        s3 = peg$c137;\n        peg$currPos++;\n      } else {\n        s3 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c138); }\n      }\n      if (s3 !== peg$FAILED) {\n        s4 = peg$parseCode();\n        if (s4 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 125) {\n            s5 = peg$c139;\n            peg$currPos++;\n          } else {\n            s5 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c140); }\n          }\n          if (s5 !== peg$FAILED) {\n            s3 = [s3, s4, s5];\n            s2 = s3;\n          } else {\n            peg$currPos = s2;\n            s2 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s2;\n          s2 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s2;\n        s2 = peg$FAILED;\n      }\n    }\n    while (s2 !== peg$FAILED) {\n      s1.push(s2);\n      s2 = [];\n      s3 = peg$currPos;\n      s4 = peg$currPos;\n      peg$silentFails++;\n      if (peg$c142.test(input.charAt(peg$currPos))) {\n        s5 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s5 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c143); }\n      }\n      peg$silentFails--;\n      if (s5 === peg$FAILED) {\n        s4 = void 0;\n      } else {\n        peg$currPos = s4;\n        s4 = peg$FAILED;\n      }\n      if (s4 !== peg$FAILED) {\n        s5 = peg$parseSourceCharacter();\n        if (s5 !== peg$FAILED) {\n          s4 = [s4, s5];\n          s3 = s4;\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n      if (s3 !== peg$FAILED) {\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$currPos;\n          s4 = peg$currPos;\n          peg$silentFails++;\n          if (peg$c142.test(input.charAt(peg$currPos))) {\n            s5 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s5 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c143); }\n          }\n          peg$silentFails--;\n          if (s5 === peg$FAILED) {\n            s4 = void 0;\n          } else {\n            peg$currPos = s4;\n            s4 = peg$FAILED;\n          }\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parseSourceCharacter();\n            if (s5 !== peg$FAILED) {\n              s4 = [s4, s5];\n              s3 = s4;\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        }\n      } else {\n        s2 = peg$FAILED;\n      }\n      if (s2 === peg$FAILED) {\n        s2 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 123) {\n          s3 = peg$c137;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c138); }\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parseCode();\n          if (s4 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 125) {\n              s5 = peg$c139;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c140); }\n            }\n            if (s5 !== peg$FAILED) {\n              s3 = [s3, s4, s5];\n              s2 = s3;\n            } else {\n              peg$currPos = s2;\n              s2 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s2;\n            s2 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s2;\n          s2 = peg$FAILED;\n        }\n      }\n    }\n    if (s1 !== peg$FAILED) {\n      s0 = input.substring(s0, peg$currPos);\n    } else {\n      s0 = s1;\n    }\n\n    return s0;\n  }\n\n  function peg$parseLl() {\n    var s0;\n\n    if (peg$c144.test(input.charAt(peg$currPos))) {\n      s0 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c145); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseLm() {\n    var s0;\n\n    if (peg$c146.test(input.charAt(peg$currPos))) {\n      s0 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c147); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseLo() {\n    var s0;\n\n    if (peg$c148.test(input.charAt(peg$currPos))) {\n      s0 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c149); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseLt() {\n    var s0;\n\n    if (peg$c150.test(input.charAt(peg$currPos))) {\n      s0 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c151); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseLu() {\n    var s0;\n\n    if (peg$c152.test(input.charAt(peg$currPos))) {\n      s0 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c153); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseMc() {\n    var s0;\n\n    if (peg$c154.test(input.charAt(peg$currPos))) {\n      s0 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c155); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseMn() {\n    var s0;\n\n    if (peg$c156.test(input.charAt(peg$currPos))) {\n      s0 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c157); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseNd() {\n    var s0;\n\n    if (peg$c158.test(input.charAt(peg$currPos))) {\n      s0 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c159); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseNl() {\n    var s0;\n\n    if (peg$c160.test(input.charAt(peg$currPos))) {\n      s0 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c161); }\n    }\n\n    return s0;\n  }\n\n  function peg$parsePc() {\n    var s0;\n\n    if (peg$c162.test(input.charAt(peg$currPos))) {\n      s0 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c163); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseZs() {\n    var s0;\n\n    if (peg$c164.test(input.charAt(peg$currPos))) {\n      s0 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c165); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseBreakToken() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 5) === peg$c166) {\n      s1 = peg$c166;\n      peg$currPos += 5;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c167); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$currPos;\n      peg$silentFails++;\n      s3 = peg$parseIdentifierPart();\n      peg$silentFails--;\n      if (s3 === peg$FAILED) {\n        s2 = void 0;\n      } else {\n        peg$currPos = s2;\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        s1 = [s1, s2];\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseCaseToken() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 4) === peg$c168) {\n      s1 = peg$c168;\n      peg$currPos += 4;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c169); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$currPos;\n      peg$silentFails++;\n      s3 = peg$parseIdentifierPart();\n      peg$silentFails--;\n      if (s3 === peg$FAILED) {\n        s2 = void 0;\n      } else {\n        peg$currPos = s2;\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        s1 = [s1, s2];\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseCatchToken() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 5) === peg$c170) {\n      s1 = peg$c170;\n      peg$currPos += 5;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c171); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$currPos;\n      peg$silentFails++;\n      s3 = peg$parseIdentifierPart();\n      peg$silentFails--;\n      if (s3 === peg$FAILED) {\n        s2 = void 0;\n      } else {\n        peg$currPos = s2;\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        s1 = [s1, s2];\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseClassToken() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 5) === peg$c172) {\n      s1 = peg$c172;\n      peg$currPos += 5;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c173); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$currPos;\n      peg$silentFails++;\n      s3 = peg$parseIdentifierPart();\n      peg$silentFails--;\n      if (s3 === peg$FAILED) {\n        s2 = void 0;\n      } else {\n        peg$currPos = s2;\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        s1 = [s1, s2];\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseConstToken() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 5) === peg$c174) {\n      s1 = peg$c174;\n      peg$currPos += 5;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c175); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$currPos;\n      peg$silentFails++;\n      s3 = peg$parseIdentifierPart();\n      peg$silentFails--;\n      if (s3 === peg$FAILED) {\n        s2 = void 0;\n      } else {\n        peg$currPos = s2;\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        s1 = [s1, s2];\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseContinueToken() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 8) === peg$c176) {\n      s1 = peg$c176;\n      peg$currPos += 8;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c177); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$currPos;\n      peg$silentFails++;\n      s3 = peg$parseIdentifierPart();\n      peg$silentFails--;\n      if (s3 === peg$FAILED) {\n        s2 = void 0;\n      } else {\n        peg$currPos = s2;\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        s1 = [s1, s2];\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseDebuggerToken() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 8) === peg$c178) {\n      s1 = peg$c178;\n      peg$currPos += 8;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c179); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$currPos;\n      peg$silentFails++;\n      s3 = peg$parseIdentifierPart();\n      peg$silentFails--;\n      if (s3 === peg$FAILED) {\n        s2 = void 0;\n      } else {\n        peg$currPos = s2;\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        s1 = [s1, s2];\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseDefaultToken() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 7) === peg$c180) {\n      s1 = peg$c180;\n      peg$currPos += 7;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c181); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$currPos;\n      peg$silentFails++;\n      s3 = peg$parseIdentifierPart();\n      peg$silentFails--;\n      if (s3 === peg$FAILED) {\n        s2 = void 0;\n      } else {\n        peg$currPos = s2;\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        s1 = [s1, s2];\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseDeleteToken() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 6) === peg$c182) {\n      s1 = peg$c182;\n      peg$currPos += 6;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c183); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$currPos;\n      peg$silentFails++;\n      s3 = peg$parseIdentifierPart();\n      peg$silentFails--;\n      if (s3 === peg$FAILED) {\n        s2 = void 0;\n      } else {\n        peg$currPos = s2;\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        s1 = [s1, s2];\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseDoToken() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 2) === peg$c184) {\n      s1 = peg$c184;\n      peg$currPos += 2;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c185); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$currPos;\n      peg$silentFails++;\n      s3 = peg$parseIdentifierPart();\n      peg$silentFails--;\n      if (s3 === peg$FAILED) {\n        s2 = void 0;\n      } else {\n        peg$currPos = s2;\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        s1 = [s1, s2];\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseElseToken() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 4) === peg$c186) {\n      s1 = peg$c186;\n      peg$currPos += 4;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c187); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$currPos;\n      peg$silentFails++;\n      s3 = peg$parseIdentifierPart();\n      peg$silentFails--;\n      if (s3 === peg$FAILED) {\n        s2 = void 0;\n      } else {\n        peg$currPos = s2;\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        s1 = [s1, s2];\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseEnumToken() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 4) === peg$c188) {\n      s1 = peg$c188;\n      peg$currPos += 4;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c189); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$currPos;\n      peg$silentFails++;\n      s3 = peg$parseIdentifierPart();\n      peg$silentFails--;\n      if (s3 === peg$FAILED) {\n        s2 = void 0;\n      } else {\n        peg$currPos = s2;\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        s1 = [s1, s2];\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseExportToken() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 6) === peg$c190) {\n      s1 = peg$c190;\n      peg$currPos += 6;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c191); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$currPos;\n      peg$silentFails++;\n      s3 = peg$parseIdentifierPart();\n      peg$silentFails--;\n      if (s3 === peg$FAILED) {\n        s2 = void 0;\n      } else {\n        peg$currPos = s2;\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        s1 = [s1, s2];\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseExtendsToken() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 7) === peg$c192) {\n      s1 = peg$c192;\n      peg$currPos += 7;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c193); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$currPos;\n      peg$silentFails++;\n      s3 = peg$parseIdentifierPart();\n      peg$silentFails--;\n      if (s3 === peg$FAILED) {\n        s2 = void 0;\n      } else {\n        peg$currPos = s2;\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        s1 = [s1, s2];\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseFalseToken() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 5) === peg$c194) {\n      s1 = peg$c194;\n      peg$currPos += 5;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c195); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$currPos;\n      peg$silentFails++;\n      s3 = peg$parseIdentifierPart();\n      peg$silentFails--;\n      if (s3 === peg$FAILED) {\n        s2 = void 0;\n      } else {\n        peg$currPos = s2;\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        s1 = [s1, s2];\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseFinallyToken() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 7) === peg$c196) {\n      s1 = peg$c196;\n      peg$currPos += 7;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c197); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$currPos;\n      peg$silentFails++;\n      s3 = peg$parseIdentifierPart();\n      peg$silentFails--;\n      if (s3 === peg$FAILED) {\n        s2 = void 0;\n      } else {\n        peg$currPos = s2;\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        s1 = [s1, s2];\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseForToken() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 3) === peg$c198) {\n      s1 = peg$c198;\n      peg$currPos += 3;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c199); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$currPos;\n      peg$silentFails++;\n      s3 = peg$parseIdentifierPart();\n      peg$silentFails--;\n      if (s3 === peg$FAILED) {\n        s2 = void 0;\n      } else {\n        peg$currPos = s2;\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        s1 = [s1, s2];\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseFunctionToken() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 8) === peg$c200) {\n      s1 = peg$c200;\n      peg$currPos += 8;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c201); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$currPos;\n      peg$silentFails++;\n      s3 = peg$parseIdentifierPart();\n      peg$silentFails--;\n      if (s3 === peg$FAILED) {\n        s2 = void 0;\n      } else {\n        peg$currPos = s2;\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        s1 = [s1, s2];\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseIfToken() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 2) === peg$c202) {\n      s1 = peg$c202;\n      peg$currPos += 2;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c203); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$currPos;\n      peg$silentFails++;\n      s3 = peg$parseIdentifierPart();\n      peg$silentFails--;\n      if (s3 === peg$FAILED) {\n        s2 = void 0;\n      } else {\n        peg$currPos = s2;\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        s1 = [s1, s2];\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseImportToken() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 6) === peg$c204) {\n      s1 = peg$c204;\n      peg$currPos += 6;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c205); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$currPos;\n      peg$silentFails++;\n      s3 = peg$parseIdentifierPart();\n      peg$silentFails--;\n      if (s3 === peg$FAILED) {\n        s2 = void 0;\n      } else {\n        peg$currPos = s2;\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        s1 = [s1, s2];\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseInstanceofToken() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 10) === peg$c206) {\n      s1 = peg$c206;\n      peg$currPos += 10;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c207); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$currPos;\n      peg$silentFails++;\n      s3 = peg$parseIdentifierPart();\n      peg$silentFails--;\n      if (s3 === peg$FAILED) {\n        s2 = void 0;\n      } else {\n        peg$currPos = s2;\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        s1 = [s1, s2];\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseInToken() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 2) === peg$c208) {\n      s1 = peg$c208;\n      peg$currPos += 2;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c209); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$currPos;\n      peg$silentFails++;\n      s3 = peg$parseIdentifierPart();\n      peg$silentFails--;\n      if (s3 === peg$FAILED) {\n        s2 = void 0;\n      } else {\n        peg$currPos = s2;\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        s1 = [s1, s2];\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseNewToken() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 3) === peg$c210) {\n      s1 = peg$c210;\n      peg$currPos += 3;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c211); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$currPos;\n      peg$silentFails++;\n      s3 = peg$parseIdentifierPart();\n      peg$silentFails--;\n      if (s3 === peg$FAILED) {\n        s2 = void 0;\n      } else {\n        peg$currPos = s2;\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        s1 = [s1, s2];\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseNullToken() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 4) === peg$c212) {\n      s1 = peg$c212;\n      peg$currPos += 4;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c213); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$currPos;\n      peg$silentFails++;\n      s3 = peg$parseIdentifierPart();\n      peg$silentFails--;\n      if (s3 === peg$FAILED) {\n        s2 = void 0;\n      } else {\n        peg$currPos = s2;\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        s1 = [s1, s2];\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseReturnToken() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 6) === peg$c214) {\n      s1 = peg$c214;\n      peg$currPos += 6;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c215); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$currPos;\n      peg$silentFails++;\n      s3 = peg$parseIdentifierPart();\n      peg$silentFails--;\n      if (s3 === peg$FAILED) {\n        s2 = void 0;\n      } else {\n        peg$currPos = s2;\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        s1 = [s1, s2];\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseSuperToken() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 5) === peg$c216) {\n      s1 = peg$c216;\n      peg$currPos += 5;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c217); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$currPos;\n      peg$silentFails++;\n      s3 = peg$parseIdentifierPart();\n      peg$silentFails--;\n      if (s3 === peg$FAILED) {\n        s2 = void 0;\n      } else {\n        peg$currPos = s2;\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        s1 = [s1, s2];\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseSwitchToken() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 6) === peg$c218) {\n      s1 = peg$c218;\n      peg$currPos += 6;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c219); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$currPos;\n      peg$silentFails++;\n      s3 = peg$parseIdentifierPart();\n      peg$silentFails--;\n      if (s3 === peg$FAILED) {\n        s2 = void 0;\n      } else {\n        peg$currPos = s2;\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        s1 = [s1, s2];\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseThisToken() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 4) === peg$c220) {\n      s1 = peg$c220;\n      peg$currPos += 4;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c221); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$currPos;\n      peg$silentFails++;\n      s3 = peg$parseIdentifierPart();\n      peg$silentFails--;\n      if (s3 === peg$FAILED) {\n        s2 = void 0;\n      } else {\n        peg$currPos = s2;\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        s1 = [s1, s2];\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseThrowToken() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 5) === peg$c222) {\n      s1 = peg$c222;\n      peg$currPos += 5;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c223); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$currPos;\n      peg$silentFails++;\n      s3 = peg$parseIdentifierPart();\n      peg$silentFails--;\n      if (s3 === peg$FAILED) {\n        s2 = void 0;\n      } else {\n        peg$currPos = s2;\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        s1 = [s1, s2];\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseTrueToken() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 4) === peg$c224) {\n      s1 = peg$c224;\n      peg$currPos += 4;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c225); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$currPos;\n      peg$silentFails++;\n      s3 = peg$parseIdentifierPart();\n      peg$silentFails--;\n      if (s3 === peg$FAILED) {\n        s2 = void 0;\n      } else {\n        peg$currPos = s2;\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        s1 = [s1, s2];\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseTryToken() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 3) === peg$c226) {\n      s1 = peg$c226;\n      peg$currPos += 3;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c227); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$currPos;\n      peg$silentFails++;\n      s3 = peg$parseIdentifierPart();\n      peg$silentFails--;\n      if (s3 === peg$FAILED) {\n        s2 = void 0;\n      } else {\n        peg$currPos = s2;\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        s1 = [s1, s2];\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseTypeofToken() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 6) === peg$c228) {\n      s1 = peg$c228;\n      peg$currPos += 6;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c229); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$currPos;\n      peg$silentFails++;\n      s3 = peg$parseIdentifierPart();\n      peg$silentFails--;\n      if (s3 === peg$FAILED) {\n        s2 = void 0;\n      } else {\n        peg$currPos = s2;\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        s1 = [s1, s2];\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseVarToken() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 3) === peg$c230) {\n      s1 = peg$c230;\n      peg$currPos += 3;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c231); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$currPos;\n      peg$silentFails++;\n      s3 = peg$parseIdentifierPart();\n      peg$silentFails--;\n      if (s3 === peg$FAILED) {\n        s2 = void 0;\n      } else {\n        peg$currPos = s2;\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        s1 = [s1, s2];\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseVoidToken() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 4) === peg$c232) {\n      s1 = peg$c232;\n      peg$currPos += 4;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c233); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$currPos;\n      peg$silentFails++;\n      s3 = peg$parseIdentifierPart();\n      peg$silentFails--;\n      if (s3 === peg$FAILED) {\n        s2 = void 0;\n      } else {\n        peg$currPos = s2;\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        s1 = [s1, s2];\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseWhileToken() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 5) === peg$c234) {\n      s1 = peg$c234;\n      peg$currPos += 5;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c235); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$currPos;\n      peg$silentFails++;\n      s3 = peg$parseIdentifierPart();\n      peg$silentFails--;\n      if (s3 === peg$FAILED) {\n        s2 = void 0;\n      } else {\n        peg$currPos = s2;\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        s1 = [s1, s2];\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseWithToken() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 4) === peg$c236) {\n      s1 = peg$c236;\n      peg$currPos += 4;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c237); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$currPos;\n      peg$silentFails++;\n      s3 = peg$parseIdentifierPart();\n      peg$silentFails--;\n      if (s3 === peg$FAILED) {\n        s2 = void 0;\n      } else {\n        peg$currPos = s2;\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        s1 = [s1, s2];\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parse__() {\n    var s0, s1;\n\n    s0 = [];\n    s1 = peg$parseWhiteSpace();\n    if (s1 === peg$FAILED) {\n      s1 = peg$parseLineTerminatorSequence();\n      if (s1 === peg$FAILED) {\n        s1 = peg$parseComment();\n      }\n    }\n    while (s1 !== peg$FAILED) {\n      s0.push(s1);\n      s1 = peg$parseWhiteSpace();\n      if (s1 === peg$FAILED) {\n        s1 = peg$parseLineTerminatorSequence();\n        if (s1 === peg$FAILED) {\n          s1 = peg$parseComment();\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parse_() {\n    var s0, s1;\n\n    s0 = [];\n    s1 = peg$parseWhiteSpace();\n    if (s1 === peg$FAILED) {\n      s1 = peg$parseMultiLineCommentNoLineTerminator();\n    }\n    while (s1 !== peg$FAILED) {\n      s0.push(s1);\n      s1 = peg$parseWhiteSpace();\n      if (s1 === peg$FAILED) {\n        s1 = peg$parseMultiLineCommentNoLineTerminator();\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseEOS() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = peg$parse__();\n    if (s1 !== peg$FAILED) {\n      if (input.charCodeAt(peg$currPos) === 59) {\n        s2 = peg$c238;\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c239); }\n      }\n      if (s2 !== peg$FAILED) {\n        s1 = [s1, s2];\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$parse_();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseSingleLineComment();\n        if (s2 === peg$FAILED) {\n          s2 = null;\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseLineTerminatorSequence();\n          if (s3 !== peg$FAILED) {\n            s1 = [s1, s2, s3];\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = peg$parse__();\n        if (s1 !== peg$FAILED) {\n          s2 = peg$parseEOF();\n          if (s2 !== peg$FAILED) {\n            s1 = [s1, s2];\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseEOF() {\n    var s0, s1;\n\n    s0 = peg$currPos;\n    peg$silentFails++;\n    if (input.length > peg$currPos) {\n      s1 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c34); }\n    }\n    peg$silentFails--;\n    if (s1 === peg$FAILED) {\n      s0 = void 0;\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n\n    var OPS_TO_PREFIXED_TYPES = {\n      \"$\": \"text\",\n      \"&\": \"simple_and\",\n      \"!\": \"simple_not\"\n    };\n\n    var OPS_TO_SUFFIXED_TYPES = {\n      \"?\": \"optional\",\n      \"*\": \"zero_or_more\",\n      \"+\": \"one_or_more\"\n    };\n\n    var OPS_TO_SEMANTIC_PREDICATE_TYPES = {\n      \"&\": \"semantic_and\",\n      \"!\": \"semantic_not\"\n    };\n\n    function filterEmptyStrings(array) {\n      var result = [], i;\n\n      for (i = 0; i < array.length; i++) {\n        if (array[i] !== \"\") {\n          result.push(array[i]);\n        }\n      }\n\n      return result;\n    }\n\n    function extractOptional(optional, index) {\n      return optional ? optional[index] : null;\n    }\n\n    function extractList(list, index) {\n      var result = new Array(list.length), i;\n\n      for (i = 0; i < list.length; i++) {\n        result[i] = list[i][index];\n      }\n\n      return result;\n    }\n\n    function buildList(head, tail, index) {\n      return [head].concat(extractList(tail, index));\n    }\n\n\n  peg$result = peg$startRuleFunction();\n\n  if (peg$result !== peg$FAILED && peg$currPos === input.length) {\n    return peg$result;\n  } else {\n    if (peg$result !== peg$FAILED && peg$currPos < input.length) {\n      peg$fail(peg$endExpectation());\n    }\n\n    throw peg$buildStructuredError(\n      peg$maxFailExpected,\n      peg$maxFailPos < input.length ? input.charAt(peg$maxFailPos) : null,\n      peg$maxFailPos < input.length\n        ? peg$computeLocation(peg$maxFailPos, peg$maxFailPos + 1)\n        : peg$computeLocation(peg$maxFailPos, peg$maxFailPos)\n    );\n  }\n}\n\nmodule.exports = {\n  SyntaxError: peg$SyntaxError,\n  parse:       peg$parse\n};\n","\"use strict\";\n\nvar objects = require(\"../utils/objects\"),\n    arrays  = require(\"../utils/arrays\");\n\n/* Simple AST node visitor builder. */\nvar visitor = {\n  build: function(functions) {\n    function visit(node) {\n      return functions[node.type].apply(null, arguments);\n    }\n\n    function visitNop() { }\n\n    function visitExpression(node) {\n      var extraArgs = Array.prototype.slice.call(arguments, 1);\n\n      visit.apply(null, [node.expression].concat(extraArgs));\n    }\n\n    function visitChildren(property) {\n      return function(node) {\n        var extraArgs = Array.prototype.slice.call(arguments, 1);\n\n        arrays.each(node[property], function(child) {\n          visit.apply(null, [child].concat(extraArgs));\n        });\n      };\n    }\n\n    var DEFAULT_FUNCTIONS = {\n          grammar: function(node) {\n            var extraArgs = Array.prototype.slice.call(arguments, 1);\n\n            if (node.initializer) {\n              visit.apply(null, [node.initializer].concat(extraArgs));\n            }\n\n            arrays.each(node.rules, function(rule) {\n              visit.apply(null, [rule].concat(extraArgs));\n            });\n          },\n\n          initializer:  visitNop,\n          rule:         visitExpression,\n          named:        visitExpression,\n          choice:       visitChildren(\"alternatives\"),\n          action:       visitExpression,\n          sequence:     visitChildren(\"elements\"),\n          labeled:      visitExpression,\n          text:         visitExpression,\n          simple_and:   visitExpression,\n          simple_not:   visitExpression,\n          optional:     visitExpression,\n          zero_or_more: visitExpression,\n          one_or_more:  visitExpression,\n          group:        visitExpression,\n          semantic_and: visitNop,\n          semantic_not: visitNop,\n          rule_ref:     visitNop,\n          literal:      visitNop,\n          \"class\":      visitNop,\n          any:          visitNop\n        };\n\n    objects.defaults(functions, DEFAULT_FUNCTIONS);\n\n    return visit;\n  }\n};\n\nmodule.exports = visitor;\n","\"use strict\";\n\nvar arrays  = require(\"../utils/arrays\"),\n    visitor = require(\"./visitor\");\n\n/* AST utilities. */\nvar asts = {\n  findRule: function(ast, name) {\n    return arrays.find(ast.rules, function(r) { return r.name === name; });\n  },\n\n  indexOfRule: function(ast, name) {\n    return arrays.indexOf(ast.rules, function(r) { return r.name === name; });\n  },\n\n  alwaysConsumesOnSuccess: function(ast, node) {\n    function consumesTrue()  { return true;  }\n    function consumesFalse() { return false; }\n\n    function consumesExpression(node) {\n      return consumes(node.expression);\n    }\n\n    var consumes = visitor.build({\n      rule:  consumesExpression,\n      named: consumesExpression,\n\n      choice: function(node) {\n        return arrays.every(node.alternatives, consumes);\n      },\n\n      action: consumesExpression,\n\n      sequence: function(node) {\n        return arrays.some(node.elements, consumes);\n      },\n\n      labeled:      consumesExpression,\n      text:         consumesExpression,\n      simple_and:   consumesFalse,\n      simple_not:   consumesFalse,\n      optional:     consumesFalse,\n      zero_or_more: consumesFalse,\n      one_or_more:  consumesExpression,\n      group:        consumesExpression,\n      semantic_and: consumesFalse,\n      semantic_not: consumesFalse,\n\n      rule_ref: function(node) {\n        return consumes(asts.findRule(ast, node.name));\n      },\n\n      literal: function(node) {\n        return node.value !== \"\";\n      },\n\n      \"class\": consumesTrue,\n      any:     consumesTrue\n    });\n\n    return consumes(node);\n  }\n};\n\nmodule.exports = asts;\n","\"use strict\";\n\nvar GrammarError = require(\"../../grammar-error\"),\n    asts         = require(\"../asts\"),\n    visitor      = require(\"../visitor\");\n\n/* Checks that all referenced rules exist. */\nfunction reportUndefinedRules(ast) {\n  var check = visitor.build({\n    rule_ref: function(node) {\n      if (!asts.findRule(ast, node.name)) {\n        throw new GrammarError(\n          \"Rule \\\"\" + node.name + \"\\\" is not defined.\",\n          node.location\n        );\n      }\n    }\n  });\n\n  check(ast);\n}\n\nmodule.exports = reportUndefinedRules;\n","\"use strict\";\n\nvar GrammarError = require(\"../../grammar-error\"),\n    visitor      = require(\"../visitor\");\n\n/* Checks that each rule is defined only once. */\nfunction reportDuplicateRules(ast) {\n  var rules = {};\n\n  var check = visitor.build({\n    rule: function(node) {\n      if (rules.hasOwnProperty(node.name)) {\n        throw new GrammarError(\n          \"Rule \\\"\" + node.name + \"\\\" is already defined \"\n            + \"at line \" + rules[node.name].start.line + \", \"\n            + \"column \" + rules[node.name].start.column + \".\",\n          node.location\n        );\n      }\n\n      rules[node.name] = node.location;\n    }\n  });\n\n  check(ast);\n}\n\nmodule.exports = reportDuplicateRules;\n","\"use strict\";\n\nvar GrammarError = require(\"../../grammar-error\"),\n    arrays       = require(\"../../utils/arrays\"),\n    objects      = require(\"../../utils/objects\"),\n    visitor      = require(\"../visitor\");\n\n/* Checks that each label is defined only once within each scope. */\nfunction reportDuplicateLabels(ast) {\n  function checkExpressionWithClonedEnv(node, env) {\n    check(node.expression, objects.clone(env));\n  }\n\n  var check = visitor.build({\n    rule: function(node) {\n      check(node.expression, { });\n    },\n\n    choice: function(node, env) {\n      arrays.each(node.alternatives, function(alternative) {\n        check(alternative, objects.clone(env));\n      });\n    },\n\n    action: checkExpressionWithClonedEnv,\n\n    labeled: function(node, env) {\n      if (env.hasOwnProperty(node.label)) {\n        throw new GrammarError(\n          \"Label \\\"\" + node.label + \"\\\" is already defined \"\n            + \"at line \" + env[node.label].start.line + \", \"\n            + \"column \" + env[node.label].start.column + \".\",\n          node.location\n        );\n      }\n\n      check(node.expression, env);\n\n      env[node.label] = node.location;\n    },\n\n    text:         checkExpressionWithClonedEnv,\n    simple_and:   checkExpressionWithClonedEnv,\n    simple_not:   checkExpressionWithClonedEnv,\n    optional:     checkExpressionWithClonedEnv,\n    zero_or_more: checkExpressionWithClonedEnv,\n    one_or_more:  checkExpressionWithClonedEnv,\n    group:        checkExpressionWithClonedEnv\n  });\n\n  check(ast);\n}\n\nmodule.exports = reportDuplicateLabels;\n","\"use strict\";\n\nvar arrays       = require(\"../../utils/arrays\"),\n    GrammarError = require(\"../../grammar-error\"),\n    asts         = require(\"../asts\"),\n    visitor      = require(\"../visitor\");\n\n/*\n * Reports left recursion in the grammar, which prevents infinite recursion in\n * the generated parser.\n *\n * Both direct and indirect recursion is detected. The pass also correctly\n * reports cases like this:\n *\n *   start = \"a\"? start\n *\n * In general, if a rule reference can be reached without consuming any input,\n * it can lead to left recursion.\n */\nfunction reportInfiniteRecursion(ast) {\n  var visitedRules = [];\n\n  var check = visitor.build({\n    rule: function(node) {\n      visitedRules.push(node.name);\n      check(node.expression);\n      visitedRules.pop(node.name);\n    },\n\n    sequence: function(node) {\n      arrays.every(node.elements, function(element) {\n        check(element);\n\n        return !asts.alwaysConsumesOnSuccess(ast, element);\n      });\n    },\n\n    rule_ref: function(node) {\n      if (arrays.contains(visitedRules, node.name)) {\n        visitedRules.push(node.name);\n\n        throw new GrammarError(\n          \"Possible infinite loop when parsing (left recursion: \"\n            + visitedRules.join(\" -> \")\n            + \").\",\n          node.location\n        );\n      }\n\n      check(asts.findRule(ast, node.name));\n    }\n  });\n\n  check(ast);\n}\n\nmodule.exports = reportInfiniteRecursion;\n","\"use strict\";\n\nvar GrammarError = require(\"../../grammar-error\"),\n    asts         = require(\"../asts\"),\n    visitor      = require(\"../visitor\");\n\n/*\n * Reports expressions that don't consume any input inside |*| or |+| in the\n * grammar, which prevents infinite loops in the generated parser.\n */\nfunction reportInfiniteRepetition(ast) {\n  var check = visitor.build({\n    zero_or_more: function(node) {\n      if (!asts.alwaysConsumesOnSuccess(ast, node.expression)) {\n        throw new GrammarError(\n          \"Possible infinite loop when parsing (repetition used with an expression that may not consume any input).\",\n          node.location\n        );\n      }\n    },\n\n    one_or_more: function(node) {\n      if (!asts.alwaysConsumesOnSuccess(ast, node.expression)) {\n        throw new GrammarError(\n          \"Possible infinite loop when parsing (repetition used with an expression that may not consume any input).\",\n          node.location\n        );\n      }\n    }\n  });\n\n  check(ast);\n}\n\nmodule.exports = reportInfiniteRepetition;\n","\"use strict\";\n\nvar arrays  = require(\"../../utils/arrays\"),\n    visitor = require(\"../visitor\");\n\n/*\n * Removes proxy rules -- that is, rules that only delegate to other rule.\n */\nfunction removeProxyRules(ast, options) {\n  function isProxyRule(node) {\n    return node.type === \"rule\" && node.expression.type === \"rule_ref\";\n  }\n\n  function replaceRuleRefs(ast, from, to) {\n    var replace = visitor.build({\n      rule_ref: function(node) {\n        if (node.name === from) {\n          node.name = to;\n        }\n      }\n    });\n\n    replace(ast);\n  }\n\n  var indices = [];\n\n  arrays.each(ast.rules, function(rule, i) {\n    if (isProxyRule(rule)) {\n      replaceRuleRefs(ast, rule.name, rule.expression.name);\n      if (!arrays.contains(options.allowedStartRules, rule.name)) {\n        indices.push(i);\n      }\n    }\n  });\n\n  indices.reverse();\n\n  arrays.each(indices, function(i) { ast.rules.splice(i, 1); });\n}\n\nmodule.exports = removeProxyRules;\n","\"use strict\";\n\n/* Bytecode instruction opcodes. */\nvar opcodes = {\n  /* Stack Manipulation */\n\n  PUSH:             0,    // PUSH c\n  PUSH_UNDEFINED:   1,    // PUSH_UNDEFINED\n  PUSH_NULL:        2,    // PUSH_NULL\n  PUSH_FAILED:      3,    // PUSH_FAILED\n  PUSH_EMPTY_ARRAY: 4,    // PUSH_EMPTY_ARRAY\n  PUSH_CURR_POS:    5,    // PUSH_CURR_POS\n  POP:              6,    // POP\n  POP_CURR_POS:     7,    // POP_CURR_POS\n  POP_N:            8,    // POP_N n\n  NIP:              9,    // NIP\n  APPEND:           10,   // APPEND\n  WRAP:             11,   // WRAP n\n  TEXT:             12,   // TEXT\n\n  /* Conditions and Loops */\n\n  IF:               13,   // IF t, f\n  IF_ERROR:         14,   // IF_ERROR t, f\n  IF_NOT_ERROR:     15,   // IF_NOT_ERROR t, f\n  WHILE_NOT_ERROR:  16,   // WHILE_NOT_ERROR b\n\n  /* Matching */\n\n  MATCH_ANY:        17,   // MATCH_ANY a, f, ...\n  MATCH_STRING:     18,   // MATCH_STRING s, a, f, ...\n  MATCH_STRING_IC:  19,   // MATCH_STRING_IC s, a, f, ...\n  MATCH_REGEXP:     20,   // MATCH_REGEXP r, a, f, ...\n  ACCEPT_N:         21,   // ACCEPT_N n\n  ACCEPT_STRING:    22,   // ACCEPT_STRING s\n  FAIL:             23,   // FAIL e\n\n  /* Calls */\n\n  LOAD_SAVED_POS:   24,   // LOAD_SAVED_POS p\n  UPDATE_SAVED_POS: 25,   // UPDATE_SAVED_POS\n  CALL:             26,   // CALL f, n, pc, p1, p2, ..., pN\n\n  /* Rules */\n\n  RULE:             27,   // RULE r\n\n  /* Failure Reporting */\n\n  SILENT_FAILS_ON:  28,   // SILENT_FAILS_ON\n  SILENT_FAILS_OFF: 29    // SILENT_FAILS_OFF\n};\n\nmodule.exports = opcodes;\n","\"use strict\";\n\nfunction hex(ch) { return ch.charCodeAt(0).toString(16).toUpperCase(); }\n\n/* JavaScript code generation helpers. */\nvar js = {\n  stringEscape: function(s) {\n    /*\n     * ECMA-262, 5th ed., 7.8.4: All characters may appear literally in a string\n     * literal except for the closing quote character, backslash, carriage\n     * return, line separator, paragraph separator, and line feed. Any character\n     * may appear in the form of an escape sequence.\n     *\n     * For portability, we also escape all control and non-ASCII characters.\n     * Note that the \"\\v\" escape sequence is not used because IE does not like\n     * it.\n     */\n    return s\n      .replace(/\\\\/g,   '\\\\\\\\')   // backslash\n      .replace(/\"/g,    '\\\\\"')    // closing double quote\n      .replace(/\\0/g,   '\\\\0')    // null\n      .replace(/\\x08/g, '\\\\b')    // backspace\n      .replace(/\\t/g,   '\\\\t')    // horizontal tab\n      .replace(/\\n/g,   '\\\\n')    // line feed\n      .replace(/\\f/g,   '\\\\f')    // form feed\n      .replace(/\\r/g,   '\\\\r')    // carriage return\n      .replace(/[\\x00-\\x0F]/g,          function(ch) { return '\\\\x0' + hex(ch); })\n      .replace(/[\\x10-\\x1F\\x7F-\\xFF]/g, function(ch) { return '\\\\x'  + hex(ch); })\n      .replace(/[\\u0100-\\u0FFF]/g,      function(ch) { return '\\\\u0' + hex(ch); })\n      .replace(/[\\u1000-\\uFFFF]/g,      function(ch) { return '\\\\u'  + hex(ch); });\n  },\n\n  regexpClassEscape: function(s) {\n    /*\n     * Based on ECMA-262, 5th ed., 7.8.5 & 15.10.1.\n     *\n     * For portability, we also escape all control and non-ASCII characters.\n     */\n    return s\n      .replace(/\\\\/g, '\\\\\\\\')    // backslash\n      .replace(/\\//g, '\\\\/')     // closing slash\n      .replace(/\\]/g, '\\\\]')     // closing bracket\n      .replace(/\\^/g, '\\\\^')     // caret\n      .replace(/-/g,  '\\\\-')     // dash\n      .replace(/\\0/g, '\\\\0')     // null\n      .replace(/\\t/g, '\\\\t')     // horizontal tab\n      .replace(/\\n/g, '\\\\n')     // line feed\n      .replace(/\\v/g, '\\\\x0B')   // vertical tab\n      .replace(/\\f/g, '\\\\f')     // form feed\n      .replace(/\\r/g, '\\\\r')     // carriage return\n      .replace(/[\\x00-\\x0F]/g,          function(ch) { return '\\\\x0' + hex(ch); })\n      .replace(/[\\x10-\\x1F\\x7F-\\xFF]/g, function(ch) { return '\\\\x'  + hex(ch); })\n      .replace(/[\\u0100-\\u0FFF]/g,      function(ch) { return '\\\\u0' + hex(ch); })\n      .replace(/[\\u1000-\\uFFFF]/g,      function(ch) { return '\\\\u'  + hex(ch); });\n  }\n};\n\nmodule.exports = js;\n","\"use strict\";\n\nvar arrays  = require(\"../../utils/arrays\"),\n    objects = require(\"../../utils/objects\"),\n    asts    = require(\"../asts\"),\n    visitor = require(\"../visitor\"),\n    op      = require(\"../opcodes\"),\n    js      = require(\"../js\");\n\n/* Generates bytecode.\n *\n * Instructions\n * ============\n *\n * Stack Manipulation\n * ------------------\n *\n *  [0] PUSH c\n *\n *        stack.push(consts[c]);\n *\n *  [1] PUSH_UNDEFINED\n *\n *        stack.push(undefined);\n *\n *  [2] PUSH_NULL\n *\n *        stack.push(null);\n *\n *  [3] PUSH_FAILED\n *\n *        stack.push(FAILED);\n *\n *  [4] PUSH_EMPTY_ARRAY\n *\n *        stack.push([]);\n *\n *  [5] PUSH_CURR_POS\n *\n *        stack.push(currPos);\n *\n *  [6] POP\n *\n *        stack.pop();\n *\n *  [7] POP_CURR_POS\n *\n *        currPos = stack.pop();\n *\n *  [8] POP_N n\n *\n *        stack.pop(n);\n *\n *  [9] NIP\n *\n *        value = stack.pop();\n *        stack.pop();\n *        stack.push(value);\n *\n * [10] APPEND\n *\n *        value = stack.pop();\n *        array = stack.pop();\n *        array.push(value);\n *        stack.push(array);\n *\n * [11] WRAP n\n *\n *        stack.push(stack.pop(n));\n *\n * [12] TEXT\n *\n *        stack.push(input.substring(stack.pop(), currPos));\n *\n * Conditions and Loops\n * --------------------\n *\n * [13] IF t, f\n *\n *        if (stack.top()) {\n *          interpret(ip + 3, ip + 3 + t);\n *        } else {\n *          interpret(ip + 3 + t, ip + 3 + t + f);\n *        }\n *\n * [14] IF_ERROR t, f\n *\n *        if (stack.top() === FAILED) {\n *          interpret(ip + 3, ip + 3 + t);\n *        } else {\n *          interpret(ip + 3 + t, ip + 3 + t + f);\n *        }\n *\n * [15] IF_NOT_ERROR t, f\n *\n *        if (stack.top() !== FAILED) {\n *          interpret(ip + 3, ip + 3 + t);\n *        } else {\n *          interpret(ip + 3 + t, ip + 3 + t + f);\n *        }\n *\n * [16] WHILE_NOT_ERROR b\n *\n *        while(stack.top() !== FAILED) {\n *          interpret(ip + 2, ip + 2 + b);\n *        }\n *\n * Matching\n * --------\n *\n * [17] MATCH_ANY a, f, ...\n *\n *        if (input.length > currPos) {\n *          interpret(ip + 3, ip + 3 + a);\n *        } else {\n *          interpret(ip + 3 + a, ip + 3 + a + f);\n *        }\n *\n * [18] MATCH_STRING s, a, f, ...\n *\n *        if (input.substr(currPos, consts[s].length) === consts[s]) {\n *          interpret(ip + 4, ip + 4 + a);\n *        } else {\n *          interpret(ip + 4 + a, ip + 4 + a + f);\n *        }\n *\n * [19] MATCH_STRING_IC s, a, f, ...\n *\n *        if (input.substr(currPos, consts[s].length).toLowerCase() === consts[s]) {\n *          interpret(ip + 4, ip + 4 + a);\n *        } else {\n *          interpret(ip + 4 + a, ip + 4 + a + f);\n *        }\n *\n * [20] MATCH_REGEXP r, a, f, ...\n *\n *        if (consts[r].test(input.charAt(currPos))) {\n *          interpret(ip + 4, ip + 4 + a);\n *        } else {\n *          interpret(ip + 4 + a, ip + 4 + a + f);\n *        }\n *\n * [21] ACCEPT_N n\n *\n *        stack.push(input.substring(currPos, n));\n *        currPos += n;\n *\n * [22] ACCEPT_STRING s\n *\n *        stack.push(consts[s]);\n *        currPos += consts[s].length;\n *\n * [23] FAIL e\n *\n *        stack.push(FAILED);\n *        fail(consts[e]);\n *\n * Calls\n * -----\n *\n * [24] LOAD_SAVED_POS p\n *\n *        savedPos = stack[p];\n *\n * [25] UPDATE_SAVED_POS\n *\n *        savedPos = currPos;\n *\n * [26] CALL f, n, pc, p1, p2, ..., pN\n *\n *        value = consts[f](stack[p1], ..., stack[pN]);\n *        stack.pop(n);\n *        stack.push(value);\n *\n * Rules\n * -----\n *\n * [27] RULE r\n *\n *        stack.push(parseRule(r));\n *\n * Failure Reporting\n * -----------------\n *\n * [28] SILENT_FAILS_ON\n *\n *        silentFails++;\n *\n * [29] SILENT_FAILS_OFF\n *\n *        silentFails--;\n */\nfunction generateBytecode(ast) {\n  var consts = [];\n\n  function addConst(value) {\n    var index = arrays.indexOf(consts, value);\n\n    return index === -1 ? consts.push(value) - 1 : index;\n  }\n\n  function addFunctionConst(params, code) {\n    return addConst(\n      \"function(\" + params.join(\", \") + \") {\" + code + \"}\"\n    );\n  }\n\n  function buildSequence() {\n    return Array.prototype.concat.apply([], arguments);\n  }\n\n  function buildCondition(condCode, thenCode, elseCode) {\n    return condCode.concat(\n      [thenCode.length, elseCode.length],\n      thenCode,\n      elseCode\n    );\n  }\n\n  function buildLoop(condCode, bodyCode) {\n    return condCode.concat([bodyCode.length], bodyCode);\n  }\n\n  function buildCall(functionIndex, delta, env, sp) {\n    var params = arrays.map(objects.values(env), function(p) { return sp - p; });\n\n    return [op.CALL, functionIndex, delta, params.length].concat(params);\n  }\n\n  function buildSimplePredicate(expression, negative, context) {\n    return buildSequence(\n      [op.PUSH_CURR_POS],\n      [op.SILENT_FAILS_ON],\n      generate(expression, {\n        sp:     context.sp + 1,\n        env:    objects.clone(context.env),\n        action: null\n      }),\n      [op.SILENT_FAILS_OFF],\n      buildCondition(\n        [negative ? op.IF_ERROR : op.IF_NOT_ERROR],\n        buildSequence(\n          [op.POP],\n          [negative ? op.POP : op.POP_CURR_POS],\n          [op.PUSH_UNDEFINED]\n        ),\n        buildSequence(\n          [op.POP],\n          [negative ? op.POP_CURR_POS : op.POP],\n          [op.PUSH_FAILED]\n        )\n      )\n    );\n  }\n\n  function buildSemanticPredicate(code, negative, context) {\n    var functionIndex = addFunctionConst(objects.keys(context.env), code);\n\n    return buildSequence(\n      [op.UPDATE_SAVED_POS],\n      buildCall(functionIndex, 0, context.env, context.sp),\n      buildCondition(\n        [op.IF],\n        buildSequence(\n          [op.POP],\n          negative ? [op.PUSH_FAILED] : [op.PUSH_UNDEFINED]\n        ),\n        buildSequence(\n          [op.POP],\n          negative ? [op.PUSH_UNDEFINED] : [op.PUSH_FAILED]\n        )\n      )\n    );\n  }\n\n  function buildAppendLoop(expressionCode) {\n    return buildLoop(\n      [op.WHILE_NOT_ERROR],\n      buildSequence([op.APPEND], expressionCode)\n    );\n  }\n\n  var generate = visitor.build({\n    grammar: function(node) {\n      arrays.each(node.rules, generate);\n\n      node.consts = consts;\n    },\n\n    rule: function(node) {\n      node.bytecode = generate(node.expression, {\n        sp:     -1,    // stack pointer\n        env:    { },   // mapping of label names to stack positions\n        action: null   // action nodes pass themselves to children here\n      });\n    },\n\n    named: function(node, context) {\n      var nameIndex = addConst(\n        'peg$otherExpectation(\"' + js.stringEscape(node.name) + '\")'\n      );\n\n      /*\n       * The code generated below is slightly suboptimal because |FAIL| pushes\n       * to the stack, so we need to stick a |POP| in front of it. We lack a\n       * dedicated instruction that would just report the failure and not touch\n       * the stack.\n       */\n      return buildSequence(\n        [op.SILENT_FAILS_ON],\n        generate(node.expression, context),\n        [op.SILENT_FAILS_OFF],\n        buildCondition([op.IF_ERROR], [op.FAIL, nameIndex], [])\n      );\n    },\n\n    choice: function(node, context) {\n      function buildAlternativesCode(alternatives, context) {\n        return buildSequence(\n          generate(alternatives[0], {\n            sp:     context.sp,\n            env:    objects.clone(context.env),\n            action: null\n          }),\n          alternatives.length > 1\n            ? buildCondition(\n                [op.IF_ERROR],\n                buildSequence(\n                  [op.POP],\n                  buildAlternativesCode(alternatives.slice(1), context)\n                ),\n                []\n              )\n            : []\n        );\n      }\n\n      return buildAlternativesCode(node.alternatives, context);\n    },\n\n    action: function(node, context) {\n      var env            = objects.clone(context.env),\n          emitCall       = node.expression.type !== \"sequence\"\n                        || node.expression.elements.length === 0,\n          expressionCode = generate(node.expression, {\n            sp:     context.sp + (emitCall ? 1 : 0),\n            env:    env,\n            action: node\n          }),\n          functionIndex  = addFunctionConst(objects.keys(env), node.code);\n\n      return emitCall\n        ? buildSequence(\n            [op.PUSH_CURR_POS],\n            expressionCode,\n            buildCondition(\n              [op.IF_NOT_ERROR],\n              buildSequence(\n                [op.LOAD_SAVED_POS, 1],\n                buildCall(functionIndex, 1, env, context.sp + 2)\n              ),\n              []\n            ),\n            [op.NIP]\n          )\n        : expressionCode;\n    },\n\n    sequence: function(node, context) {\n      function buildElementsCode(elements, context) {\n        var processedCount, functionIndex;\n\n        if (elements.length > 0) {\n          processedCount = node.elements.length - elements.slice(1).length;\n\n          return buildSequence(\n            generate(elements[0], {\n              sp:     context.sp,\n              env:    context.env,\n              action: null\n            }),\n            buildCondition(\n              [op.IF_NOT_ERROR],\n              buildElementsCode(elements.slice(1), {\n                sp:     context.sp + 1,\n                env:    context.env,\n                action: context.action\n              }),\n              buildSequence(\n                processedCount > 1 ? [op.POP_N, processedCount] : [op.POP],\n                [op.POP_CURR_POS],\n                [op.PUSH_FAILED]\n              )\n            )\n          );\n        } else {\n          if (context.action) {\n            functionIndex = addFunctionConst(\n              objects.keys(context.env),\n              context.action.code\n            );\n\n            return buildSequence(\n              [op.LOAD_SAVED_POS, node.elements.length],\n              buildCall(\n                functionIndex,\n                node.elements.length,\n                context.env,\n                context.sp\n              ),\n              [op.NIP]\n            );\n          } else {\n            return buildSequence([op.WRAP, node.elements.length], [op.NIP]);\n          }\n        }\n      }\n\n      return buildSequence(\n        [op.PUSH_CURR_POS],\n        buildElementsCode(node.elements, {\n          sp:     context.sp + 1,\n          env:    context.env,\n          action: context.action\n        })\n      );\n    },\n\n    labeled: function(node, context) {\n      var env = objects.clone(context.env);\n\n      context.env[node.label] = context.sp + 1;\n\n      return generate(node.expression, {\n        sp:     context.sp,\n        env:    env,\n        action: null\n      });\n    },\n\n    text: function(node, context) {\n      return buildSequence(\n        [op.PUSH_CURR_POS],\n        generate(node.expression, {\n          sp:     context.sp + 1,\n          env:    objects.clone(context.env),\n          action: null\n        }),\n        buildCondition(\n          [op.IF_NOT_ERROR],\n          buildSequence([op.POP], [op.TEXT]),\n          [op.NIP]\n        )\n      );\n    },\n\n    simple_and: function(node, context) {\n      return buildSimplePredicate(node.expression, false, context);\n    },\n\n    simple_not: function(node, context) {\n      return buildSimplePredicate(node.expression, true, context);\n    },\n\n    optional: function(node, context) {\n      return buildSequence(\n        generate(node.expression, {\n          sp:     context.sp,\n          env:    objects.clone(context.env),\n          action: null\n        }),\n        buildCondition(\n          [op.IF_ERROR],\n          buildSequence([op.POP], [op.PUSH_NULL]),\n          []\n        )\n      );\n    },\n\n    zero_or_more: function(node, context) {\n      var expressionCode = generate(node.expression, {\n            sp:     context.sp + 1,\n            env:    objects.clone(context.env),\n            action: null\n          });\n\n      return buildSequence(\n        [op.PUSH_EMPTY_ARRAY],\n        expressionCode,\n        buildAppendLoop(expressionCode),\n        [op.POP]\n      );\n    },\n\n    one_or_more: function(node, context) {\n      var expressionCode = generate(node.expression, {\n            sp:     context.sp + 1,\n            env:    objects.clone(context.env),\n            action: null\n          });\n\n      return buildSequence(\n        [op.PUSH_EMPTY_ARRAY],\n        expressionCode,\n        buildCondition(\n          [op.IF_NOT_ERROR],\n          buildSequence(buildAppendLoop(expressionCode), [op.POP]),\n          buildSequence([op.POP], [op.POP], [op.PUSH_FAILED])\n        )\n      );\n    },\n\n    group: function(node, context) {\n      return generate(node.expression, {\n        sp:     context.sp,\n        env:    objects.clone(context.env),\n        action: null\n      });\n    },\n\n    semantic_and: function(node, context) {\n      return buildSemanticPredicate(node.code, false, context);\n    },\n\n    semantic_not: function(node, context) {\n      return buildSemanticPredicate(node.code, true, context);\n    },\n\n    rule_ref: function(node) {\n      return [op.RULE, asts.indexOfRule(ast, node.name)];\n    },\n\n    literal: function(node) {\n      var stringIndex, expectedIndex;\n\n      if (node.value.length > 0) {\n        stringIndex = addConst('\"'\n          + js.stringEscape(\n              node.ignoreCase ? node.value.toLowerCase() : node.value\n            )\n          + '\"'\n        );\n        expectedIndex = addConst(\n          'peg$literalExpectation('\n            + '\"' + js.stringEscape(node.value) + '\", '\n            + node.ignoreCase\n            + ')'\n        );\n\n        /*\n         * For case-sensitive strings the value must match the beginning of the\n         * remaining input exactly. As a result, we can use |ACCEPT_STRING| and\n         * save one |substr| call that would be needed if we used |ACCEPT_N|.\n         */\n        return buildCondition(\n          node.ignoreCase\n            ? [op.MATCH_STRING_IC, stringIndex]\n            : [op.MATCH_STRING, stringIndex],\n          node.ignoreCase\n            ? [op.ACCEPT_N, node.value.length]\n            : [op.ACCEPT_STRING, stringIndex],\n          [op.FAIL, expectedIndex]\n        );\n      } else {\n        stringIndex = addConst('\"\"');\n\n        return [op.PUSH, stringIndex];\n      }\n    },\n\n    \"class\": function(node) {\n      var regexp, parts, regexpIndex, expectedIndex;\n\n      if (node.parts.length > 0) {\n        regexp = '/^['\n          + (node.inverted ? '^' : '')\n          + arrays.map(node.parts, function(part) {\n              return part instanceof Array\n                ? js.regexpClassEscape(part[0])\n                  + '-'\n                  + js.regexpClassEscape(part[1])\n                : js.regexpClassEscape(part);\n            }).join('')\n          + ']/' + (node.ignoreCase ? 'i' : '');\n      } else {\n        /*\n         * IE considers regexps /[]/ and /[^]/ as syntactically invalid, so we\n         * translate them into equivalents it can handle.\n         */\n        regexp = node.inverted ? '/^[\\\\S\\\\s]/' : '/^(?!)/';\n      }\n\n      parts = '['\n        + arrays.map(node.parts, function(part) {\n            return part instanceof Array\n              ? '[\"' + js.stringEscape(part[0]) + '\", \"' + js.stringEscape(part[1]) + '\"]'\n              : '\"' + js.stringEscape(part) + '\"';\n          }).join(', ')\n        + ']';\n\n      regexpIndex   = addConst(regexp);\n      expectedIndex = addConst(\n        'peg$classExpectation('\n          + parts + ', '\n          + node.inverted + ', '\n          + node.ignoreCase\n          + ')'\n      );\n\n      return buildCondition(\n        [op.MATCH_REGEXP, regexpIndex],\n        [op.ACCEPT_N, 1],\n        [op.FAIL, expectedIndex]\n      );\n    },\n\n    any: function() {\n      var expectedIndex = addConst('peg$anyExpectation()');\n\n      return buildCondition(\n        [op.MATCH_ANY],\n        [op.ACCEPT_N, 1],\n        [op.FAIL, expectedIndex]\n      );\n    }\n  });\n\n  generate(ast);\n}\n\nmodule.exports = generateBytecode;\n","\"use strict\";\n\nvar arrays  = require(\"../../utils/arrays\"),\n    objects = require(\"../../utils/objects\"),\n    asts    = require(\"../asts\"),\n    op      = require(\"../opcodes\"),\n    js      = require(\"../js\");\n\n/* Generates parser JavaScript code. */\nfunction generateJS(ast, options) {\n  /* These only indent non-empty lines to avoid trailing whitespace. */\n  function indent2(code)  { return code.replace(/^(.+)$/gm, '  $1');         }\n  function indent6(code)  { return code.replace(/^(.+)$/gm, '      $1');     }\n  function indent10(code) { return code.replace(/^(.+)$/gm, '          $1'); }\n\n  function generateTables() {\n    if (options.optimize === \"size\") {\n      return [\n        'peg$consts = [',\n           indent2(ast.consts.join(',\\n')),\n        '],',\n        '',\n        'peg$bytecode = [',\n           indent2(arrays.map(ast.rules, function(rule) {\n             return 'peg$decode(\"'\n                   + js.stringEscape(arrays.map(\n                       rule.bytecode,\n                       function(b) { return String.fromCharCode(b + 32); }\n                     ).join(''))\n                   + '\")';\n           }).join(',\\n')),\n        '],'\n      ].join('\\n');\n    } else {\n      return arrays.map(\n        ast.consts,\n        function(c, i) { return 'peg$c' + i + ' = ' + c + ','; }\n      ).join('\\n');\n    }\n  }\n\n  function generateRuleHeader(ruleNameCode, ruleIndexCode) {\n    var parts = [];\n\n    parts.push('');\n\n    if (options.trace) {\n      parts.push([\n        'peg$tracer.trace({',\n        '  type:     \"rule.enter\",',\n        '  rule:     ' + ruleNameCode + ',',\n        '  location: peg$computeLocation(startPos, startPos)',\n        '});',\n        ''\n      ].join('\\n'));\n    }\n\n    if (options.cache) {\n      parts.push([\n        'var key    = peg$currPos * ' + ast.rules.length + ' + ' + ruleIndexCode + ',',\n        '    cached = peg$resultsCache[key];',\n        '',\n        'if (cached) {',\n        '  peg$currPos = cached.nextPos;',\n        ''\n      ].join('\\n'));\n\n      if (options.trace) {\n        parts.push([\n          'if (cached.result !== peg$FAILED) {',\n          '  peg$tracer.trace({',\n          '    type:   \"rule.match\",',\n          '    rule:   ' + ruleNameCode + ',',\n          '    result: cached.result,',\n          '    location: peg$computeLocation(startPos, peg$currPos)',\n          '  });',\n          '} else {',\n          '  peg$tracer.trace({',\n          '    type: \"rule.fail\",',\n          '    rule: ' + ruleNameCode + ',',\n          '    location: peg$computeLocation(startPos, startPos)',\n          '  });',\n          '}',\n          ''\n        ].join('\\n'));\n      }\n\n      parts.push([\n        '  return cached.result;',\n        '}',\n        ''\n      ].join('\\n'));\n    }\n\n    return parts.join('\\n');\n  }\n\n  function generateRuleFooter(ruleNameCode, resultCode) {\n    var parts = [];\n\n    if (options.cache) {\n      parts.push([\n        '',\n        'peg$resultsCache[key] = { nextPos: peg$currPos, result: ' + resultCode + ' };'\n      ].join('\\n'));\n    }\n\n    if (options.trace) {\n      parts.push([\n          '',\n          'if (' + resultCode + ' !== peg$FAILED) {',\n          '  peg$tracer.trace({',\n          '    type:   \"rule.match\",',\n          '    rule:   ' + ruleNameCode + ',',\n          '    result: ' + resultCode + ',',\n          '    location: peg$computeLocation(startPos, peg$currPos)',\n          '  });',\n          '} else {',\n          '  peg$tracer.trace({',\n          '    type: \"rule.fail\",',\n          '    rule: ' + ruleNameCode + ',',\n          '    location: peg$computeLocation(startPos, startPos)',\n          '  });',\n          '}'\n      ].join('\\n'));\n    }\n\n    parts.push([\n      '',\n      'return ' + resultCode + ';'\n    ].join('\\n'));\n\n    return parts.join('\\n');\n  }\n\n  function generateInterpreter() {\n    var parts = [];\n\n    function generateCondition(cond, argsLength) {\n      var baseLength      = argsLength + 3,\n          thenLengthCode = 'bc[ip + ' + (baseLength - 2) + ']',\n          elseLengthCode = 'bc[ip + ' + (baseLength - 1) + ']';\n\n      return [\n        'ends.push(end);',\n        'ips.push(ip + ' + baseLength + ' + ' + thenLengthCode + ' + ' + elseLengthCode + ');',\n        '',\n        'if (' + cond + ') {',\n        '  end = ip + ' + baseLength + ' + ' + thenLengthCode + ';',\n        '  ip += ' + baseLength + ';',\n        '} else {',\n        '  end = ip + ' + baseLength + ' + ' + thenLengthCode + ' + ' + elseLengthCode + ';',\n        '  ip += ' + baseLength + ' + ' + thenLengthCode + ';',\n        '}',\n        '',\n        'break;'\n      ].join('\\n');\n    }\n\n    function generateLoop(cond) {\n      var baseLength     = 2,\n          bodyLengthCode = 'bc[ip + ' + (baseLength - 1) + ']';\n\n      return [\n        'if (' + cond + ') {',\n        '  ends.push(end);',\n        '  ips.push(ip);',\n        '',\n        '  end = ip + ' + baseLength + ' + ' + bodyLengthCode + ';',\n        '  ip += ' + baseLength + ';',\n        '} else {',\n        '  ip += ' + baseLength + ' + ' + bodyLengthCode + ';',\n        '}',\n        '',\n        'break;'\n      ].join('\\n');\n    }\n\n    function generateCall() {\n      var baseLength       = 4,\n          paramsLengthCode = 'bc[ip + ' + (baseLength - 1) + ']';\n\n      return [\n        'params = bc.slice(ip + ' + baseLength + ', ip + ' + baseLength + ' + ' + paramsLengthCode + ');',\n        'for (i = 0; i < ' + paramsLengthCode + '; i++) {',\n        '  params[i] = stack[stack.length - 1 - params[i]];',\n        '}',\n        '',\n        'stack.splice(',\n        '  stack.length - bc[ip + 2],',\n        '  bc[ip + 2],',\n        '  peg$consts[bc[ip + 1]].apply(null, params)',\n        ');',\n        '',\n        'ip += ' + baseLength + ' + ' + paramsLengthCode + ';',\n        'break;'\n      ].join('\\n');\n    }\n\n    parts.push([\n      'function peg$decode(s) {',\n      '  var bc = new Array(s.length), i;',\n      '',\n      '  for (i = 0; i < s.length; i++) {',\n      '    bc[i] = s.charCodeAt(i) - 32;',\n      '  }',\n      '',\n      '  return bc;',\n      '}',\n      '',\n      'function peg$parseRule(index) {'\n    ].join('\\n'));\n\n    if (options.trace) {\n      parts.push([\n        '  var bc       = peg$bytecode[index],',\n        '      ip       = 0,',\n        '      ips      = [],',\n        '      end      = bc.length,',\n        '      ends     = [],',\n        '      stack    = [],',\n        '      startPos = peg$currPos,',\n        '      params, i;'\n      ].join('\\n'));\n    } else {\n      parts.push([\n        '  var bc    = peg$bytecode[index],',\n        '      ip    = 0,',\n        '      ips   = [],',\n        '      end   = bc.length,',\n        '      ends  = [],',\n        '      stack = [],',\n        '      params, i;'\n      ].join('\\n'));\n    }\n\n    parts.push(indent2(generateRuleHeader('peg$ruleNames[index]', 'index')));\n\n    parts.push([\n      /*\n       * The point of the outer loop and the |ips| & |ends| stacks is to avoid\n       * recursive calls for interpreting parts of bytecode. In other words, we\n       * implement the |interpret| operation of the abstract machine without\n       * function calls. Such calls would likely slow the parser down and more\n       * importantly cause stack overflows for complex grammars.\n       */\n      '  while (true) {',\n      '    while (ip < end) {',\n      '      switch (bc[ip]) {',\n      '        case ' + op.PUSH + ':',               // PUSH c\n      '          stack.push(peg$consts[bc[ip + 1]]);',\n      '          ip += 2;',\n      '          break;',\n      '',\n      '        case ' + op.PUSH_UNDEFINED + ':',     // PUSH_UNDEFINED\n      '          stack.push(void 0);',\n      '          ip++;',\n      '          break;',\n      '',\n      '        case ' + op.PUSH_NULL + ':',          // PUSH_NULL\n      '          stack.push(null);',\n      '          ip++;',\n      '          break;',\n      '',\n      '        case ' + op.PUSH_FAILED + ':',        // PUSH_FAILED\n      '          stack.push(peg$FAILED);',\n      '          ip++;',\n      '          break;',\n      '',\n      '        case ' + op.PUSH_EMPTY_ARRAY + ':',   // PUSH_EMPTY_ARRAY\n      '          stack.push([]);',\n      '          ip++;',\n      '          break;',\n      '',\n      '        case ' + op.PUSH_CURR_POS + ':',      // PUSH_CURR_POS\n      '          stack.push(peg$currPos);',\n      '          ip++;',\n      '          break;',\n      '',\n      '        case ' + op.POP + ':',                // POP\n      '          stack.pop();',\n      '          ip++;',\n      '          break;',\n      '',\n      '        case ' + op.POP_CURR_POS + ':',       // POP_CURR_POS\n      '          peg$currPos = stack.pop();',\n      '          ip++;',\n      '          break;',\n      '',\n      '        case ' + op.POP_N + ':',              // POP_N n\n      '          stack.length -= bc[ip + 1];',\n      '          ip += 2;',\n      '          break;',\n      '',\n      '        case ' + op.NIP + ':',                // NIP\n      '          stack.splice(-2, 1);',\n      '          ip++;',\n      '          break;',\n      '',\n      '        case ' + op.APPEND + ':',             // APPEND\n      '          stack[stack.length - 2].push(stack.pop());',\n      '          ip++;',\n      '          break;',\n      '',\n      '        case ' + op.WRAP + ':',               // WRAP n\n      '          stack.push(stack.splice(stack.length - bc[ip + 1], bc[ip + 1]));',\n      '          ip += 2;',\n      '          break;',\n      '',\n      '        case ' + op.TEXT + ':',               // TEXT\n      '          stack.push(input.substring(stack.pop(), peg$currPos));',\n      '          ip++;',\n      '          break;',\n      '',\n      '        case ' + op.IF + ':',                 // IF t, f\n                 indent10(generateCondition('stack[stack.length - 1]', 0)),\n      '',\n      '        case ' + op.IF_ERROR + ':',           // IF_ERROR t, f\n                 indent10(generateCondition(\n                   'stack[stack.length - 1] === peg$FAILED',\n                   0\n                 )),\n      '',\n      '        case ' + op.IF_NOT_ERROR + ':',       // IF_NOT_ERROR t, f\n                 indent10(\n                   generateCondition('stack[stack.length - 1] !== peg$FAILED',\n                   0\n                 )),\n      '',\n      '        case ' + op.WHILE_NOT_ERROR + ':',    // WHILE_NOT_ERROR b\n                 indent10(generateLoop('stack[stack.length - 1] !== peg$FAILED')),\n      '',\n      '        case ' + op.MATCH_ANY + ':',          // MATCH_ANY a, f, ...\n                 indent10(generateCondition('input.length > peg$currPos', 0)),\n      '',\n      '        case ' + op.MATCH_STRING + ':',       // MATCH_STRING s, a, f, ...\n                 indent10(generateCondition(\n                   'input.substr(peg$currPos, peg$consts[bc[ip + 1]].length) === peg$consts[bc[ip + 1]]',\n                   1\n                 )),\n      '',\n      '        case ' + op.MATCH_STRING_IC + ':',    // MATCH_STRING_IC s, a, f, ...\n                 indent10(generateCondition(\n                   'input.substr(peg$currPos, peg$consts[bc[ip + 1]].length).toLowerCase() === peg$consts[bc[ip + 1]]',\n                   1\n                 )),\n      '',\n      '        case ' + op.MATCH_REGEXP + ':',       // MATCH_REGEXP r, a, f, ...\n                 indent10(generateCondition(\n                   'peg$consts[bc[ip + 1]].test(input.charAt(peg$currPos))',\n                   1\n                 )),\n      '',\n      '        case ' + op.ACCEPT_N + ':',           // ACCEPT_N n\n      '          stack.push(input.substr(peg$currPos, bc[ip + 1]));',\n      '          peg$currPos += bc[ip + 1];',\n      '          ip += 2;',\n      '          break;',\n      '',\n      '        case ' + op.ACCEPT_STRING + ':',      // ACCEPT_STRING s\n      '          stack.push(peg$consts[bc[ip + 1]]);',\n      '          peg$currPos += peg$consts[bc[ip + 1]].length;',\n      '          ip += 2;',\n      '          break;',\n      '',\n      '        case ' + op.FAIL + ':',               // FAIL e\n      '          stack.push(peg$FAILED);',\n      '          if (peg$silentFails === 0) {',\n      '            peg$fail(peg$consts[bc[ip + 1]]);',\n      '          }',\n      '          ip += 2;',\n      '          break;',\n      '',\n      '        case ' + op.LOAD_SAVED_POS + ':',     // LOAD_SAVED_POS p\n      '          peg$savedPos = stack[stack.length - 1 - bc[ip + 1]];',\n      '          ip += 2;',\n      '          break;',\n      '',\n      '        case ' + op.UPDATE_SAVED_POS + ':',   // UPDATE_SAVED_POS\n      '          peg$savedPos = peg$currPos;',\n      '          ip++;',\n      '          break;',\n      '',\n      '        case ' + op.CALL + ':',               // CALL f, n, pc, p1, p2, ..., pN\n                 indent10(generateCall()),\n      '',\n      '        case ' + op.RULE + ':',               // RULE r\n      '          stack.push(peg$parseRule(bc[ip + 1]));',\n      '          ip += 2;',\n      '          break;',\n      '',\n      '        case ' + op.SILENT_FAILS_ON + ':',    // SILENT_FAILS_ON\n      '          peg$silentFails++;',\n      '          ip++;',\n      '          break;',\n      '',\n      '        case ' + op.SILENT_FAILS_OFF + ':',   // SILENT_FAILS_OFF\n      '          peg$silentFails--;',\n      '          ip++;',\n      '          break;',\n      '',\n      '        default:',\n      '          throw new Error(\"Invalid opcode: \" + bc[ip] + \".\");',\n      '      }',\n      '    }',\n      '',\n      '    if (ends.length > 0) {',\n      '      end = ends.pop();',\n      '      ip = ips.pop();',\n      '    } else {',\n      '      break;',\n      '    }',\n      '  }'\n    ].join('\\n'));\n\n    parts.push(indent2(generateRuleFooter('peg$ruleNames[index]', 'stack[0]')));\n    parts.push('}');\n\n    return parts.join('\\n');\n  }\n\n  function generateRuleFunction(rule) {\n    var parts = [], code;\n\n    function c(i) { return \"peg$c\" + i; } // |consts[i]| of the abstract machine\n    function s(i) { return \"s\"     + i; } // |stack[i]| of the abstract machine\n\n    var stack = {\n          sp:    -1,\n          maxSp: -1,\n\n          push: function(exprCode) {\n            var code = s(++this.sp) + ' = ' + exprCode + ';';\n\n            if (this.sp > this.maxSp) { this.maxSp = this.sp; }\n\n            return code;\n          },\n\n          pop: function(n) {\n            var values;\n\n            if (n === void 0) {\n              return s(this.sp--);\n            } else {\n              values = arrays.map(arrays.range(this.sp - n + 1, this.sp + 1), s);\n              this.sp -= n;\n\n              return values;\n            }\n          },\n\n          top: function() {\n            return s(this.sp);\n          },\n\n          index: function(i) {\n            return s(this.sp - i);\n          }\n        };\n\n    function compile(bc) {\n      var ip    = 0,\n          end   = bc.length,\n          parts = [],\n          value;\n\n      function compileCondition(cond, argCount) {\n        var baseLength = argCount + 3,\n            thenLength = bc[ip + baseLength - 2],\n            elseLength = bc[ip + baseLength - 1],\n            baseSp     = stack.sp,\n            thenCode, elseCode, thenSp, elseSp;\n\n        ip += baseLength;\n        thenCode = compile(bc.slice(ip, ip + thenLength));\n        thenSp = stack.sp;\n        ip += thenLength;\n\n        if (elseLength > 0) {\n          stack.sp = baseSp;\n          elseCode = compile(bc.slice(ip, ip + elseLength));\n          elseSp = stack.sp;\n          ip += elseLength;\n\n          if (thenSp !== elseSp) {\n            throw new Error(\n              \"Branches of a condition must move the stack pointer in the same way.\"\n            );\n          }\n        }\n\n        parts.push('if (' + cond + ') {');\n        parts.push(indent2(thenCode));\n        if (elseLength > 0) {\n          parts.push('} else {');\n          parts.push(indent2(elseCode));\n        }\n        parts.push('}');\n      }\n\n      function compileLoop(cond) {\n        var baseLength = 2,\n            bodyLength = bc[ip + baseLength - 1],\n            baseSp     = stack.sp,\n            bodyCode, bodySp;\n\n        ip += baseLength;\n        bodyCode = compile(bc.slice(ip, ip + bodyLength));\n        bodySp = stack.sp;\n        ip += bodyLength;\n\n        if (bodySp !== baseSp) {\n          throw new Error(\"Body of a loop can't move the stack pointer.\");\n        }\n\n        parts.push('while (' + cond + ') {');\n        parts.push(indent2(bodyCode));\n        parts.push('}');\n      }\n\n      function compileCall() {\n        var baseLength   = 4,\n            paramsLength = bc[ip + baseLength - 1];\n\n        var value = c(bc[ip + 1]) + '('\n              + arrays.map(\n                  bc.slice(ip + baseLength, ip + baseLength + paramsLength),\n                  function(p) { return stack.index(p); }\n                ).join(', ')\n              + ')';\n        stack.pop(bc[ip + 2]);\n        parts.push(stack.push(value));\n        ip += baseLength + paramsLength;\n      }\n\n      while (ip < end) {\n        switch (bc[ip]) {\n          case op.PUSH:               // PUSH c\n            parts.push(stack.push(c(bc[ip + 1])));\n            ip += 2;\n            break;\n\n          case op.PUSH_CURR_POS:      // PUSH_CURR_POS\n            parts.push(stack.push('peg$currPos'));\n            ip++;\n            break;\n\n          case op.PUSH_UNDEFINED:      // PUSH_UNDEFINED\n            parts.push(stack.push('void 0'));\n            ip++;\n            break;\n\n          case op.PUSH_NULL:          // PUSH_NULL\n            parts.push(stack.push('null'));\n            ip++;\n            break;\n\n          case op.PUSH_FAILED:        // PUSH_FAILED\n            parts.push(stack.push('peg$FAILED'));\n            ip++;\n            break;\n\n          case op.PUSH_EMPTY_ARRAY:   // PUSH_EMPTY_ARRAY\n            parts.push(stack.push('[]'));\n            ip++;\n            break;\n\n          case op.POP:                // POP\n            stack.pop();\n            ip++;\n            break;\n\n          case op.POP_CURR_POS:       // POP_CURR_POS\n            parts.push('peg$currPos = ' + stack.pop() + ';');\n            ip++;\n            break;\n\n          case op.POP_N:              // POP_N n\n            stack.pop(bc[ip + 1]);\n            ip += 2;\n            break;\n\n          case op.NIP:                // NIP\n            value = stack.pop();\n            stack.pop();\n            parts.push(stack.push(value));\n            ip++;\n            break;\n\n          case op.APPEND:             // APPEND\n            value = stack.pop();\n            parts.push(stack.top() + '.push(' + value + ');');\n            ip++;\n            break;\n\n          case op.WRAP:               // WRAP n\n            parts.push(\n              stack.push('[' + stack.pop(bc[ip + 1]).join(', ') + ']')\n            );\n            ip += 2;\n            break;\n\n          case op.TEXT:               // TEXT\n            parts.push(\n              stack.push('input.substring(' + stack.pop() + ', peg$currPos)')\n            );\n            ip++;\n            break;\n\n          case op.IF:                 // IF t, f\n            compileCondition(stack.top(), 0);\n            break;\n\n          case op.IF_ERROR:           // IF_ERROR t, f\n            compileCondition(stack.top() + ' === peg$FAILED', 0);\n            break;\n\n          case op.IF_NOT_ERROR:       // IF_NOT_ERROR t, f\n            compileCondition(stack.top() + ' !== peg$FAILED', 0);\n            break;\n\n          case op.WHILE_NOT_ERROR:    // WHILE_NOT_ERROR b\n            compileLoop(stack.top() + ' !== peg$FAILED', 0);\n            break;\n\n          case op.MATCH_ANY:          // MATCH_ANY a, f, ...\n            compileCondition('input.length > peg$currPos', 0);\n            break;\n\n          case op.MATCH_STRING:       // MATCH_STRING s, a, f, ...\n            compileCondition(\n              eval(ast.consts[bc[ip + 1]]).length > 1\n                ? 'input.substr(peg$currPos, '\n                    + eval(ast.consts[bc[ip + 1]]).length\n                    + ') === '\n                    + c(bc[ip + 1])\n                : 'input.charCodeAt(peg$currPos) === '\n                    + eval(ast.consts[bc[ip + 1]]).charCodeAt(0),\n              1\n            );\n            break;\n\n          case op.MATCH_STRING_IC:    // MATCH_STRING_IC s, a, f, ...\n            compileCondition(\n              'input.substr(peg$currPos, '\n                + eval(ast.consts[bc[ip + 1]]).length\n                + ').toLowerCase() === '\n                + c(bc[ip + 1]),\n              1\n            );\n            break;\n\n          case op.MATCH_REGEXP:       // MATCH_REGEXP r, a, f, ...\n            compileCondition(\n              c(bc[ip + 1]) + '.test(input.charAt(peg$currPos))',\n              1\n            );\n            break;\n\n          case op.ACCEPT_N:           // ACCEPT_N n\n            parts.push(stack.push(\n              bc[ip + 1] > 1\n                ? 'input.substr(peg$currPos, ' + bc[ip + 1] + ')'\n                : 'input.charAt(peg$currPos)'\n            ));\n            parts.push(\n              bc[ip + 1] > 1\n                ? 'peg$currPos += ' + bc[ip + 1] + ';'\n                : 'peg$currPos++;'\n            );\n            ip += 2;\n            break;\n\n          case op.ACCEPT_STRING:      // ACCEPT_STRING s\n            parts.push(stack.push(c(bc[ip + 1])));\n            parts.push(\n              eval(ast.consts[bc[ip + 1]]).length > 1\n                ? 'peg$currPos += ' + eval(ast.consts[bc[ip + 1]]).length + ';'\n                : 'peg$currPos++;'\n            );\n            ip += 2;\n            break;\n\n          case op.FAIL:               // FAIL e\n            parts.push(stack.push('peg$FAILED'));\n            parts.push('if (peg$silentFails === 0) { peg$fail(' + c(bc[ip + 1]) + '); }');\n            ip += 2;\n            break;\n\n          case op.LOAD_SAVED_POS:     // LOAD_SAVED_POS p\n            parts.push('peg$savedPos = ' + stack.index(bc[ip + 1]) + ';');\n            ip += 2;\n            break;\n\n          case op.UPDATE_SAVED_POS:   // UPDATE_SAVED_POS\n            parts.push('peg$savedPos = peg$currPos;');\n            ip++;\n            break;\n\n          case op.CALL:               // CALL f, n, pc, p1, p2, ..., pN\n            compileCall();\n            break;\n\n          case op.RULE:               // RULE r\n            parts.push(stack.push(\"peg$parse\" + ast.rules[bc[ip + 1]].name + \"()\"));\n            ip += 2;\n            break;\n\n          case op.SILENT_FAILS_ON:    // SILENT_FAILS_ON\n            parts.push('peg$silentFails++;');\n            ip++;\n            break;\n\n          case op.SILENT_FAILS_OFF:   // SILENT_FAILS_OFF\n            parts.push('peg$silentFails--;');\n            ip++;\n            break;\n\n          default:\n            throw new Error(\"Invalid opcode: \" + bc[ip] + \".\");\n        }\n      }\n\n      return parts.join('\\n');\n    }\n\n    code = compile(rule.bytecode);\n\n    parts.push('function peg$parse' + rule.name + '() {');\n\n    if (options.trace) {\n      parts.push([\n        '  var ' + arrays.map(arrays.range(0, stack.maxSp + 1), s).join(', ') + ',',\n        '      startPos = peg$currPos;'\n      ].join('\\n'));\n    } else {\n      parts.push(\n        '  var ' + arrays.map(arrays.range(0, stack.maxSp + 1), s).join(', ') + ';'\n      );\n    }\n\n    parts.push(indent2(generateRuleHeader(\n      '\"' + js.stringEscape(rule.name) + '\"',\n      asts.indexOfRule(ast, rule.name)\n    )));\n    parts.push(indent2(code));\n    parts.push(indent2(generateRuleFooter(\n      '\"' + js.stringEscape(rule.name) + '\"',\n      s(0)\n    )));\n\n    parts.push('}');\n\n    return parts.join('\\n');\n  }\n\n  function generateToplevel() {\n    var parts = [],\n        startRuleIndices,   startRuleIndex,\n        startRuleFunctions, startRuleFunction,\n        ruleNames;\n\n    parts.push([\n      'function peg$subclass(child, parent) {',\n      '  function ctor() { this.constructor = child; }',\n      '  ctor.prototype = parent.prototype;',\n      '  child.prototype = new ctor();',\n      '}',\n      '',\n      'function peg$SyntaxError(message, expected, found, location) {',\n      '  this.message  = message;',\n      '  this.expected = expected;',\n      '  this.found    = found;',\n      '  this.location = location;',\n      '  this.name     = \"SyntaxError\";',\n      '',\n      '  if (typeof Error.captureStackTrace === \"function\") {',\n      '    Error.captureStackTrace(this, peg$SyntaxError);',\n      '  }',\n      '}',\n      '',\n      'peg$subclass(peg$SyntaxError, Error);',\n      '',\n      'peg$SyntaxError.buildMessage = function(expected, found) {',\n      '  var DESCRIBE_EXPECTATION_FNS = {',\n      '        literal: function(expectation) {',\n      '          return \"\\\\\\\"\" + literalEscape(expectation.text) + \"\\\\\\\"\";',\n      '        },',\n      '',\n      '        \"class\": function(expectation) {',\n      '          var escapedParts = \"\",',\n      '              i;',\n      '',\n      '          for (i = 0; i < expectation.parts.length; i++) {',\n      '            escapedParts += expectation.parts[i] instanceof Array',\n      '              ? classEscape(expectation.parts[i][0]) + \"-\" + classEscape(expectation.parts[i][1])',\n      '              : classEscape(expectation.parts[i]);',\n      '          }',\n      '',\n      '          return \"[\" + (expectation.inverted ? \"^\" : \"\") + escapedParts + \"]\";',\n      '        },',\n      '',\n      '        any: function(expectation) {',\n      '          return \"any character\";',\n      '        },',\n      '',\n      '        end: function(expectation) {',\n      '          return \"end of input\";',\n      '        },',\n      '',\n      '        other: function(expectation) {',\n      '          return expectation.description;',\n      '        }',\n      '      };',\n      '',\n      '  function hex(ch) {',\n      '    return ch.charCodeAt(0).toString(16).toUpperCase();',\n      '  }',\n      '',\n      '  function literalEscape(s) {',\n      '    return s',\n      '      .replace(/\\\\\\\\/g, \\'\\\\\\\\\\\\\\\\\\')',   // backslash\n      '      .replace(/\"/g,  \\'\\\\\\\\\"\\')',        // closing double quote\n      '      .replace(/\\\\0/g, \\'\\\\\\\\0\\')',       // null\n      '      .replace(/\\\\t/g, \\'\\\\\\\\t\\')',       // horizontal tab\n      '      .replace(/\\\\n/g, \\'\\\\\\\\n\\')',       // line feed\n      '      .replace(/\\\\r/g, \\'\\\\\\\\r\\')',       // carriage return\n      '      .replace(/[\\\\x00-\\\\x0F]/g,          function(ch) { return \\'\\\\\\\\x0\\' + hex(ch); })',\n      '      .replace(/[\\\\x10-\\\\x1F\\\\x7F-\\\\x9F]/g, function(ch) { return \\'\\\\\\\\x\\'  + hex(ch); });',\n      '  }',\n      '',\n      '  function classEscape(s) {',\n      '    return s',\n      '      .replace(/\\\\\\\\/g, \\'\\\\\\\\\\\\\\\\\\')',   // backslash\n      '      .replace(/\\\\]/g, \\'\\\\\\\\]\\')',       // closing bracket\n      '      .replace(/\\\\^/g, \\'\\\\\\\\^\\')',       // caret\n      '      .replace(/-/g,  \\'\\\\\\\\-\\')',        // dash\n      '      .replace(/\\\\0/g, \\'\\\\\\\\0\\')',       // null\n      '      .replace(/\\\\t/g, \\'\\\\\\\\t\\')',       // horizontal tab\n      '      .replace(/\\\\n/g, \\'\\\\\\\\n\\')',       // line feed\n      '      .replace(/\\\\r/g, \\'\\\\\\\\r\\')',       // carriage return\n      '      .replace(/[\\\\x00-\\\\x0F]/g,          function(ch) { return \\'\\\\\\\\x0\\' + hex(ch); })',\n      '      .replace(/[\\\\x10-\\\\x1F\\\\x7F-\\\\x9F]/g, function(ch) { return \\'\\\\\\\\x\\'  + hex(ch); });',\n      '  }',\n      '',\n      '  function describeExpectation(expectation) {',\n      '    return DESCRIBE_EXPECTATION_FNS[expectation.type](expectation);',\n      '  }',\n      '',\n      '  function describeExpected(expected) {',\n      '    var descriptions = new Array(expected.length),',\n      '        i, j;',\n      '',\n      '    for (i = 0; i < expected.length; i++) {',\n      '      descriptions[i] = describeExpectation(expected[i]);',\n      '    }',\n      '',\n      '    descriptions.sort();',\n      '',\n      '    if (descriptions.length > 0) {',\n      '      for (i = 1, j = 1; i < descriptions.length; i++) {',\n      '        if (descriptions[i - 1] !== descriptions[i]) {',\n      '          descriptions[j] = descriptions[i];',\n      '          j++;',\n      '        }',\n      '      }',\n      '      descriptions.length = j;',\n      '    }',\n      '',\n      '    switch (descriptions.length) {',\n      '      case 1:',\n      '        return descriptions[0];',\n      '',\n      '      case 2:',\n      '        return descriptions[0] + \" or \" + descriptions[1];',\n      '',\n      '      default:',\n      '        return descriptions.slice(0, -1).join(\", \")',\n      '          + \", or \"',\n      '          + descriptions[descriptions.length - 1];',\n      '    }',\n      '  }',\n      '',\n      '  function describeFound(found) {',\n      '    return found ? \"\\\\\"\" + literalEscape(found) + \"\\\\\"\" : \"end of input\";',\n      '  }',\n      '',\n      '  return \"Expected \" + describeExpected(expected) + \" but \" + describeFound(found) + \" found.\";',\n      '};',\n      ''\n    ].join('\\n'));\n\n    if (options.trace) {\n      parts.push([\n        'function peg$DefaultTracer() {',\n        '  this.indentLevel = 0;',\n        '}',\n        '',\n        'peg$DefaultTracer.prototype.trace = function(event) {',\n        '  var that = this;',\n        '',\n        '  function log(event) {',\n        '    function repeat(string, n) {',\n        '       var result = \"\", i;',\n        '',\n        '       for (i = 0; i < n; i++) {',\n        '         result += string;',\n        '       }',\n        '',\n        '       return result;',\n        '    }',\n        '',\n        '    function pad(string, length) {',\n        '      return string + repeat(\" \", length - string.length);',\n        '    }',\n        '',\n        '    if (typeof console === \"object\") {',   // IE 8-10\n        '      console.log(',\n        '        event.location.start.line + \":\" + event.location.start.column + \"-\"',\n        '          + event.location.end.line + \":\" + event.location.end.column + \" \"',\n        '          + pad(event.type, 10) + \" \"',\n        '          + repeat(\"  \", that.indentLevel) + event.rule',\n        '      );',\n        '    }',\n        '  }',\n        '',\n        '  switch (event.type) {',\n        '    case \"rule.enter\":',\n        '      log(event);',\n        '      this.indentLevel++;',\n        '      break;',\n        '',\n        '    case \"rule.match\":',\n        '      this.indentLevel--;',\n        '      log(event);',\n        '      break;',\n        '',\n        '    case \"rule.fail\":',\n        '      this.indentLevel--;',\n        '      log(event);',\n        '      break;',\n        '',\n        '    default:',\n        '      throw new Error(\"Invalid event type: \" + event.type + \".\");',\n        '  }',\n        '};',\n        ''\n      ].join('\\n'));\n    }\n\n    parts.push([\n      'function peg$parse(input, options) {',\n      '  options = options !== void 0 ? options : {};',\n      '',\n      '  var peg$FAILED = {},',\n      ''\n    ].join('\\n'));\n\n    if (options.optimize === \"size\") {\n      startRuleIndices = '{ '\n                       + arrays.map(\n                           options.allowedStartRules,\n                           function(r) { return r + ': ' + asts.indexOfRule(ast, r); }\n                         ).join(', ')\n                       + ' }';\n      startRuleIndex = asts.indexOfRule(ast, options.allowedStartRules[0]);\n\n      parts.push([\n        '      peg$startRuleIndices = ' + startRuleIndices + ',',\n        '      peg$startRuleIndex   = ' + startRuleIndex + ','\n      ].join('\\n'));\n    } else {\n      startRuleFunctions = '{ '\n                       + arrays.map(\n                           options.allowedStartRules,\n                           function(r) { return r + ': peg$parse' + r; }\n                         ).join(', ')\n                       + ' }';\n      startRuleFunction = 'peg$parse' + options.allowedStartRules[0];\n\n      parts.push([\n        '      peg$startRuleFunctions = ' + startRuleFunctions + ',',\n        '      peg$startRuleFunction  = ' + startRuleFunction + ','\n      ].join('\\n'));\n    }\n\n    parts.push('');\n\n    parts.push(indent6(generateTables()));\n\n    parts.push([\n      '',\n      '      peg$currPos          = 0,',\n      '      peg$savedPos         = 0,',\n      '      peg$posDetailsCache  = [{ line: 1, column: 1 }],',\n      '      peg$maxFailPos       = 0,',\n      '      peg$maxFailExpected  = [],',\n      '      peg$silentFails      = 0,',   // 0 = report failures, > 0 = silence failures\n      ''\n    ].join('\\n'));\n\n    if (options.cache) {\n      parts.push([\n        '      peg$resultsCache = {},',\n        ''\n      ].join('\\n'));\n    }\n\n    if (options.trace) {\n      if (options.optimize === \"size\") {\n        ruleNames = '['\n                  + arrays.map(\n                      ast.rules,\n                      function(r) { return '\"' + js.stringEscape(r.name) + '\"'; }\n                    ).join(', ')\n                  + ']';\n\n        parts.push([\n          '      peg$ruleNames = ' + ruleNames + ',',\n          ''\n        ].join('\\n'));\n      }\n\n      parts.push([\n        '      peg$tracer = \"tracer\" in options ? options.tracer : new peg$DefaultTracer(),',\n        ''\n      ].join('\\n'));\n    }\n\n    parts.push([\n      '      peg$result;',\n      ''\n    ].join('\\n'));\n\n    if (options.optimize === \"size\") {\n      parts.push([\n        '  if (\"startRule\" in options) {',\n        '    if (!(options.startRule in peg$startRuleIndices)) {',\n        '      throw new Error(\"Can\\'t start parsing from rule \\\\\"\" + options.startRule + \"\\\\\".\");',\n        '    }',\n        '',\n        '    peg$startRuleIndex = peg$startRuleIndices[options.startRule];',\n        '  }'\n      ].join('\\n'));\n    } else {\n      parts.push([\n        '  if (\"startRule\" in options) {',\n        '    if (!(options.startRule in peg$startRuleFunctions)) {',\n        '      throw new Error(\"Can\\'t start parsing from rule \\\\\"\" + options.startRule + \"\\\\\".\");',\n        '    }',\n        '',\n        '    peg$startRuleFunction = peg$startRuleFunctions[options.startRule];',\n        '  }'\n      ].join('\\n'));\n    }\n\n    parts.push([\n      '',\n      '  function text() {',\n      '    return input.substring(peg$savedPos, peg$currPos);',\n      '  }',\n      '',\n      '  function location() {',\n      '    return peg$computeLocation(peg$savedPos, peg$currPos);',\n      '  }',\n      '',\n      '  function expected(description, location) {',\n      '    location = location !== void 0 ? location : peg$computeLocation(peg$savedPos, peg$currPos)',\n      '',\n      '    throw peg$buildStructuredError(',\n      '      [peg$otherExpectation(description)],',\n      '      input.substring(peg$savedPos, peg$currPos),',\n      '      location',\n      '    );',\n      '  }',\n      '',\n      '  function error(message, location) {',\n      '    location = location !== void 0 ? location : peg$computeLocation(peg$savedPos, peg$currPos)',\n      '',\n      '    throw peg$buildSimpleError(message, location);',\n      '  }',\n      '',\n      '  function peg$literalExpectation(text, ignoreCase) {',\n      '    return { type: \"literal\", text: text, ignoreCase: ignoreCase };',\n      '  }',\n      '',\n      '  function peg$classExpectation(parts, inverted, ignoreCase) {',\n      '    return { type: \"class\", parts: parts, inverted: inverted, ignoreCase: ignoreCase };',\n      '  }',\n      '',\n      '  function peg$anyExpectation() {',\n      '    return { type: \"any\" };',\n      '  }',\n      '',\n      '  function peg$endExpectation() {',\n      '    return { type: \"end\" };',\n      '  }',\n      '',\n      '  function peg$otherExpectation(description) {',\n      '    return { type: \"other\", description: description };',\n      '  }',\n      '',\n      '  function peg$computePosDetails(pos) {',\n      '    var details = peg$posDetailsCache[pos], p;',\n      '',\n      '    if (details) {',\n      '      return details;',\n      '    } else {',\n      '      p = pos - 1;',\n      '      while (!peg$posDetailsCache[p]) {',\n      '        p--;',\n      '      }',\n      '',\n      '      details = peg$posDetailsCache[p];',\n      '      details = {',\n      '        line:   details.line,',\n      '        column: details.column',\n      '      };',\n      '',\n      '      while (p < pos) {',\n      '        if (input.charCodeAt(p) === 10) {',\n      '          details.line++;',\n      '          details.column = 1;',\n      '        } else {',\n      '          details.column++;',\n      '        }',\n      '',\n      '        p++;',\n      '      }',\n      '',\n      '      peg$posDetailsCache[pos] = details;',\n      '      return details;',\n      '    }',\n      '  }',\n      '',\n      '  function peg$computeLocation(startPos, endPos) {',\n      '    var startPosDetails = peg$computePosDetails(startPos),',\n      '        endPosDetails   = peg$computePosDetails(endPos);',\n      '',\n      '    return {',\n      '      start: {',\n      '        offset: startPos,',\n      '        line:   startPosDetails.line,',\n      '        column: startPosDetails.column',\n      '      },',\n      '      end: {',\n      '        offset: endPos,',\n      '        line:   endPosDetails.line,',\n      '        column: endPosDetails.column',\n      '      }',\n      '    };',\n      '  }',\n      '',\n      '  function peg$fail(expected) {',\n      '    if (peg$currPos < peg$maxFailPos) { return; }',\n      '',\n      '    if (peg$currPos > peg$maxFailPos) {',\n      '      peg$maxFailPos = peg$currPos;',\n      '      peg$maxFailExpected = [];',\n      '    }',\n      '',\n      '    peg$maxFailExpected.push(expected);',\n      '  }',\n      '',\n      '  function peg$buildSimpleError(message, location) {',\n      '    return new peg$SyntaxError(message, null, null, location);',\n      '  }',\n      '',\n      '  function peg$buildStructuredError(expected, found, location) {',\n      '    return new peg$SyntaxError(',\n      '      peg$SyntaxError.buildMessage(expected, found),',\n      '      expected,',\n      '      found,',\n      '      location',\n      '    );',\n      '  }',\n      ''\n    ].join('\\n'));\n\n    if (options.optimize === \"size\") {\n      parts.push(indent2(generateInterpreter()));\n      parts.push('');\n    } else {\n      arrays.each(ast.rules, function(rule) {\n        parts.push(indent2(generateRuleFunction(rule)));\n        parts.push('');\n      });\n    }\n\n    if (ast.initializer) {\n      parts.push(indent2(ast.initializer.code));\n      parts.push('');\n    }\n\n    if (options.optimize === \"size\") {\n      parts.push('  peg$result = peg$parseRule(peg$startRuleIndex);');\n    } else {\n      parts.push('  peg$result = peg$startRuleFunction();');\n    }\n\n    parts.push([\n      '',\n      '  if (peg$result !== peg$FAILED && peg$currPos === input.length) {',\n      '    return peg$result;',\n      '  } else {',\n      '    if (peg$result !== peg$FAILED && peg$currPos < input.length) {',\n      '      peg$fail(peg$endExpectation());',\n      '    }',\n      '',\n      '    throw peg$buildStructuredError(',\n      '      peg$maxFailExpected,',\n      '      peg$maxFailPos < input.length ? input.charAt(peg$maxFailPos) : null,',\n      '      peg$maxFailPos < input.length',\n      '        ? peg$computeLocation(peg$maxFailPos, peg$maxFailPos + 1)',\n      '        : peg$computeLocation(peg$maxFailPos, peg$maxFailPos)',\n      '    );',\n      '  }',\n      '}'\n    ].join('\\n'));\n\n    return parts.join('\\n');\n  }\n\n  function generateWrapper(toplevelCode) {\n    function generateGeneratedByComment() {\n      return [\n        '/*',\n        ' * Generated by PEG.js 0.10.0.',\n        ' *',\n        ' * http://pegjs.org/',\n        ' */'\n      ].join('\\n');\n    }\n\n    function generateParserObject() {\n      return options.trace\n        ? [\n            '{',\n            '  SyntaxError:   peg$SyntaxError,',\n            '  DefaultTracer: peg$DefaultTracer,',\n            '  parse:         peg$parse',\n            '}'\n          ].join('\\n')\n        : [\n            '{',\n            '  SyntaxError: peg$SyntaxError,',\n            '  parse:       peg$parse',\n            '}'\n          ].join('\\n');\n    }\n\n    var generators = {\n      bare: function() {\n        return [\n          generateGeneratedByComment(),\n          '(function() {',\n          '  \"use strict\";',\n          '',\n             indent2(toplevelCode),\n          '',\n             indent2('return ' + generateParserObject() + ';'),\n          '})()'\n        ].join('\\n');\n      },\n\n      commonjs: function() {\n        var parts          = [],\n            dependencyVars = objects.keys(options.dependencies),\n            requires       = arrays.map(\n              dependencyVars,\n              function(variable) {\n                return variable\n                  + ' = require(\"'\n                  + js.stringEscape(options.dependencies[variable])\n                  + '\")';\n              }\n            );\n\n        parts.push([\n          generateGeneratedByComment(),\n          '',\n          '\"use strict\";',\n          ''\n        ].join('\\n'));\n\n        if (requires.length > 0) {\n          parts.push('var ' + requires.join(', ') + ';');\n          parts.push('');\n        }\n\n        parts.push([\n          toplevelCode,\n          '',\n          'module.exports = ' + generateParserObject() + ';',\n          ''\n        ].join('\\n'));\n\n        return parts.join('\\n');\n      },\n\n      amd: function() {\n        var dependencyIds  = objects.values(options.dependencies),\n            dependencyVars = objects.keys(options.dependencies),\n            dependencies   = '['\n              + arrays.map(\n                  dependencyIds,\n                  function(id) { return '\"' + js.stringEscape(id) + '\"'; }\n                ).join(', ')\n              + ']',\n            params         = dependencyVars.join(', ');\n\n        return [\n          generateGeneratedByComment(),\n          'define(' + dependencies + ', function(' + params + ') {',\n          '  \"use strict\";',\n          '',\n             indent2(toplevelCode),\n          '',\n             indent2('return ' + generateParserObject() + ';'),\n          '});',\n          ''\n        ].join('\\n');\n      },\n\n      globals: function() {\n        return [\n          generateGeneratedByComment(),\n          '(function(root) {',\n          '  \"use strict\";',\n          '',\n             indent2(toplevelCode),\n          '',\n             indent2('root.' + options.exportVar + ' = ' + generateParserObject() + ';'),\n          '})(this);',\n          ''\n        ].join('\\n');\n      },\n\n      umd: function() {\n        var parts          = [],\n            dependencyIds  = objects.values(options.dependencies),\n            dependencyVars = objects.keys(options.dependencies),\n            dependencies   = '['\n              + arrays.map(\n                  dependencyIds,\n                  function(id) { return '\"' + js.stringEscape(id) + '\"'; }\n                ).join(', ')\n              + ']',\n            requires       = arrays.map(\n              dependencyIds,\n              function(id) { return 'require(\"' + js.stringEscape(id) + '\")'; }\n            ).join(', '),\n            params         = dependencyVars.join(', ');\n\n        parts.push([\n          generateGeneratedByComment(),\n          '(function(root, factory) {',\n          '  if (typeof define === \"function\" && define.amd) {',\n          '    define(' + dependencies + ', factory);',\n          '  } else if (typeof module === \"object\" && module.exports) {',\n          '    module.exports = factory(' + requires + ');'\n        ].join('\\n'));\n\n        if (options.exportVar !== null) {\n          parts.push([\n            '  } else {',\n            '    root.' + options.exportVar + ' = factory();'\n          ].join('\\n'));\n        }\n\n        parts.push([\n          '  }',\n          '})(this, function(' + params + ') {',\n          '  \"use strict\";',\n          '',\n             indent2(toplevelCode),\n          '',\n             indent2('return ' + generateParserObject() + ';'),\n          '});',\n          ''\n        ].join('\\n'));\n\n        return parts.join('\\n');\n      }\n    };\n\n    return generators[options.format]();\n  }\n\n  ast.code = generateWrapper(generateToplevel());\n}\n\nmodule.exports = generateJS;\n","\"use strict\";\n\nvar arrays  = require(\"../utils/arrays\"),\n    objects = require(\"../utils/objects\");\n\nvar compiler = {\n  /*\n   * AST node visitor builder. Useful mainly for plugins which manipulate the\n   * AST.\n   */\n  visitor: require(\"./visitor\"),\n\n  /*\n   * Compiler passes.\n   *\n   * Each pass is a function that is passed the AST. It can perform checks on it\n   * or modify it as needed. If the pass encounters a semantic error, it throws\n   * |peg.GrammarError|.\n   */\n  passes: {\n    check: {\n      reportUndefinedRules:     require(\"./passes/report-undefined-rules\"),\n      reportDuplicateRules:     require(\"./passes/report-duplicate-rules\"),\n      reportDuplicateLabels:    require(\"./passes/report-duplicate-labels\"),\n      reportInfiniteRecursion:  require(\"./passes/report-infinite-recursion\"),\n      reportInfiniteRepetition: require(\"./passes/report-infinite-repetition\")\n    },\n    transform: {\n      removeProxyRules:         require(\"./passes/remove-proxy-rules\")\n    },\n    generate: {\n      generateBytecode:         require(\"./passes/generate-bytecode\"),\n      generateJS:               require(\"./passes/generate-js\")\n    }\n  },\n\n  /*\n   * Generates a parser from a specified grammar AST. Throws |peg.GrammarError|\n   * if the AST contains a semantic error. Note that not all errors are detected\n   * during the generation and some may protrude to the generated parser and\n   * cause its malfunction.\n   */\n  compile: function(ast, passes, options) {\n    options = options !== void 0 ? options : {};\n\n    var stage;\n\n    options = objects.clone(options);\n    objects.defaults(options, {\n      allowedStartRules: [ast.rules[0].name],\n      cache:             false,\n      dependencies:      {},\n      exportVar:         null,\n      format:            \"bare\",\n      optimize:          \"speed\",\n      output:            \"parser\",\n      trace:             false\n    });\n\n    for (stage in passes) {\n      if (passes.hasOwnProperty(stage)) {\n        arrays.each(passes[stage], function(p) { p(ast, options); });\n      }\n    }\n\n    switch (options.output) {\n      case \"parser\": return eval(ast.code);\n      case \"source\": return ast.code;\n    }\n  }\n};\n\nmodule.exports = compiler;\n","\"use strict\";\n\nvar arrays  = require(\"./utils/arrays\"),\n    objects = require(\"./utils/objects\");\n\nvar peg = {\n  /* PEG.js version (uses semantic versioning). */\n  VERSION: \"0.10.0\",\n\n  GrammarError: require(\"./grammar-error\"),\n  parser:       require(\"./parser\"),\n  compiler:     require(\"./compiler\"),\n\n  /*\n   * Generates a parser from a specified grammar and returns it.\n   *\n   * The grammar must be a string in the format described by the metagramar in\n   * the parser.pegjs file.\n   *\n   * Throws |peg.parser.SyntaxError| if the grammar contains a syntax error or\n   * |peg.GrammarError| if it contains a semantic error. Note that not all\n   * errors are detected during the generation and some may protrude to the\n   * generated parser and cause its malfunction.\n   */\n  generate: function(grammar, options) {\n    options = options !== void 0 ? options : {};\n\n    function convertPasses(passes) {\n      var converted = {}, stage;\n\n      for (stage in passes) {\n        if (passes.hasOwnProperty(stage)) {\n          converted[stage] = objects.values(passes[stage]);\n        }\n      }\n\n      return converted;\n    }\n\n    options = objects.clone(options);\n\n    var plugins = \"plugins\" in options ? options.plugins : [],\n        config  = {\n          parser: peg.parser,\n          passes: convertPasses(peg.compiler.passes)\n        };\n\n    arrays.each(plugins, function(p) { p.use(config, options); });\n\n    return peg.compiler.compile(\n      config.parser.parse(grammar),\n      config.passes,\n      options\n    );\n  }\n};\n\nmodule.exports = peg;\n","/*\n * Copyright (c) 2016, Jeff Hlywa (jhlywa@gmail.com)\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n *    this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n *----------------------------------------------------------------------------*/\n\n/* minified license below  */\n\n/* @license\n * Copyright (c) 2016, Jeff Hlywa (jhlywa@gmail.com)\n * Released under the BSD license\n * https://github.com/jhlywa/chess.js/blob/master/LICENSE\n */\n\nvar Chess = function(fen) {\n\n  /* jshint indent: false */\n\n  var BLACK = 'b';\n  var WHITE = 'w';\n\n  var EMPTY = -1;\n\n  var PAWN = 'p';\n  var KNIGHT = 'n';\n  var BISHOP = 'b';\n  var ROOK = 'r';\n  var QUEEN = 'q';\n  var KING = 'k';\n\n  var SYMBOLS = 'pnbrqkPNBRQK';\n\n  var DEFAULT_POSITION = 'rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1';\n\n  var POSSIBLE_RESULTS = ['1-0', '0-1', '1/2-1/2', '*'];\n\n  var PAWN_OFFSETS = {\n    b: [16, 32, 17, 15],\n    w: [-16, -32, -17, -15]\n  };\n\n  var PIECE_OFFSETS = {\n    n: [-18, -33, -31, -14,  18, 33, 31,  14],\n    b: [-17, -15,  17,  15],\n    r: [-16,   1,  16,  -1],\n    q: [-17, -16, -15,   1,  17, 16, 15,  -1],\n    k: [-17, -16, -15,   1,  17, 16, 15,  -1]\n  };\n\n  var ATTACKS = [\n    20, 0, 0, 0, 0, 0, 0, 24,  0, 0, 0, 0, 0, 0,20, 0,\n     0,20, 0, 0, 0, 0, 0, 24,  0, 0, 0, 0, 0,20, 0, 0,\n     0, 0,20, 0, 0, 0, 0, 24,  0, 0, 0, 0,20, 0, 0, 0,\n     0, 0, 0,20, 0, 0, 0, 24,  0, 0, 0,20, 0, 0, 0, 0,\n     0, 0, 0, 0,20, 0, 0, 24,  0, 0,20, 0, 0, 0, 0, 0,\n     0, 0, 0, 0, 0,20, 2, 24,  2,20, 0, 0, 0, 0, 0, 0,\n     0, 0, 0, 0, 0, 2,53, 56, 53, 2, 0, 0, 0, 0, 0, 0,\n    24,24,24,24,24,24,56,  0, 56,24,24,24,24,24,24, 0,\n     0, 0, 0, 0, 0, 2,53, 56, 53, 2, 0, 0, 0, 0, 0, 0,\n     0, 0, 0, 0, 0,20, 2, 24,  2,20, 0, 0, 0, 0, 0, 0,\n     0, 0, 0, 0,20, 0, 0, 24,  0, 0,20, 0, 0, 0, 0, 0,\n     0, 0, 0,20, 0, 0, 0, 24,  0, 0, 0,20, 0, 0, 0, 0,\n     0, 0,20, 0, 0, 0, 0, 24,  0, 0, 0, 0,20, 0, 0, 0,\n     0,20, 0, 0, 0, 0, 0, 24,  0, 0, 0, 0, 0,20, 0, 0,\n    20, 0, 0, 0, 0, 0, 0, 24,  0, 0, 0, 0, 0, 0,20\n  ];\n\n  var RAYS = [\n     17,  0,  0,  0,  0,  0,  0, 16,  0,  0,  0,  0,  0,  0, 15, 0,\n      0, 17,  0,  0,  0,  0,  0, 16,  0,  0,  0,  0,  0, 15,  0, 0,\n      0,  0, 17,  0,  0,  0,  0, 16,  0,  0,  0,  0, 15,  0,  0, 0,\n      0,  0,  0, 17,  0,  0,  0, 16,  0,  0,  0, 15,  0,  0,  0, 0,\n      0,  0,  0,  0, 17,  0,  0, 16,  0,  0, 15,  0,  0,  0,  0, 0,\n      0,  0,  0,  0,  0, 17,  0, 16,  0, 15,  0,  0,  0,  0,  0, 0,\n      0,  0,  0,  0,  0,  0, 17, 16, 15,  0,  0,  0,  0,  0,  0, 0,\n      1,  1,  1,  1,  1,  1,  1,  0, -1, -1,  -1,-1, -1, -1, -1, 0,\n      0,  0,  0,  0,  0,  0,-15,-16,-17,  0,  0,  0,  0,  0,  0, 0,\n      0,  0,  0,  0,  0,-15,  0,-16,  0,-17,  0,  0,  0,  0,  0, 0,\n      0,  0,  0,  0,-15,  0,  0,-16,  0,  0,-17,  0,  0,  0,  0, 0,\n      0,  0,  0,-15,  0,  0,  0,-16,  0,  0,  0,-17,  0,  0,  0, 0,\n      0,  0,-15,  0,  0,  0,  0,-16,  0,  0,  0,  0,-17,  0,  0, 0,\n      0,-15,  0,  0,  0,  0,  0,-16,  0,  0,  0,  0,  0,-17,  0, 0,\n    -15,  0,  0,  0,  0,  0,  0,-16,  0,  0,  0,  0,  0,  0,-17\n  ];\n\n  var SHIFTS = { p: 0, n: 1, b: 2, r: 3, q: 4, k: 5 };\n\n  var FLAGS = {\n    NORMAL: 'n',\n    CAPTURE: 'c',\n    BIG_PAWN: 'b',\n    EP_CAPTURE: 'e',\n    PROMOTION: 'p',\n    KSIDE_CASTLE: 'k',\n    QSIDE_CASTLE: 'q'\n  };\n\n  var BITS = {\n    NORMAL: 1,\n    CAPTURE: 2,\n    BIG_PAWN: 4,\n    EP_CAPTURE: 8,\n    PROMOTION: 16,\n    KSIDE_CASTLE: 32,\n    QSIDE_CASTLE: 64\n  };\n\n  var RANK_1 = 7;\n  var RANK_2 = 6;\n  var RANK_3 = 5;\n  var RANK_4 = 4;\n  var RANK_5 = 3;\n  var RANK_6 = 2;\n  var RANK_7 = 1;\n  var RANK_8 = 0;\n\n  var SQUARES = {\n    a8:   0, b8:   1, c8:   2, d8:   3, e8:   4, f8:   5, g8:   6, h8:   7,\n    a7:  16, b7:  17, c7:  18, d7:  19, e7:  20, f7:  21, g7:  22, h7:  23,\n    a6:  32, b6:  33, c6:  34, d6:  35, e6:  36, f6:  37, g6:  38, h6:  39,\n    a5:  48, b5:  49, c5:  50, d5:  51, e5:  52, f5:  53, g5:  54, h5:  55,\n    a4:  64, b4:  65, c4:  66, d4:  67, e4:  68, f4:  69, g4:  70, h4:  71,\n    a3:  80, b3:  81, c3:  82, d3:  83, e3:  84, f3:  85, g3:  86, h3:  87,\n    a2:  96, b2:  97, c2:  98, d2:  99, e2: 100, f2: 101, g2: 102, h2: 103,\n    a1: 112, b1: 113, c1: 114, d1: 115, e1: 116, f1: 117, g1: 118, h1: 119\n  };\n\n  var ROOKS = {\n    w: [{square: SQUARES.a1, flag: BITS.QSIDE_CASTLE},\n        {square: SQUARES.h1, flag: BITS.KSIDE_CASTLE}],\n    b: [{square: SQUARES.a8, flag: BITS.QSIDE_CASTLE},\n        {square: SQUARES.h8, flag: BITS.KSIDE_CASTLE}]\n  };\n\n  var board = new Array(128);\n  var kings = {w: EMPTY, b: EMPTY};\n  var turn = WHITE;\n  var castling = {w: 0, b: 0};\n  var ep_square = EMPTY;\n  var half_moves = 0;\n  var move_number = 1;\n  var history = [];\n  var header = {};\n\n  /* if the user passes in a fen string, load it, else default to\n   * starting position\n   */\n  if (typeof fen === 'undefined') {\n    load(DEFAULT_POSITION);\n  } else {\n    load(fen);\n  }\n\n  function clear() {\n    board = new Array(128);\n    kings = {w: EMPTY, b: EMPTY};\n    turn = WHITE;\n    castling = {w: 0, b: 0};\n    ep_square = EMPTY;\n    half_moves = 0;\n    move_number = 1;\n    history = [];\n    header = {};\n    update_setup(generate_fen());\n  }\n\n  function reset() {\n    load(DEFAULT_POSITION);\n  }\n\n  function load(fen) {\n    var tokens = fen.split(/\\s+/);\n    var position = tokens[0];\n    var square = 0;\n\n    if (!validate_fen(fen).valid) {\n      return false;\n    }\n\n    clear();\n\n    for (var i = 0; i < position.length; i++) {\n      var piece = position.charAt(i);\n\n      if (piece === '/') {\n        square += 8;\n      } else if (is_digit(piece)) {\n        square += parseInt(piece, 10);\n      } else {\n        var color = (piece < 'a') ? WHITE : BLACK;\n        put({type: piece.toLowerCase(), color: color}, algebraic(square));\n        square++;\n      }\n    }\n\n    turn = tokens[1];\n\n    if (tokens[2].indexOf('K') > -1) {\n      castling.w |= BITS.KSIDE_CASTLE;\n    }\n    if (tokens[2].indexOf('Q') > -1) {\n      castling.w |= BITS.QSIDE_CASTLE;\n    }\n    if (tokens[2].indexOf('k') > -1) {\n      castling.b |= BITS.KSIDE_CASTLE;\n    }\n    if (tokens[2].indexOf('q') > -1) {\n      castling.b |= BITS.QSIDE_CASTLE;\n    }\n\n    ep_square = (tokens[3] === '-') ? EMPTY : SQUARES[tokens[3]];\n    half_moves = parseInt(tokens[4], 10);\n    move_number = parseInt(tokens[5], 10);\n\n    update_setup(generate_fen());\n\n    return true;\n  }\n\n  /* TODO: this function is pretty much crap - it validates structure but\n   * completely ignores content (e.g. doesn't verify that each side has a king)\n   * ... we should rewrite this, and ditch the silly error_number field while\n   * we're at it\n   */\n  function validate_fen(fen) {\n    var errors = {\n       0: 'No errors.',\n       1: 'FEN string must contain six space-delimited fields.',\n       2: '6th field (move number) must be a positive integer.',\n       3: '5th field (half move counter) must be a non-negative integer.',\n       4: '4th field (en-passant square) is invalid.',\n       5: '3rd field (castling availability) is invalid.',\n       6: '2nd field (side to move) is invalid.',\n       7: '1st field (piece positions) does not contain 8 \\'/\\'-delimited rows.',\n       8: '1st field (piece positions) is invalid [consecutive numbers].',\n       9: '1st field (piece positions) is invalid [invalid piece].',\n      10: '1st field (piece positions) is invalid [row too large].',\n      11: 'Illegal en-passant square',\n    };\n\n    /* 1st criterion: 6 space-seperated fields? */\n    var tokens = fen.split(/\\s+/);\n    if (tokens.length !== 6) {\n      return {valid: false, error_number: 1, error: errors[1]};\n    }\n\n    /* 2nd criterion: move number field is a integer value > 0? */\n    if (isNaN(tokens[5]) || (parseInt(tokens[5], 10) <= 0)) {\n      return {valid: false, error_number: 2, error: errors[2]};\n    }\n\n    /* 3rd criterion: half move counter is an integer >= 0? */\n    if (isNaN(tokens[4]) || (parseInt(tokens[4], 10) < 0)) {\n      return {valid: false, error_number: 3, error: errors[3]};\n    }\n\n    /* 4th criterion: 4th field is a valid e.p.-string? */\n    if (!/^(-|[abcdefgh][36])$/.test(tokens[3])) {\n      return {valid: false, error_number: 4, error: errors[4]};\n    }\n\n    /* 5th criterion: 3th field is a valid castle-string? */\n    if( !/^(KQ?k?q?|Qk?q?|kq?|q|-)$/.test(tokens[2])) {\n      return {valid: false, error_number: 5, error: errors[5]};\n    }\n\n    /* 6th criterion: 2nd field is \"w\" (white) or \"b\" (black)? */\n    if (!/^(w|b)$/.test(tokens[1])) {\n      return {valid: false, error_number: 6, error: errors[6]};\n    }\n\n    /* 7th criterion: 1st field contains 8 rows? */\n    var rows = tokens[0].split('/');\n    if (rows.length !== 8) {\n      return {valid: false, error_number: 7, error: errors[7]};\n    }\n\n    /* 8th criterion: every row is valid? */\n    for (var i = 0; i < rows.length; i++) {\n      /* check for right sum of fields AND not two numbers in succession */\n      var sum_fields = 0;\n      var previous_was_number = false;\n\n      for (var k = 0; k < rows[i].length; k++) {\n        if (!isNaN(rows[i][k])) {\n          if (previous_was_number) {\n            return {valid: false, error_number: 8, error: errors[8]};\n          }\n          sum_fields += parseInt(rows[i][k], 10);\n          previous_was_number = true;\n        } else {\n          if (!/^[prnbqkPRNBQK]$/.test(rows[i][k])) {\n            return {valid: false, error_number: 9, error: errors[9]};\n          }\n          sum_fields += 1;\n          previous_was_number = false;\n        }\n      }\n      if (sum_fields !== 8) {\n        return {valid: false, error_number: 10, error: errors[10]};\n      }\n    }\n\n    if ((tokens[3][1] == '3' && tokens[1] == 'w') ||\n        (tokens[3][1] == '6' && tokens[1] == 'b')) {\n          return {valid: false, error_number: 11, error: errors[11]};\n    }\n\n    /* everything's okay! */\n    return {valid: true, error_number: 0, error: errors[0]};\n  }\n\n  function generate_fen() {\n    var empty = 0;\n    var fen = '';\n\n    for (var i = SQUARES.a8; i <= SQUARES.h1; i++) {\n      if (board[i] == null) {\n        empty++;\n      } else {\n        if (empty > 0) {\n          fen += empty;\n          empty = 0;\n        }\n        var color = board[i].color;\n        var piece = board[i].type;\n\n        fen += (color === WHITE) ?\n                 piece.toUpperCase() : piece.toLowerCase();\n      }\n\n      if ((i + 1) & 0x88) {\n        if (empty > 0) {\n          fen += empty;\n        }\n\n        if (i !== SQUARES.h1) {\n          fen += '/';\n        }\n\n        empty = 0;\n        i += 8;\n      }\n    }\n\n    var cflags = '';\n    if (castling[WHITE] & BITS.KSIDE_CASTLE) { cflags += 'K'; }\n    if (castling[WHITE] & BITS.QSIDE_CASTLE) { cflags += 'Q'; }\n    if (castling[BLACK] & BITS.KSIDE_CASTLE) { cflags += 'k'; }\n    if (castling[BLACK] & BITS.QSIDE_CASTLE) { cflags += 'q'; }\n\n    /* do we have an empty castling flag? */\n    cflags = cflags || '-';\n    var epflags = (ep_square === EMPTY) ? '-' : algebraic(ep_square);\n\n    return [fen, turn, cflags, epflags, half_moves, move_number].join(' ');\n  }\n\n  function set_header(args) {\n    for (var i = 0; i < args.length; i += 2) {\n      if (typeof args[i] === 'string' &&\n          typeof args[i + 1] === 'string') {\n        header[args[i]] = args[i + 1];\n      }\n    }\n    return header;\n  }\n\n  /* called when the initial board setup is changed with put() or remove().\n   * modifies the SetUp and FEN properties of the header object.  if the FEN is\n   * equal to the default position, the SetUp and FEN are deleted\n   * the setup is only updated if history.length is zero, ie moves haven't been\n   * made.\n   */\n  function update_setup(fen) {\n    if (history.length > 0) return;\n\n    if (fen !== DEFAULT_POSITION) {\n      header['SetUp'] = '1';\n      header['FEN'] = fen;\n    } else {\n      delete header['SetUp'];\n      delete header['FEN'];\n    }\n  }\n\n  function get(square) {\n    var piece = board[SQUARES[square]];\n    return (piece) ? {type: piece.type, color: piece.color} : null;\n  }\n\n  function put(piece, square) {\n    /* check for valid piece object */\n    if (!('type' in piece && 'color' in piece)) {\n      return false;\n    }\n\n    /* check for piece */\n    if (SYMBOLS.indexOf(piece.type.toLowerCase()) === -1) {\n      return false;\n    }\n\n    /* check for valid square */\n    if (!(square in SQUARES)) {\n      return false;\n    }\n\n    var sq = SQUARES[square];\n\n    /* don't let the user place more than one king */\n    if (piece.type == KING &&\n        !(kings[piece.color] == EMPTY || kings[piece.color] == sq)) {\n      return false;\n    }\n\n    board[sq] = {type: piece.type, color: piece.color};\n    if (piece.type === KING) {\n      kings[piece.color] = sq;\n    }\n\n    update_setup(generate_fen());\n\n    return true;\n  }\n\n  function remove(square) {\n    var piece = get(square);\n    board[SQUARES[square]] = null;\n    if (piece && piece.type === KING) {\n      kings[piece.color] = EMPTY;\n    }\n\n    update_setup(generate_fen());\n\n    return piece;\n  }\n\n  function build_move(board, from, to, flags, promotion) {\n    var move = {\n      color: turn,\n      from: from,\n      to: to,\n      flags: flags,\n      piece: board[from].type\n    };\n\n    if (promotion) {\n      move.flags |= BITS.PROMOTION;\n      move.promotion = promotion;\n    }\n\n    if (board[to]) {\n      move.captured = board[to].type;\n    } else if (flags & BITS.EP_CAPTURE) {\n        move.captured = PAWN;\n    }\n    return move;\n  }\n\n  function generate_moves(options) {\n    function add_move(board, moves, from, to, flags) {\n      /* if pawn promotion */\n      if (board[from].type === PAWN &&\n         (rank(to) === RANK_8 || rank(to) === RANK_1)) {\n          var pieces = [QUEEN, ROOK, BISHOP, KNIGHT];\n          for (var i = 0, len = pieces.length; i < len; i++) {\n            moves.push(build_move(board, from, to, flags, pieces[i]));\n          }\n      } else {\n       moves.push(build_move(board, from, to, flags));\n      }\n    }\n\n    var moves = [];\n    var us = turn;\n    var them = swap_color(us);\n    var second_rank = {b: RANK_7, w: RANK_2};\n\n    var first_sq = SQUARES.a8;\n    var last_sq = SQUARES.h1;\n    var single_square = false;\n\n    /* do we want legal moves? */\n    var legal = (typeof options !== 'undefined' && 'legal' in options) ?\n                options.legal : true;\n\n    /* are we generating moves for a single square? */\n    if (typeof options !== 'undefined' && 'square' in options) {\n      if (options.square in SQUARES) {\n        first_sq = last_sq = SQUARES[options.square];\n        single_square = true;\n      } else {\n        /* invalid square */\n        return [];\n      }\n    }\n\n    for (var i = first_sq; i <= last_sq; i++) {\n      /* did we run off the end of the board */\n      if (i & 0x88) { i += 7; continue; }\n\n      var piece = board[i];\n      if (piece == null || piece.color !== us) {\n        continue;\n      }\n\n      if (piece.type === PAWN) {\n        /* single square, non-capturing */\n        var square = i + PAWN_OFFSETS[us][0];\n        if (board[square] == null) {\n            add_move(board, moves, i, square, BITS.NORMAL);\n\n          /* double square */\n          var square = i + PAWN_OFFSETS[us][1];\n          if (second_rank[us] === rank(i) && board[square] == null) {\n            add_move(board, moves, i, square, BITS.BIG_PAWN);\n          }\n        }\n\n        /* pawn captures */\n        for (j = 2; j < 4; j++) {\n          var square = i + PAWN_OFFSETS[us][j];\n          if (square & 0x88) continue;\n\n          if (board[square] != null &&\n              board[square].color === them) {\n              add_move(board, moves, i, square, BITS.CAPTURE);\n          } else if (square === ep_square) {\n              add_move(board, moves, i, ep_square, BITS.EP_CAPTURE);\n          }\n        }\n      } else {\n        for (var j = 0, len = PIECE_OFFSETS[piece.type].length; j < len; j++) {\n          var offset = PIECE_OFFSETS[piece.type][j];\n          var square = i;\n\n          while (true) {\n            square += offset;\n            if (square & 0x88) break;\n\n            if (board[square] == null) {\n              add_move(board, moves, i, square, BITS.NORMAL);\n            } else {\n              if (board[square].color === us) break;\n              add_move(board, moves, i, square, BITS.CAPTURE);\n              break;\n            }\n\n            /* break, if knight or king */\n            if (piece.type === 'n' || piece.type === 'k') break;\n          }\n        }\n      }\n    }\n\n    /* check for castling if: a) we're generating all moves, or b) we're doing\n     * single square move generation on the king's square\n     */\n    if ((!single_square) || last_sq === kings[us]) {\n      /* king-side castling */\n      if (castling[us] & BITS.KSIDE_CASTLE) {\n        var castling_from = kings[us];\n        var castling_to = castling_from + 2;\n\n        if (board[castling_from + 1] == null &&\n            board[castling_to]       == null &&\n            !attacked(them, kings[us]) &&\n            !attacked(them, castling_from + 1) &&\n            !attacked(them, castling_to)) {\n          add_move(board, moves, kings[us] , castling_to,\n                   BITS.KSIDE_CASTLE);\n        }\n      }\n\n      /* queen-side castling */\n      if (castling[us] & BITS.QSIDE_CASTLE) {\n        var castling_from = kings[us];\n        var castling_to = castling_from - 2;\n\n        if (board[castling_from - 1] == null &&\n            board[castling_from - 2] == null &&\n            board[castling_from - 3] == null &&\n            !attacked(them, kings[us]) &&\n            !attacked(them, castling_from - 1) &&\n            !attacked(them, castling_to)) {\n          add_move(board, moves, kings[us], castling_to,\n                   BITS.QSIDE_CASTLE);\n        }\n      }\n    }\n\n    /* return all pseudo-legal moves (this includes moves that allow the king\n     * to be captured)\n     */\n    if (!legal) {\n      return moves;\n    }\n\n    /* filter out illegal moves */\n    var legal_moves = [];\n    for (var i = 0, len = moves.length; i < len; i++) {\n      make_move(moves[i]);\n      if (!king_attacked(us)) {\n        legal_moves.push(moves[i]);\n      }\n      undo_move();\n    }\n\n    return legal_moves;\n  }\n\n  /* convert a move from 0x88 coordinates to Standard Algebraic Notation\n   * (SAN)\n   *\n   * @param {boolean} sloppy Use the sloppy SAN generator to work around over\n   * disambiguation bugs in Fritz and Chessbase.  See below:\n   *\n   * r1bqkbnr/ppp2ppp/2n5/1B1pP3/4P3/8/PPPP2PP/RNBQK1NR b KQkq - 2 4\n   * 4. ... Nge7 is overly disambiguated because the knight on c6 is pinned\n   * 4. ... Ne7 is technically the valid SAN\n   */\n  function move_to_san(move, sloppy) {\n\n    var output = '';\n\n    if (move.flags & BITS.KSIDE_CASTLE) {\n      output = 'O-O';\n    } else if (move.flags & BITS.QSIDE_CASTLE) {\n      output = 'O-O-O';\n    } else {\n      var disambiguator = get_disambiguator(move, sloppy);\n\n      if (move.piece !== PAWN) {\n        output += move.piece.toUpperCase() + disambiguator;\n      }\n\n      if (move.flags & (BITS.CAPTURE | BITS.EP_CAPTURE)) {\n        if (move.piece === PAWN) {\n          output += algebraic(move.from)[0];\n        }\n        output += 'x';\n      }\n\n      output += algebraic(move.to);\n\n      if (move.flags & BITS.PROMOTION) {\n        output += '=' + move.promotion.toUpperCase();\n      }\n    }\n\n    make_move(move);\n    if (in_check()) {\n      if (in_checkmate()) {\n        output += '#';\n      } else {\n        output += '+';\n      }\n    }\n    undo_move();\n\n    return output;\n  }\n\n  // parses all of the decorators out of a SAN string\n  function stripped_san(move) {\n    return move.replace(/=/,'').replace(/[+#]?[?!]*$/,'');\n  }\n\n  function attacked(color, square) {\n    for (var i = SQUARES.a8; i <= SQUARES.h1; i++) {\n      /* did we run off the end of the board */\n      if (i & 0x88) { i += 7; continue; }\n\n      /* if empty square or wrong color */\n      if (board[i] == null || board[i].color !== color) continue;\n\n      var piece = board[i];\n      var difference = i - square;\n      var index = difference + 119;\n\n      if (ATTACKS[index] & (1 << SHIFTS[piece.type])) {\n        if (piece.type === PAWN) {\n          if (difference > 0) {\n            if (piece.color === WHITE) return true;\n          } else {\n            if (piece.color === BLACK) return true;\n          }\n          continue;\n        }\n\n        /* if the piece is a knight or a king */\n        if (piece.type === 'n' || piece.type === 'k') return true;\n\n        var offset = RAYS[index];\n        var j = i + offset;\n\n        var blocked = false;\n        while (j !== square) {\n          if (board[j] != null) { blocked = true; break; }\n          j += offset;\n        }\n\n        if (!blocked) return true;\n      }\n    }\n\n    return false;\n  }\n\n  function king_attacked(color) {\n    return attacked(swap_color(color), kings[color]);\n  }\n\n  function in_check() {\n    return king_attacked(turn);\n  }\n\n  function in_checkmate() {\n    return in_check() && generate_moves().length === 0;\n  }\n\n  function in_stalemate() {\n    return !in_check() && generate_moves().length === 0;\n  }\n\n  function insufficient_material() {\n    var pieces = {};\n    var bishops = [];\n    var num_pieces = 0;\n    var sq_color = 0;\n\n    for (var i = SQUARES.a8; i<= SQUARES.h1; i++) {\n      sq_color = (sq_color + 1) % 2;\n      if (i & 0x88) { i += 7; continue; }\n\n      var piece = board[i];\n      if (piece) {\n        pieces[piece.type] = (piece.type in pieces) ?\n                              pieces[piece.type] + 1 : 1;\n        if (piece.type === BISHOP) {\n          bishops.push(sq_color);\n        }\n        num_pieces++;\n      }\n    }\n\n    /* k vs. k */\n    if (num_pieces === 2) { return true; }\n\n    /* k vs. kn .... or .... k vs. kb */\n    else if (num_pieces === 3 && (pieces[BISHOP] === 1 ||\n                                 pieces[KNIGHT] === 1)) { return true; }\n\n    /* kb vs. kb where any number of bishops are all on the same color */\n    else if (num_pieces === pieces[BISHOP] + 2) {\n      var sum = 0;\n      var len = bishops.length;\n      for (var i = 0; i < len; i++) {\n        sum += bishops[i];\n      }\n      if (sum === 0 || sum === len) { return true; }\n    }\n\n    return false;\n  }\n\n  function in_threefold_repetition() {\n    /* TODO: while this function is fine for casual use, a better\n     * implementation would use a Zobrist key (instead of FEN). the\n     * Zobrist key would be maintained in the make_move/undo_move functions,\n     * avoiding the costly that we do below.\n     */\n    var moves = [];\n    var positions = {};\n    var repetition = false;\n\n    while (true) {\n      var move = undo_move();\n      if (!move) break;\n      moves.push(move);\n    }\n\n    while (true) {\n      /* remove the last two fields in the FEN string, they're not needed\n       * when checking for draw by rep */\n      var fen = generate_fen().split(' ').slice(0,4).join(' ');\n\n      /* has the position occurred three or move times */\n      positions[fen] = (fen in positions) ? positions[fen] + 1 : 1;\n      if (positions[fen] >= 3) {\n        repetition = true;\n      }\n\n      if (!moves.length) {\n        break;\n      }\n      make_move(moves.pop());\n    }\n\n    return repetition;\n  }\n\n  function push(move) {\n    history.push({\n      move: move,\n      kings: {b: kings.b, w: kings.w},\n      turn: turn,\n      castling: {b: castling.b, w: castling.w},\n      ep_square: ep_square,\n      half_moves: half_moves,\n      move_number: move_number\n    });\n  }\n\n  function make_move(move) {\n    var us = turn;\n    var them = swap_color(us);\n    push(move);\n\n    board[move.to] = board[move.from];\n    board[move.from] = null;\n\n    /* if ep capture, remove the captured pawn */\n    if (move.flags & BITS.EP_CAPTURE) {\n      if (turn === BLACK) {\n        board[move.to - 16] = null;\n      } else {\n        board[move.to + 16] = null;\n      }\n    }\n\n    /* if pawn promotion, replace with new piece */\n    if (move.flags & BITS.PROMOTION) {\n      board[move.to] = {type: move.promotion, color: us};\n    }\n\n    /* if we moved the king */\n    if (board[move.to].type === KING) {\n      kings[board[move.to].color] = move.to;\n\n      /* if we castled, move the rook next to the king */\n      if (move.flags & BITS.KSIDE_CASTLE) {\n        var castling_to = move.to - 1;\n        var castling_from = move.to + 1;\n        board[castling_to] = board[castling_from];\n        board[castling_from] = null;\n      } else if (move.flags & BITS.QSIDE_CASTLE) {\n        var castling_to = move.to + 1;\n        var castling_from = move.to - 2;\n        board[castling_to] = board[castling_from];\n        board[castling_from] = null;\n      }\n\n      /* turn off castling */\n      castling[us] = '';\n    }\n\n    /* turn off castling if we move a rook */\n    if (castling[us]) {\n      for (var i = 0, len = ROOKS[us].length; i < len; i++) {\n        if (move.from === ROOKS[us][i].square &&\n            castling[us] & ROOKS[us][i].flag) {\n          castling[us] ^= ROOKS[us][i].flag;\n          break;\n        }\n      }\n    }\n\n    /* turn off castling if we capture a rook */\n    if (castling[them]) {\n      for (var i = 0, len = ROOKS[them].length; i < len; i++) {\n        if (move.to === ROOKS[them][i].square &&\n            castling[them] & ROOKS[them][i].flag) {\n          castling[them] ^= ROOKS[them][i].flag;\n          break;\n        }\n      }\n    }\n\n    /* if big pawn move, update the en passant square */\n    if (move.flags & BITS.BIG_PAWN) {\n      if (turn === 'b') {\n        ep_square = move.to - 16;\n      } else {\n        ep_square = move.to + 16;\n      }\n    } else {\n      ep_square = EMPTY;\n    }\n\n    /* reset the 50 move counter if a pawn is moved or a piece is captured */\n    if (move.piece === PAWN) {\n      half_moves = 0;\n    } else if (move.flags & (BITS.CAPTURE | BITS.EP_CAPTURE)) {\n      half_moves = 0;\n    } else {\n      half_moves++;\n    }\n\n    if (turn === BLACK) {\n      move_number++;\n    }\n    turn = swap_color(turn);\n  }\n\n  function undo_move() {\n    var old = history.pop();\n    if (old == null) { return null; }\n\n    var move = old.move;\n    kings = old.kings;\n    turn = old.turn;\n    castling = old.castling;\n    ep_square = old.ep_square;\n    half_moves = old.half_moves;\n    move_number = old.move_number;\n\n    var us = turn;\n    var them = swap_color(turn);\n\n    board[move.from] = board[move.to];\n    board[move.from].type = move.piece;  // to undo any promotions\n    board[move.to] = null;\n\n    if (move.flags & BITS.CAPTURE) {\n      board[move.to] = {type: move.captured, color: them};\n    } else if (move.flags & BITS.EP_CAPTURE) {\n      var index;\n      if (us === BLACK) {\n        index = move.to - 16;\n      } else {\n        index = move.to + 16;\n      }\n      board[index] = {type: PAWN, color: them};\n    }\n\n\n    if (move.flags & (BITS.KSIDE_CASTLE | BITS.QSIDE_CASTLE)) {\n      var castling_to, castling_from;\n      if (move.flags & BITS.KSIDE_CASTLE) {\n        castling_to = move.to + 1;\n        castling_from = move.to - 1;\n      } else if (move.flags & BITS.QSIDE_CASTLE) {\n        castling_to = move.to - 2;\n        castling_from = move.to + 1;\n      }\n\n      board[castling_to] = board[castling_from];\n      board[castling_from] = null;\n    }\n\n    return move;\n  }\n\n  /* this function is used to uniquely identify ambiguous moves */\n  function get_disambiguator(move, sloppy) {\n    var moves = generate_moves({legal: !sloppy});\n\n    var from = move.from;\n    var to = move.to;\n    var piece = move.piece;\n\n    var ambiguities = 0;\n    var same_rank = 0;\n    var same_file = 0;\n\n    for (var i = 0, len = moves.length; i < len; i++) {\n      var ambig_from = moves[i].from;\n      var ambig_to = moves[i].to;\n      var ambig_piece = moves[i].piece;\n\n      /* if a move of the same piece type ends on the same to square, we'll\n       * need to add a disambiguator to the algebraic notation\n       */\n      if (piece === ambig_piece && from !== ambig_from && to === ambig_to) {\n        ambiguities++;\n\n        if (rank(from) === rank(ambig_from)) {\n          same_rank++;\n        }\n\n        if (file(from) === file(ambig_from)) {\n          same_file++;\n        }\n      }\n    }\n\n    if (ambiguities > 0) {\n      /* if there exists a similar moving piece on the same rank and file as\n       * the move in question, use the square as the disambiguator\n       */\n      if (same_rank > 0 && same_file > 0) {\n        return algebraic(from);\n      }\n      /* if the moving piece rests on the same file, use the rank symbol as the\n       * disambiguator\n       */\n      else if (same_file > 0) {\n        return algebraic(from).charAt(1);\n      }\n      /* else use the file symbol */\n      else {\n        return algebraic(from).charAt(0);\n      }\n    }\n\n    return '';\n  }\n\n  function ascii() {\n    var s = '   +------------------------+\\n';\n    for (var i = SQUARES.a8; i <= SQUARES.h1; i++) {\n      /* display the rank */\n      if (file(i) === 0) {\n        s += ' ' + '87654321'[rank(i)] + ' |';\n      }\n\n      /* empty piece */\n      if (board[i] == null) {\n        s += ' . ';\n      } else {\n        var piece = board[i].type;\n        var color = board[i].color;\n        var symbol = (color === WHITE) ?\n                     piece.toUpperCase() : piece.toLowerCase();\n        s += ' ' + symbol + ' ';\n      }\n\n      if ((i + 1) & 0x88) {\n        s += '|\\n';\n        i += 8;\n      }\n    }\n    s += '   +------------------------+\\n';\n    s += '     a  b  c  d  e  f  g  h\\n';\n\n    return s;\n  }\n\n  // convert a move from Standard Algebraic Notation (SAN) to 0x88 coordinates\n  function move_from_san(move, sloppy) {\n    // strip off any move decorations: e.g Nf3+?!\n    var clean_move = stripped_san(move);\n\n    // if we're using the sloppy parser run a regex to grab piece, to, and from\n    // this should parse invalid SAN like: Pe2-e4, Rc1c4, Qf3xf7\n    if (sloppy) {\n      var matches = clean_move.match(/([pnbrqkPNBRQK])?([a-h][1-8])x?-?([a-h][1-8])([qrbnQRBN])?/);\n      if (matches) {\n        var piece = matches[1];\n        var from = matches[2];\n        var to = matches[3];\n        var promotion = matches[4];\n      }\n    }\n\n    var moves = generate_moves();\n    for (var i = 0, len = moves.length; i < len; i++) {\n      // try the strict parser first, then the sloppy parser if requested\n      // by the user\n      if ((clean_move === stripped_san(move_to_san(moves[i]))) ||\n          (sloppy && clean_move === stripped_san(move_to_san(moves[i], true)))) {\n        return moves[i];\n      } else {\n        if (matches &&\n            (!piece || piece.toLowerCase() == moves[i].piece) &&\n            SQUARES[from] == moves[i].from &&\n            SQUARES[to] == moves[i].to &&\n            (!promotion || promotion.toLowerCase() == moves[i].promotion)) {\n          return moves[i];\n        }\n      }\n    }\n\n    return null;\n  }\n\n\n  /*****************************************************************************\n   * UTILITY FUNCTIONS\n   ****************************************************************************/\n  function rank(i) {\n    return i >> 4;\n  }\n\n  function file(i) {\n    return i & 15;\n  }\n\n  function algebraic(i){\n    var f = file(i), r = rank(i);\n    return 'abcdefgh'.substring(f,f+1) + '87654321'.substring(r,r+1);\n  }\n\n  function swap_color(c) {\n    return c === WHITE ? BLACK : WHITE;\n  }\n\n  function is_digit(c) {\n    return '0123456789'.indexOf(c) !== -1;\n  }\n\n  /* pretty = external move object */\n  function make_pretty(ugly_move) {\n    var move = clone(ugly_move);\n    move.san = move_to_san(move, false);\n    move.to = algebraic(move.to);\n    move.from = algebraic(move.from);\n\n    var flags = '';\n\n    for (var flag in BITS) {\n      if (BITS[flag] & move.flags) {\n        flags += FLAGS[flag];\n      }\n    }\n    move.flags = flags;\n\n    return move;\n  }\n\n  function clone(obj) {\n    var dupe = (obj instanceof Array) ? [] : {};\n\n    for (var property in obj) {\n      if (typeof property === 'object') {\n        dupe[property] = clone(obj[property]);\n      } else {\n        dupe[property] = obj[property];\n      }\n    }\n\n    return dupe;\n  }\n\n  function trim(str) {\n    return str.replace(/^\\s+|\\s+$/g, '');\n  }\n\n  /*****************************************************************************\n   * DEBUGGING UTILITIES\n   ****************************************************************************/\n  function perft(depth) {\n    var moves = generate_moves({legal: false});\n    var nodes = 0;\n    var color = turn;\n\n    for (var i = 0, len = moves.length; i < len; i++) {\n      make_move(moves[i]);\n      if (!king_attacked(color)) {\n        if (depth - 1 > 0) {\n          var child_nodes = perft(depth - 1);\n          nodes += child_nodes;\n        } else {\n          nodes++;\n        }\n      }\n      undo_move();\n    }\n\n    return nodes;\n  }\n\n  return {\n    /***************************************************************************\n     * PUBLIC CONSTANTS (is there a better way to do this?)\n     **************************************************************************/\n    WHITE: WHITE,\n    BLACK: BLACK,\n    PAWN: PAWN,\n    KNIGHT: KNIGHT,\n    BISHOP: BISHOP,\n    ROOK: ROOK,\n    QUEEN: QUEEN,\n    KING: KING,\n    SQUARES: (function() {\n                /* from the ECMA-262 spec (section 12.6.4):\n                 * \"The mechanics of enumerating the properties ... is\n                 * implementation dependent\"\n                 * so: for (var sq in SQUARES) { keys.push(sq); } might not be\n                 * ordered correctly\n                 */\n                var keys = [];\n                for (var i = SQUARES.a8; i <= SQUARES.h1; i++) {\n                  if (i & 0x88) { i += 7; continue; }\n                  keys.push(algebraic(i));\n                }\n                return keys;\n              })(),\n    FLAGS: FLAGS,\n\n    /***************************************************************************\n     * PUBLIC API\n     **************************************************************************/\n    load: function(fen) {\n      return load(fen);\n    },\n\n    reset: function() {\n      return reset();\n    },\n\n    moves: function(options) {\n      /* The internal representation of a chess move is in 0x88 format, and\n       * not meant to be human-readable.  The code below converts the 0x88\n       * square coordinates to algebraic coordinates.  It also prunes an\n       * unnecessary move keys resulting from a verbose call.\n       */\n\n      var ugly_moves = generate_moves(options);\n      var moves = [];\n\n      for (var i = 0, len = ugly_moves.length; i < len; i++) {\n\n        /* does the user want a full move object (most likely not), or just\n         * SAN\n         */\n        if (typeof options !== 'undefined' && 'verbose' in options &&\n            options.verbose) {\n          moves.push(make_pretty(ugly_moves[i]));\n        } else {\n          moves.push(move_to_san(ugly_moves[i], false));\n        }\n      }\n\n      return moves;\n    },\n\n    in_check: function() {\n      return in_check();\n    },\n\n    in_checkmate: function() {\n      return in_checkmate();\n    },\n\n    in_stalemate: function() {\n      return in_stalemate();\n    },\n\n    in_draw: function() {\n      return half_moves >= 100 ||\n             in_stalemate() ||\n             insufficient_material() ||\n             in_threefold_repetition();\n    },\n\n    insufficient_material: function() {\n      return insufficient_material();\n    },\n\n    in_threefold_repetition: function() {\n      return in_threefold_repetition();\n    },\n\n    game_over: function() {\n      return half_moves >= 100 ||\n             in_checkmate() ||\n             in_stalemate() ||\n             insufficient_material() ||\n             in_threefold_repetition();\n    },\n\n    validate_fen: function(fen) {\n      return validate_fen(fen);\n    },\n\n    fen: function() {\n      return generate_fen();\n    },\n\n    pgn: function(options) {\n      /* using the specification from http://www.chessclub.com/help/PGN-spec\n       * example for html usage: .pgn({ max_width: 72, newline_char: \"<br />\" })\n       */\n      var newline = (typeof options === 'object' &&\n                     typeof options.newline_char === 'string') ?\n                     options.newline_char : '\\n';\n      var max_width = (typeof options === 'object' &&\n                       typeof options.max_width === 'number') ?\n                       options.max_width : 0;\n      var result = [];\n      var header_exists = false;\n\n      /* add the PGN header headerrmation */\n      for (var i in header) {\n        /* TODO: order of enumerated properties in header object is not\n         * guaranteed, see ECMA-262 spec (section 12.6.4)\n         */\n        result.push('[' + i + ' \\\"' + header[i] + '\\\"]' + newline);\n        header_exists = true;\n      }\n\n      if (header_exists && history.length) {\n        result.push(newline);\n      }\n\n      /* pop all of history onto reversed_history */\n      var reversed_history = [];\n      while (history.length > 0) {\n        reversed_history.push(undo_move());\n      }\n\n      var moves = [];\n      var move_string = '';\n\n      /* build the list of moves.  a move_string looks like: \"3. e3 e6\" */\n      while (reversed_history.length > 0) {\n        var move = reversed_history.pop();\n\n        /* if the position started with black to move, start PGN with 1. ... */\n        if (!history.length && move.color === 'b') {\n          move_string = move_number + '. ...';\n        } else if (move.color === 'w') {\n          /* store the previous generated move_string if we have one */\n          if (move_string.length) {\n            moves.push(move_string);\n          }\n          move_string = move_number + '.';\n        }\n\n        move_string = move_string + ' ' + move_to_san(move, false);\n        make_move(move);\n      }\n\n      /* are there any other leftover moves? */\n      if (move_string.length) {\n        moves.push(move_string);\n      }\n\n      /* is there a result? */\n      if (typeof header.Result !== 'undefined') {\n        moves.push(header.Result);\n      }\n\n      /* history should be back to what is was before we started generating PGN,\n       * so join together moves\n       */\n      if (max_width === 0) {\n        return result.join('') + moves.join(' ');\n      }\n\n      /* wrap the PGN output at max_width */\n      var current_width = 0;\n      for (var i = 0; i < moves.length; i++) {\n        /* if the current move will push past max_width */\n        if (current_width + moves[i].length > max_width && i !== 0) {\n\n          /* don't end the line with whitespace */\n          if (result[result.length - 1] === ' ') {\n            result.pop();\n          }\n\n          result.push(newline);\n          current_width = 0;\n        } else if (i !== 0) {\n          result.push(' ');\n          current_width++;\n        }\n        result.push(moves[i]);\n        current_width += moves[i].length;\n      }\n\n      return result.join('');\n    },\n\n    load_pgn: function(pgn, options) {\n      // allow the user to specify the sloppy move parser to work around over\n      // disambiguation bugs in Fritz and Chessbase\n      var sloppy = (typeof options !== 'undefined' && 'sloppy' in options) ?\n                    options.sloppy : false;\n\n      function mask(str) {\n        return str.replace(/\\\\/g, '\\\\');\n      }\n\n      function has_keys(object) {\n        for (var key in object) {\n          return true;\n        }\n        return false;\n      }\n\n      function parse_pgn_header(header, options) {\n        var newline_char = (typeof options === 'object' &&\n                            typeof options.newline_char === 'string') ?\n                            options.newline_char : '\\r?\\n';\n        var header_obj = {};\n        var headers = header.split(new RegExp(mask(newline_char)));\n        var key = '';\n        var value = '';\n\n        for (var i = 0; i < headers.length; i++) {\n          key = headers[i].replace(/^\\[([A-Z][A-Za-z]*)\\s.*\\]$/, '$1');\n          value = headers[i].replace(/^\\[[A-Za-z]+\\s\"(.*)\"\\]$/, '$1');\n          if (trim(key).length > 0) {\n            header_obj[key] = value;\n          }\n        }\n\n        return header_obj;\n      }\n\n      var newline_char = (typeof options === 'object' &&\n                          typeof options.newline_char === 'string') ?\n                          options.newline_char : '\\r?\\n';\n      var regex = new RegExp('^(\\\\[(.|' + mask(newline_char) + ')*\\\\])' +\n                             '(' + mask(newline_char) + ')*' +\n                             '1.(' + mask(newline_char) + '|.)*$', 'g');\n\n      /* get header part of the PGN file */\n      var header_string = pgn.replace(regex, '$1');\n\n      /* no info part given, begins with moves */\n      if (header_string[0] !== '[') {\n        header_string = '';\n      }\n\n      reset();\n\n      /* parse PGN header */\n      var headers = parse_pgn_header(header_string, options);\n      for (var key in headers) {\n        set_header([key, headers[key]]);\n      }\n\n      /* load the starting position indicated by [Setup '1'] and\n      * [FEN position] */\n      if (headers['SetUp'] === '1') {\n          if (!(('FEN' in headers) && load(headers['FEN']))) {\n            return false;\n          }\n      }\n\n      /* delete header to get the moves */\n      var ms = pgn.replace(header_string, '').replace(new RegExp(mask(newline_char), 'g'), ' ');\n\n      /* delete comments */\n      ms = ms.replace(/(\\{[^}]+\\})+?/g, '');\n\n      /* delete recursive annotation variations */\n      var rav_regex = /(\\([^\\(\\)]+\\))+?/g\n      while (rav_regex.test(ms)) {\n        ms = ms.replace(rav_regex, '');\n      }\n\n      /* delete move numbers */\n      ms = ms.replace(/\\d+\\.(\\.\\.)?/g, '');\n\n      /* delete ... indicating black to move */\n      ms = ms.replace(/\\.\\.\\./g, '');\n\n      /* delete numeric annotation glyphs */\n      ms = ms.replace(/\\$\\d+/g, '');\n\n      /* trim and get array of moves */\n      var moves = trim(ms).split(new RegExp(/\\s+/));\n\n      /* delete empty entries */\n      moves = moves.join(',').replace(/,,+/g, ',').split(',');\n      var move = '';\n\n      for (var half_move = 0; half_move < moves.length - 1; half_move++) {\n        move = move_from_san(moves[half_move], sloppy);\n\n        /* move not possible! (don't clear the board to examine to show the\n         * latest valid position)\n         */\n        if (move == null) {\n          return false;\n        } else {\n          make_move(move);\n        }\n      }\n\n      /* examine last move */\n      move = moves[moves.length - 1];\n      if (POSSIBLE_RESULTS.indexOf(move) > -1) {\n        if (has_keys(header) && typeof header.Result === 'undefined') {\n          set_header(['Result', move]);\n        }\n      }\n      else {\n        move = move_from_san(move, sloppy);\n        if (move == null) {\n          return false;\n        } else {\n          make_move(move);\n        }\n      }\n      return true;\n    },\n\n    header: function() {\n      return set_header(arguments);\n    },\n\n    ascii: function() {\n      return ascii();\n    },\n\n    turn: function() {\n      return turn;\n    },\n\n    move: function(move, options) {\n      /* The move function can be called with in the following parameters:\n       *\n       * .move('Nxb7')      <- where 'move' is a case-sensitive SAN string\n       *\n       * .move({ from: 'h7', <- where the 'move' is a move object (additional\n       *         to :'h8',      fields are ignored)\n       *         promotion: 'q',\n       *      })\n       */\n\n      // allow the user to specify the sloppy move parser to work around over\n      // disambiguation bugs in Fritz and Chessbase\n      var sloppy = (typeof options !== 'undefined' && 'sloppy' in options) ?\n                    options.sloppy : false;\n\n      var move_obj = null;\n\n      if (typeof move === 'string') {\n        move_obj = move_from_san(move, sloppy);\n      } else if (typeof move === 'object') {\n        var moves = generate_moves();\n\n        /* convert the pretty move object to an ugly move object */\n        for (var i = 0, len = moves.length; i < len; i++) {\n          if (move.from === algebraic(moves[i].from) &&\n              move.to === algebraic(moves[i].to) &&\n              (!('promotion' in moves[i]) ||\n              move.promotion === moves[i].promotion)) {\n            move_obj = moves[i];\n            break;\n          }\n        }\n      }\n\n      /* failed to find move */\n      if (!move_obj) {\n        return null;\n      }\n\n      /* need to make a copy of move because we can't generate SAN after the\n       * move is made\n       */\n      var pretty_move = make_pretty(move_obj);\n\n      make_move(move_obj);\n\n      return pretty_move;\n    },\n\n    undo: function() {\n      var move = undo_move();\n      return (move) ? make_pretty(move) : null;\n    },\n\n    clear: function() {\n      return clear();\n    },\n\n    put: function(piece, square) {\n      return put(piece, square);\n    },\n\n    get: function(square) {\n      return get(square);\n    },\n\n    remove: function(square) {\n      return remove(square);\n    },\n\n    perft: function(depth) {\n      return perft(depth);\n    },\n\n    square_color: function(square) {\n      if (square in SQUARES) {\n        var sq_0x88 = SQUARES[square];\n        return ((rank(sq_0x88) + file(sq_0x88)) % 2 === 0) ? 'light' : 'dark';\n      }\n\n      return null;\n    },\n\n    history: function(options) {\n      var reversed_history = [];\n      var move_history = [];\n      var verbose = (typeof options !== 'undefined' && 'verbose' in options &&\n                     options.verbose);\n\n      while (history.length > 0) {\n        reversed_history.push(undo_move());\n      }\n\n      while (reversed_history.length > 0) {\n        var move = reversed_history.pop();\n        if (verbose) {\n          move_history.push(make_pretty(move));\n        } else {\n          move_history.push(move_to_san(move));\n        }\n        make_move(move);\n      }\n\n      return move_history;\n    }\n\n  };\n};\n\n/* export Chess object if using node or any other CommonJS compatible\n * environment */\nif (typeof exports !== 'undefined') exports.Chess = Chess;\n/* export Chess object for any RequireJS compatible environment */\nif (typeof define !== 'undefined') define( function () { return Chess;  });\n"," \n import { generate } from 'pegjs'\n import { Chess } from 'chess.js'\n\nlet grammar = `{\n    function flatten(a, acc = []) {\n        for (var i = 0; i < a.length; i++) {\n            if (Array.isArray(a[i])) {\n                flatten(a[i], acc);\n            } else {\n                acc.push(a[i]);\n            }\n        }\n        return acc;\n    }\n    function make_header(hn,hv) {\n        var m = {};\n        m[hn] = hv;\n        return m;\n    }\n    function make_move(move_number, move, nags, ravs, comment) {\n        var m = {};\n        if (move_number) m.move_number = move_number;\n        if (move) m.move = move;\n        if (nags && nags.length) m.nags = nags;\n        if (ravs && ravs.length) m.ravs = ravs;\n        if (comment) m.comment = comment;\n        return m;\n    }\n    function make_rav(moves, result) {\n        return {\n            moves, \n            result\n        };\n    }\n    function make_game(h, c, m, r) {\n        h = h || [];\n        return {\n            headers: h.reduce((acc, x) => Object.assign(acc, x), {}),\n            comment: c,\n            moves: m || [],\n            result: r\n        };\n    }\n}\n\nstart = gs:(game newline*)* EOF {return gs.map(function(g) { return g[0]})}\n\ngame = \n    whitespace*\n    h:headers? \n    c:comment? \n    whitespace* \n    mr:(m:movetext whitespace+ r:result {return [m, r]} / r:result {return [null, r]}) \n    whitespace* {return make_game(h, c, mr[0], mr[1])}\n\nEOF = !.\ndouble_quote = '\"'\nstring = double_quote str:[^\"]* double_quote {return str.join('')}\ninteger = a:[1-9] b:[0-9]* {return parseInt(a+b.join(''), 10)}\nsymbol = chars:[A-Za-z0-9_-]+ {return chars.join('')}\nws = ' ' / '\\\\f' / '\\\\t'\nwhitespace = ws / newline\nnewline = '\\\\n'\n\nheader = '[' hn:symbol ws+ hv:string ']' whitespace* { return make_header(hn,hv) }\nheaders = hs:header+ {return hs}\n\npiece = [NKQRB]\nrank = [a-h]\nfile = [1-8]\ncheck = \"+\"\ncheckmate = \"#\"\ncapture = \"x\"\nperiod = \".\"\nresult = \"1-0\" / \"0-1\" / \"*\" / \"1/2-1/2\"\nmove_number = mn:integer period? (period period)? {return mn}\nsquare = r:rank f:file {return r+f}\npromotion = \"=\" [QRBN]\nnag = chars:(\"$\" integer) {return chars.join('')}\nnag_alts = \"!!\" / \"??\" / \"!?\" / \"?!\" / \"!\" / \"?\"\ncontinuation = period period period\n\ncomment_chars = [^}]\ncomment = \"{\" cc:comment_chars* \"}\" {return cc.join('');}\n\npawn_half_move = (r:rank c:capture)? square promotion?\npiece_half_move = piece capture? square\npiece_disambiguation_half_move = piece (rank / file) capture? square\ncastle_half_move = (\"O-O-O\" / \"O-O\")\n\nhalf_move = m:(continuation? \n    (castle_half_move / \n     piece_disambiguation_half_move / \n     piece_half_move / \n     pawn_half_move) \n    (check / checkmate)? \n    nag_alts?) {return flatten(m).join('');}\n\nmove = mn:move_number? \n       whitespace*\n       m:half_move \n       nags:(whitespace+ n:nag {return n})*\n       com:(whitespace+ c2:comment {return c2})?\n       (whitespace+ comment)*\n       ravs:(whitespace+ r:rav {return r})*\n       {return make_move(mn, m, nags, ravs, com)}\n\nmovetext = first:move rest:(whitespace+ move)* {return first ? [first].concat(rest.map(function(m) {return m[1]})) : []}\n\nrav = \"(\" \n    whitespace* \n    m:movetext \n    whitespace* \n    r:result?\n    whitespace*\n    \")\" {return make_rav(m, r)}\n\n`;\n\nlet parser = generate(grammar)\n\n/*\n    Returns a node of the form \n    { color: 'w', from: 'g2', to: 'g3', flags: 'n', piece: 'p', san: 'g3' \n        move_number,\n        comment,\n        fen,\n        idx,  // unique index\n        parent,\n        children:[], \n        played: []  //(for trainer)\n    }\n\n */\nexport const  parsepgn = (pgn) => {\n    let r1 = parser.parse(pgn)[0]  // simple array representation\n    console.log(\"Base structure:\", r1)\n    // pprint(r1.moves, \"\")\n    let game = Chess()\n    return parseOneGame(r1, game)\n}\n\nfunction parseOneGame(baseGame, game) {\n    game.reset()\n    let root = { fen: game.fen(), children: [], played: new Set(), move_number:0}\n    if (baseGame.moves.length > 0) {\n        convert(baseGame.moves.slice(), game, root)\n    }\n    return root\n}\n\nfunction convert(moves, game, parent) {\n    // console.log(\"Entering\" + moves[0])\n    let cmove = moves[0]\n    let movestr = cmove.move.replace(/\\./g, '')\n    let node = game.move(movestr)\n    // -> { color: 'w', from: 'g2', to: 'g3', flags: 'n', piece: 'p', san: 'g3' }\n    if (node == null) {\n        console.log(\"Unknown move: \", cmove, parent.san)\n        return;\n    }\n    node.fen = game.fen()\n    addNode(node, parent, cmove.comment, cmove.nags, cmove.move_number)\n    if (moves.length > 1) {\n        // console.log(moves.length, \"making rec call\")\n        moves.shift()\n        convert(moves, game, node)\n        if (cmove.ravs) {\n            cmove.ravs.forEach(rav => {\n                game.load(parent.fen)\n                convert(rav.moves.slice(), game, parent)\n            })\n        }\n    }\n\n\n}\n\nexport const addNode = (node, parent, comment, nags, moveNum) => {\n    node.children = []\n    node.played = new Set()\n    node.move_number = moveNum ? moveNum : \n        (parent == null ? 1 :\n            (node.color == 'b' ? parent.move_number : \n                parent.move_number + 1))\n    addCommentAndNags(node, comment, nags)\n    node.parent = parent\n    parent.children.push(node)\n}\n\nexport const deleteNode = (node) => {\n    if (node.parent) {\n        let index = node.parent.children.indexOf(node);\n        if (index !== -1) {\n            node.parent.children.splice(index, 1);\n        }\n    }\n}\n\nexport const promoteNode = (node) => {\n    if (node.parent) {\n        let index = node.parent.children.indexOf(node);\n        if (index !== -1) {\n            node.parent.children.splice(index, 1);\n        }\n        node.parent.children.unshift(node)\n    }\n}\n\nexport const addCommentAndNags = (node, comment, nags) => {\n    if (comment && comment.indexOf('[%') < 0) {\n        node.comment = comment\n    }\n    if (nags) {\n        node.nags = nags\n    }\n}\n\n\nexport const updatePlayedStatus = (node) => {\n    if (allChildrenPlayed(node)) {\n        if (node.parent) {\n            node.parent.played.add(node)\n            updatePlayedStatus(node.parent)\n        }\n    }\n}\n\nexport const allChildrenPlayed = (node) => {\n    for (let i = 0; i < node.children.length; i++) {\n        if (!node.played.has(node.children[i])) {\n            return false\n        }\n    }\n    return true\n}\n\nexport const  parseMultiple = (multipgn) => {\n    let games = parser.parse(multipgn)\n    let game = Chess()\n    let root = parseOneGame(games[0], game)\n    for (let i = 1; i < games.length; i++) {\n        let newRoot = parseOneGame(games[i], game)\n        mergeTrees(root, newRoot)\n    }\n    return root\n}\n\nexport const mergeTrees = (node1, node2) => {\n    console.log(node1.san, node2.san)\n    if (node1.fen === node2.fen) {\n        for (let child2 of node2.children) {\n            let matching = node1.children.filter(child => child2.fen === child.fen)\n            if (matching.length === 0) {\n                node1.children.push(child2)\n            } else {\n                mergeTrees(matching[0], child2)\n            }\n        }\n    } else {\n        throw \"Positions do not match\"\n    }\n}\n\nexport const findNext = (current, from, to) => {\n    for (var i = 0; i < current.children.length; i++) {\n        let node = current.children[i];\n        if (node.from == from && node.to == to) {\n            return node\n        }\n    }\n    return null\n}\n\n\n\n\n","\n// move made   ( orig, dest, capturedPiece )\n\n// current changed\n\nexport const GAME_CHANGED = 'gameChanged'\nexport const gameChangedAction = (root, engineColor) => ({\n    type: GAME_CHANGED, root, engineColor\n})\n\nexport const POSITION_CHANGED = 'positionChanged'\n\nexport const positionChangedAction = (node) => ({type: POSITION_CHANGED, node })\n    \nexport const PLAYER_MADE_MOVE = 'playerMadeMove'\n\nexport const playerMadeMoveAction = (newCurrent) => ({\n    type: PLAYER_MADE_MOVE, newCurrent\n})\n\n\nexport const HIDE_PGN_CHANGED = 'hidePgnChanged'\n\nexport const hidePgnChangedAction = (checked) => ({\n    type: HIDE_PGN_CHANGED, checked\n})\n\nexport const AUTOPLAY_CHANGED = 'autoPlayChanged'\n\nexport const autoPlayChangedAction = (checked) => ({\n    type: AUTOPLAY_CHANGED, checked\n})\n\nexport const HINT_CLICKED = 'hintClicked'\nexport const hintClickedAction = () => ({\n    type: HINT_CLICKED\n})\n\nexport const BOARD_FLIPPED = 'boardFlipped'\n\nexport const boardFlippedAction = (checked) => ({\n    type: BOARD_FLIPPED, checked\n})\n","\nimport Chessground from '../assets/libs/chessground'\nimport { updatePlayedStatus } from '../utils/pgnutils'\nimport {playerMadeMoveAction} from '../actions/game-actions'\n\n\n\nexport const init = (boardId, nextFunc, store) => {\n\n    let ground\n\n    let options = {\n        resizable: true,\n        // orientation: 'black',\n        // fen: '2r3k1/pp2Qpbp/4b1p1/3p4/3n1PP1/2N4P/Pq6/R2K1B1R w -'\n        events: {\n            // change: onchange, // called after the situation changes on the board\n            // called after a piece has been moved.\n            // capturedPiece is undefined or like {color: 'white'; 'role': 'queen'}\n            move: (orig, dest, capturedPiece) => onMove(orig, dest, capturedPiece, nextFunc, store),\n            // dropNewPiece: onDropNewPiece,\n            // select: onSelect, // called when a square is selected\n            // insert: onInsert // when the board DOM has been (re)inserted\n        }\n        \n    }\n    \n    resizeBoard()\n\n    ground = Chessground(document.getElementById(boardId), options)\n    store.subscribe(() => {\n        // console.log(store.getState())\n        let { current, engineColor, hint} = store.getState()\n        let options = {\n            fen: current.fen,\n            orientation: engineColor === 'white' ? 'black' : 'white'\n        }\n        \n        window.setTimeout(() => {\n            ground.set(options)\n            if (hint) {\n                let shapes = getHintShapes(current)\n                ground.setShapes(shapes)\n            }\n        }, 100)\n    })\n    return ground\n}\n\nfunction getHintShapes(current) {\n    let arr = []\n    current.children.forEach(child => {\n        arr.push({\n            orig: child.from,\n            dest: child.to,\n            brush: 'red'\n        })\n    })\n    return arr\n    \n    \n}\n\nfunction onMove(orig, dest, capturedPiece, nextFunc, store) {\n    let {current} = store.getState()\n    let next = nextFunc(orig, dest)\n\n    store.dispatch(playerMadeMoveAction(next))\n\n}\n\n\nfunction resizeBoard() {\n    var boardElem = document.getElementById(\"dirty\")\n    var parentElem = boardElem.parentNode\n    var rect = parentElem.getBoundingClientRect()\n    let maxw = rect.width - 10\n    let w8 = maxw - maxw % 8 \n    boardElem.style.width = w8 + \"px\"\n    boardElem.style.height = w8 + \"px\"\n}\n\nexport default {init}\n","let test_game = `\n[White \"me\"]\n[Black \"you\"]\n1. e4 e5 2. Nf3 Nc6 3. Bc4 Bc5 \n(3. ...Nf6 {is the two knights}) \n4. b4 Bxb4 5. c3 Ba5 6. d4 exd4 7. O-O Nge7 $1 *`;\n\nlet budapest_gambit =`\n[Event \"?\"]\n[Site \"?\"]\n[Date \"????.??.??\"]\n[Round \"?\"]\n[White \"Budapest\"]\n[Black \"Gambit\"]\n[Result \"?\"]\n\n 1.d4 Nf6 2.c4 e5 3.dxe5\n     ( 3.d5 Bc5 4.Bg5 Bxf2+ 5.Kxf2 Ne4+ {This is a mistake, with precise play white can get a better position.}\n         ( 5...Ng4+ 6.Kf3 Qxg5)\n     6.Ke3 Nxg5 7.h4 {The knight is trapped.})\n 3...Ng4\n     ( 3...Ne4 4.Qc2 Bb4+ 5.Nd2 d6 6.exd6\n         ( 6.Qxe4 O-O)\n     6...Bf5 7.Qa4+ Nc6 8.a3 Nc5 9.Qb5 a6 10.dxc7 Qxc7 11.axb4 axb5 12.Rxa8+ Bc8 13.bxc5 O-O 14.cxb5 Nb4 15.c6 {Better\n    for white.})\n 4.Nf3\n     ( 4.Qd4 d6 5.exd6 Nc6\n         ( 5...Bxd6 6.Qxg7\n             ( 6.Qe4+ Be6 7.Qxb7 Nd7 {Black is down two pawns, but is much better developed} 8.e3 O-O 9.Nf3 Nc5 10.Qb5\n            Rb8 11.Qc6\n                 ( 11.Qa5 Nd3+ 12.Bxd3\n                     ( 12.Ke2 Nxc1+ 13.Kd1 Nxf2+)\n                 12...Bb4+ {Losing the queen})\n             11...Rb6 {Traps the queen})\n\n             ( 6.Nf3 O-O 7.Nc3\n                 ( 7.h3 Nc6 8.Qe4 Re8 9.Qc2 Nb4 10.Qc3 Nd3+ 11.Qxd3\n                     ( 11.Kd2 Bb4)\n                 11...Bb4+ {Any blocking move can be met by capturing the queen.} 12.Bd2\n                     ( 12.Nc3 Qxd3)\n\n                     ( 12.Kd1 Nxf2+)\n                 12...Qxd3 13.Bxb4 Qc2)\n             7...Nc6 8.Qd1 Bc5 9.Qxd8\n                 ( 9.e3 Qxd1+ 10.Nxd1 Nb4 {Attacking c2} 11.Rb1\n                     ( 11.Ke2 Bf5)\n\n                     ( 11.Kd2 Rd8+ 12.Nd4 Bxd4 13.exd4 Rxd4+)\n                 11...Bf5)\n             9...Bxf2+ 10.Kd1 Rxd8+)\n\n             ( 6.h3 Nc6)\n         6...Be5 7.Qg5 Qxg5 8.Bxg5 Bxb2 {Black is a rook ahead.})\n     6.Qe4+ Be6 7.dxc7 Qd1+ 8.Kxd1 Nxf2+ 9.Ke1 Nxe4 {Black is better})\n\n     ( 4.Qd5 Nc6 5.f4\n         ( 5.Nf3 d6 6.Bg5\n             ( 6.exd6 Be6 7.Qd1\n                 ( 7.Qe4 Qxd6 8.Bf4 Qd1+ 9.Kxd1 Nxf2+)\n\n                 ( 7.Qd3 Nb4 8.dxc7 Nxd3+)\n             7...Bxd6 8.h3 Nxf2 9.Kxf2 Bg3+ 10.Kxg3 Qxd1)\n         6...Be7 7.Bxe7 Nxe7 8.Qe4 dxe5 9.Nxe5 Qd1+ 10.Kxd1 Nxf2+)\n     5...Nb4 6.Qe4 {Mistake by white} 6...Bc5 7.e3 Bxe3 8.Bxe3 Nxe3 9.Qxe3 Nc2+)\n\n     ( 4.e6 Bb4+ 5.Bd2 Qf6 6.Nf3 Qxb2 7.Bxb4 Qxb4+)\n\n     ( 4.Bf4 Bb4+ 5.Nd2 d6 6.exd6 Qf6)\n 4...Nc6\n     ( 4...Bc5 {This move forces white to play e3, blocking his dark square bishop. Black can then continue to go\n    after the pawn} 5.e3 Nc6 6.Qd5\n         ( 6.Be2 {White gives the pawn back. How should black play for a good middle game?} 6...Ngxe5 7.Nxe5 Nxe5 8.a3\n        a5 {Stopping b4} 9.O-O O-O 10.Nc3 Re8 {Have the option for the dark square bishop to fall back to f8} 11.b3 Ra6\n         12.Bb2 Rh6 13.Nd5 d6 14.b4 {At this point black can launch an attack.} 14...Qh4 15.h3 Bxh3 16.g3 Qe4 17.f3\n        Bxe3+ 18.Nxe3 Qxe3+ 19.Rf2 Qg5 20.g4 Qh4 {With mate to follow soon.})\n     6...Qe7)\n 5.Bf4 Bb4+ 6.Nbd2 Qe7 7.a3 Ngxe5 8.axb4\n     ( 8.Nxe5 Nxe5 9.Bxe5 Bxd2+ 10.Qxd2 Qxe5 {With a normal game})\n 8...Nd3# {Checkmate} *`;\n\n let scotch_gambit =`\n [White \"me\"]\n[Black \"you\"]\n 1.e4 e5 2.Nf3 Nc6 3.d4 exd4 4.Bc4  {  If you had seen this, i hope you enjoy the scotch gambit. And if you like this and find it useful, pls leave a like and share this study. If it goes well i would do another one, i hope you enjoy this!  } Bc5  {  Black protects the pawn  } \n (Bb4+ 5.c3 dxc3 6.bxc3 Bc5  {  we can attack the same way  } \n   (6...Ba5 7.O-O \n  ) \n   (6...Bd6 7.O-O \n  ) \n   (6...Bf8  {  blunder, black failed to develop pieces  } \n  ) 7.Bxf7+ Kxf7 8.Qd5+  {  the king would be chased all over  } \n) \n (Be7 5.c3 \n   (5.O-O  {  white is ready to develop pieces  } \n  ) 5...dxc3 \n   (5...Nf6 6.e5 Ne4 \n     (6...d5  {  this is a blunder  } 7.exf6 dxc4 8.fxe7 \n    ) 7.Bd5 \n  ) 6.Qd5 Nh6  {  best way to defend  } 7.Bxh6 O-O  {  best move for black yet losing material  } 8.Nxc3 gxh6 9.Qh5  {  the bishop can be sacrificed for aggressive advantage, black can't hold on for long  } \n) \n (Nf6 5.e5 Ng4  {  the strongest defence for black  } \n   (5...Ne4 \n  ) 6.O-O Ngxe5 7.Nxe5 Nxe5 8.Re1  {  this pins the knight  } d6  {  protects  } 9.f4  {  the knight is now lost, leading to material advantage  } \n) 5.Ng5  {  Attacks f7  } \n (5.c3 dxc3 \n   (5...Nf6 6.e5 Ng8  {  causing lost of momentum  } \n  ) 6.Bxf7+ Kf8 \n   (6...Kxf7 7.Qd5+ Kg6  {  worst move  } \n     (7...Kf6 8.Bg5+ Kg6 9.Qf5+ Kh5 10.g4# \n    ) \n     (7...Ke8  {  safest move  } 8.Qxc5 \n    ) 8.Qf5# \n  ) 7.Nxc3  {  White has better development  } \n) 5...Nh6 6.Qh5  {  Aggressive but easily stabilised  } * `\n\n// let gamemap = {\n//     \"Select a game\" : {\n//         'pgn': '[White \"me\"]\\n[Black \"you\"]\\n *',\n//         'engineColor': 'black'\n//     },\n//     \"Budapest gambit\" : {\n//         'pgn': budapest_gambit,\n//         'engineColor': 'white'\n//     },\n//     \"Scotch gambit\" : {\n//         'pgn': scotch_gambit,\n//         'engineColor': 'black'\n//     },\n//     \"Test game\": {\n//         'pgn': test_game,\n//         'engineColor': 'black'\n//     }\n// }\n\nlet gamemap = {\n    \"Select a game\" : {\n        'pgn': 'empty-game.pgn',\n        'engineColor': 'black'\n    },\n    \"Budapest gambit\" : {\n        'pgn': 'budapest-gambit.pgn',\n        'engineColor': 'white'\n    },\n    \"Scotch gambit\" : {\n        'pgn': 'scotch-gambit.pgn',\n        'engineColor': 'black'\n    },\n    \"Test game\": {\n        'pgn': 'test-game.pgn',\n        'engineColor': 'black'\n    }\n}\nexports.gamemap = gamemap\n","\nexport const configureButton = (id, onClick)  => {\n    document.getElementById(id).addEventListener(\"click\", onClick)\n}\n\nexport const copyToClipboard = (text) => {\n    navigator.clipboard.writeText(text).then(function () {\n        console.log('Async: Copying to clipboard was successful!');\n    }, function (err) {\n        console.error('Async: Could not copy text: ', err);\n    });\n}","export default function symbolObservablePonyfill(root) {\n\tvar result;\n\tvar Symbol = root.Symbol;\n\n\tif (typeof Symbol === 'function') {\n\t\tif (Symbol.observable) {\n\t\t\tresult = Symbol.observable;\n\t\t} else {\n\t\t\tresult = Symbol('observable');\n\t\t\tSymbol.observable = result;\n\t\t}\n\t} else {\n\t\tresult = '@@observable';\n\t}\n\n\treturn result;\n};\n","/* global window */\nimport ponyfill from './ponyfill.js';\n\nvar root;\n\nif (typeof self !== 'undefined') {\n  root = self;\n} else if (typeof window !== 'undefined') {\n  root = window;\n} else if (typeof global !== 'undefined') {\n  root = global;\n} else if (typeof module !== 'undefined') {\n  root = module;\n} else {\n  root = Function('return this')();\n}\n\nvar result = ponyfill(root);\nexport default result;\n","import $$observable from 'symbol-observable';\n\n/**\n * These are private action types reserved by Redux.\n * For any unknown actions, you must return the current state.\n * If the current state is undefined, you must return the initial state.\n * Do not reference these action types directly in your code.\n */\nvar randomString = function randomString() {\n  return Math.random().toString(36).substring(7).split('').join('.');\n};\n\nvar ActionTypes = {\n  INIT: \"@@redux/INIT\" + randomString(),\n  REPLACE: \"@@redux/REPLACE\" + randomString(),\n  PROBE_UNKNOWN_ACTION: function PROBE_UNKNOWN_ACTION() {\n    return \"@@redux/PROBE_UNKNOWN_ACTION\" + randomString();\n  }\n};\n\n/**\n * @param {any} obj The object to inspect.\n * @returns {boolean} True if the argument appears to be a plain object.\n */\nfunction isPlainObject(obj) {\n  if (typeof obj !== 'object' || obj === null) return false;\n  var proto = obj;\n\n  while (Object.getPrototypeOf(proto) !== null) {\n    proto = Object.getPrototypeOf(proto);\n  }\n\n  return Object.getPrototypeOf(obj) === proto;\n}\n\n/**\n * Creates a Redux store that holds the state tree.\n * The only way to change the data in the store is to call `dispatch()` on it.\n *\n * There should only be a single store in your app. To specify how different\n * parts of the state tree respond to actions, you may combine several reducers\n * into a single reducer function by using `combineReducers`.\n *\n * @param {Function} reducer A function that returns the next state tree, given\n * the current state tree and the action to handle.\n *\n * @param {any} [preloadedState] The initial state. You may optionally specify it\n * to hydrate the state from the server in universal apps, or to restore a\n * previously serialized user session.\n * If you use `combineReducers` to produce the root reducer function, this must be\n * an object with the same shape as `combineReducers` keys.\n *\n * @param {Function} [enhancer] The store enhancer. You may optionally specify it\n * to enhance the store with third-party capabilities such as middleware,\n * time travel, persistence, etc. The only store enhancer that ships with Redux\n * is `applyMiddleware()`.\n *\n * @returns {Store} A Redux store that lets you read the state, dispatch actions\n * and subscribe to changes.\n */\n\nfunction createStore(reducer, preloadedState, enhancer) {\n  var _ref2;\n\n  if (typeof preloadedState === 'function' && typeof enhancer === 'function' || typeof enhancer === 'function' && typeof arguments[3] === 'function') {\n    throw new Error('It looks like you are passing several store enhancers to ' + 'createStore(). This is not supported. Instead, compose them ' + 'together to a single function.');\n  }\n\n  if (typeof preloadedState === 'function' && typeof enhancer === 'undefined') {\n    enhancer = preloadedState;\n    preloadedState = undefined;\n  }\n\n  if (typeof enhancer !== 'undefined') {\n    if (typeof enhancer !== 'function') {\n      throw new Error('Expected the enhancer to be a function.');\n    }\n\n    return enhancer(createStore)(reducer, preloadedState);\n  }\n\n  if (typeof reducer !== 'function') {\n    throw new Error('Expected the reducer to be a function.');\n  }\n\n  var currentReducer = reducer;\n  var currentState = preloadedState;\n  var currentListeners = [];\n  var nextListeners = currentListeners;\n  var isDispatching = false;\n  /**\n   * This makes a shallow copy of currentListeners so we can use\n   * nextListeners as a temporary list while dispatching.\n   *\n   * This prevents any bugs around consumers calling\n   * subscribe/unsubscribe in the middle of a dispatch.\n   */\n\n  function ensureCanMutateNextListeners() {\n    if (nextListeners === currentListeners) {\n      nextListeners = currentListeners.slice();\n    }\n  }\n  /**\n   * Reads the state tree managed by the store.\n   *\n   * @returns {any} The current state tree of your application.\n   */\n\n\n  function getState() {\n    if (isDispatching) {\n      throw new Error('You may not call store.getState() while the reducer is executing. ' + 'The reducer has already received the state as an argument. ' + 'Pass it down from the top reducer instead of reading it from the store.');\n    }\n\n    return currentState;\n  }\n  /**\n   * Adds a change listener. It will be called any time an action is dispatched,\n   * and some part of the state tree may potentially have changed. You may then\n   * call `getState()` to read the current state tree inside the callback.\n   *\n   * You may call `dispatch()` from a change listener, with the following\n   * caveats:\n   *\n   * 1. The subscriptions are snapshotted just before every `dispatch()` call.\n   * If you subscribe or unsubscribe while the listeners are being invoked, this\n   * will not have any effect on the `dispatch()` that is currently in progress.\n   * However, the next `dispatch()` call, whether nested or not, will use a more\n   * recent snapshot of the subscription list.\n   *\n   * 2. The listener should not expect to see all state changes, as the state\n   * might have been updated multiple times during a nested `dispatch()` before\n   * the listener is called. It is, however, guaranteed that all subscribers\n   * registered before the `dispatch()` started will be called with the latest\n   * state by the time it exits.\n   *\n   * @param {Function} listener A callback to be invoked on every dispatch.\n   * @returns {Function} A function to remove this change listener.\n   */\n\n\n  function subscribe(listener) {\n    if (typeof listener !== 'function') {\n      throw new Error('Expected the listener to be a function.');\n    }\n\n    if (isDispatching) {\n      throw new Error('You may not call store.subscribe() while the reducer is executing. ' + 'If you would like to be notified after the store has been updated, subscribe from a ' + 'component and invoke store.getState() in the callback to access the latest state. ' + 'See https://redux.js.org/api-reference/store#subscribelistener for more details.');\n    }\n\n    var isSubscribed = true;\n    ensureCanMutateNextListeners();\n    nextListeners.push(listener);\n    return function unsubscribe() {\n      if (!isSubscribed) {\n        return;\n      }\n\n      if (isDispatching) {\n        throw new Error('You may not unsubscribe from a store listener while the reducer is executing. ' + 'See https://redux.js.org/api-reference/store#subscribelistener for more details.');\n      }\n\n      isSubscribed = false;\n      ensureCanMutateNextListeners();\n      var index = nextListeners.indexOf(listener);\n      nextListeners.splice(index, 1);\n      currentListeners = null;\n    };\n  }\n  /**\n   * Dispatches an action. It is the only way to trigger a state change.\n   *\n   * The `reducer` function, used to create the store, will be called with the\n   * current state tree and the given `action`. Its return value will\n   * be considered the **next** state of the tree, and the change listeners\n   * will be notified.\n   *\n   * The base implementation only supports plain object actions. If you want to\n   * dispatch a Promise, an Observable, a thunk, or something else, you need to\n   * wrap your store creating function into the corresponding middleware. For\n   * example, see the documentation for the `redux-thunk` package. Even the\n   * middleware will eventually dispatch plain object actions using this method.\n   *\n   * @param {Object} action A plain object representing “what changed”. It is\n   * a good idea to keep actions serializable so you can record and replay user\n   * sessions, or use the time travelling `redux-devtools`. An action must have\n   * a `type` property which may not be `undefined`. It is a good idea to use\n   * string constants for action types.\n   *\n   * @returns {Object} For convenience, the same action object you dispatched.\n   *\n   * Note that, if you use a custom middleware, it may wrap `dispatch()` to\n   * return something else (for example, a Promise you can await).\n   */\n\n\n  function dispatch(action) {\n    if (!isPlainObject(action)) {\n      throw new Error('Actions must be plain objects. ' + 'Use custom middleware for async actions.');\n    }\n\n    if (typeof action.type === 'undefined') {\n      throw new Error('Actions may not have an undefined \"type\" property. ' + 'Have you misspelled a constant?');\n    }\n\n    if (isDispatching) {\n      throw new Error('Reducers may not dispatch actions.');\n    }\n\n    try {\n      isDispatching = true;\n      currentState = currentReducer(currentState, action);\n    } finally {\n      isDispatching = false;\n    }\n\n    var listeners = currentListeners = nextListeners;\n\n    for (var i = 0; i < listeners.length; i++) {\n      var listener = listeners[i];\n      listener();\n    }\n\n    return action;\n  }\n  /**\n   * Replaces the reducer currently used by the store to calculate the state.\n   *\n   * You might need this if your app implements code splitting and you want to\n   * load some of the reducers dynamically. You might also need this if you\n   * implement a hot reloading mechanism for Redux.\n   *\n   * @param {Function} nextReducer The reducer for the store to use instead.\n   * @returns {void}\n   */\n\n\n  function replaceReducer(nextReducer) {\n    if (typeof nextReducer !== 'function') {\n      throw new Error('Expected the nextReducer to be a function.');\n    }\n\n    currentReducer = nextReducer; // This action has a similiar effect to ActionTypes.INIT.\n    // Any reducers that existed in both the new and old rootReducer\n    // will receive the previous state. This effectively populates\n    // the new state tree with any relevant data from the old one.\n\n    dispatch({\n      type: ActionTypes.REPLACE\n    });\n  }\n  /**\n   * Interoperability point for observable/reactive libraries.\n   * @returns {observable} A minimal observable of state changes.\n   * For more information, see the observable proposal:\n   * https://github.com/tc39/proposal-observable\n   */\n\n\n  function observable() {\n    var _ref;\n\n    var outerSubscribe = subscribe;\n    return _ref = {\n      /**\n       * The minimal observable subscription method.\n       * @param {Object} observer Any object that can be used as an observer.\n       * The observer object should have a `next` method.\n       * @returns {subscription} An object with an `unsubscribe` method that can\n       * be used to unsubscribe the observable from the store, and prevent further\n       * emission of values from the observable.\n       */\n      subscribe: function subscribe(observer) {\n        if (typeof observer !== 'object' || observer === null) {\n          throw new TypeError('Expected the observer to be an object.');\n        }\n\n        function observeState() {\n          if (observer.next) {\n            observer.next(getState());\n          }\n        }\n\n        observeState();\n        var unsubscribe = outerSubscribe(observeState);\n        return {\n          unsubscribe: unsubscribe\n        };\n      }\n    }, _ref[$$observable] = function () {\n      return this;\n    }, _ref;\n  } // When a store is created, an \"INIT\" action is dispatched so that every\n  // reducer returns their initial state. This effectively populates\n  // the initial state tree.\n\n\n  dispatch({\n    type: ActionTypes.INIT\n  });\n  return _ref2 = {\n    dispatch: dispatch,\n    subscribe: subscribe,\n    getState: getState,\n    replaceReducer: replaceReducer\n  }, _ref2[$$observable] = observable, _ref2;\n}\n\n/**\n * Prints a warning in the console if it exists.\n *\n * @param {String} message The warning message.\n * @returns {void}\n */\nfunction warning(message) {\n  /* eslint-disable no-console */\n  if (typeof console !== 'undefined' && typeof console.error === 'function') {\n    console.error(message);\n  }\n  /* eslint-enable no-console */\n\n\n  try {\n    // This error was thrown as a convenience so that if you enable\n    // \"break on all exceptions\" in your console,\n    // it would pause the execution at this line.\n    throw new Error(message);\n  } catch (e) {} // eslint-disable-line no-empty\n\n}\n\nfunction getUndefinedStateErrorMessage(key, action) {\n  var actionType = action && action.type;\n  var actionDescription = actionType && \"action \\\"\" + String(actionType) + \"\\\"\" || 'an action';\n  return \"Given \" + actionDescription + \", reducer \\\"\" + key + \"\\\" returned undefined. \" + \"To ignore an action, you must explicitly return the previous state. \" + \"If you want this reducer to hold no value, you can return null instead of undefined.\";\n}\n\nfunction getUnexpectedStateShapeWarningMessage(inputState, reducers, action, unexpectedKeyCache) {\n  var reducerKeys = Object.keys(reducers);\n  var argumentName = action && action.type === ActionTypes.INIT ? 'preloadedState argument passed to createStore' : 'previous state received by the reducer';\n\n  if (reducerKeys.length === 0) {\n    return 'Store does not have a valid reducer. Make sure the argument passed ' + 'to combineReducers is an object whose values are reducers.';\n  }\n\n  if (!isPlainObject(inputState)) {\n    return \"The \" + argumentName + \" has unexpected type of \\\"\" + {}.toString.call(inputState).match(/\\s([a-z|A-Z]+)/)[1] + \"\\\". Expected argument to be an object with the following \" + (\"keys: \\\"\" + reducerKeys.join('\", \"') + \"\\\"\");\n  }\n\n  var unexpectedKeys = Object.keys(inputState).filter(function (key) {\n    return !reducers.hasOwnProperty(key) && !unexpectedKeyCache[key];\n  });\n  unexpectedKeys.forEach(function (key) {\n    unexpectedKeyCache[key] = true;\n  });\n  if (action && action.type === ActionTypes.REPLACE) return;\n\n  if (unexpectedKeys.length > 0) {\n    return \"Unexpected \" + (unexpectedKeys.length > 1 ? 'keys' : 'key') + \" \" + (\"\\\"\" + unexpectedKeys.join('\", \"') + \"\\\" found in \" + argumentName + \". \") + \"Expected to find one of the known reducer keys instead: \" + (\"\\\"\" + reducerKeys.join('\", \"') + \"\\\". Unexpected keys will be ignored.\");\n  }\n}\n\nfunction assertReducerShape(reducers) {\n  Object.keys(reducers).forEach(function (key) {\n    var reducer = reducers[key];\n    var initialState = reducer(undefined, {\n      type: ActionTypes.INIT\n    });\n\n    if (typeof initialState === 'undefined') {\n      throw new Error(\"Reducer \\\"\" + key + \"\\\" returned undefined during initialization. \" + \"If the state passed to the reducer is undefined, you must \" + \"explicitly return the initial state. The initial state may \" + \"not be undefined. If you don't want to set a value for this reducer, \" + \"you can use null instead of undefined.\");\n    }\n\n    if (typeof reducer(undefined, {\n      type: ActionTypes.PROBE_UNKNOWN_ACTION()\n    }) === 'undefined') {\n      throw new Error(\"Reducer \\\"\" + key + \"\\\" returned undefined when probed with a random type. \" + (\"Don't try to handle \" + ActionTypes.INIT + \" or other actions in \\\"redux/*\\\" \") + \"namespace. They are considered private. Instead, you must return the \" + \"current state for any unknown actions, unless it is undefined, \" + \"in which case you must return the initial state, regardless of the \" + \"action type. The initial state may not be undefined, but can be null.\");\n    }\n  });\n}\n/**\n * Turns an object whose values are different reducer functions, into a single\n * reducer function. It will call every child reducer, and gather their results\n * into a single state object, whose keys correspond to the keys of the passed\n * reducer functions.\n *\n * @param {Object} reducers An object whose values correspond to different\n * reducer functions that need to be combined into one. One handy way to obtain\n * it is to use ES6 `import * as reducers` syntax. The reducers may never return\n * undefined for any action. Instead, they should return their initial state\n * if the state passed to them was undefined, and the current state for any\n * unrecognized action.\n *\n * @returns {Function} A reducer function that invokes every reducer inside the\n * passed object, and builds a state object with the same shape.\n */\n\n\nfunction combineReducers(reducers) {\n  var reducerKeys = Object.keys(reducers);\n  var finalReducers = {};\n\n  for (var i = 0; i < reducerKeys.length; i++) {\n    var key = reducerKeys[i];\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof reducers[key] === 'undefined') {\n        warning(\"No reducer provided for key \\\"\" + key + \"\\\"\");\n      }\n    }\n\n    if (typeof reducers[key] === 'function') {\n      finalReducers[key] = reducers[key];\n    }\n  }\n\n  var finalReducerKeys = Object.keys(finalReducers); // This is used to make sure we don't warn about the same\n  // keys multiple times.\n\n  var unexpectedKeyCache;\n\n  if (process.env.NODE_ENV !== 'production') {\n    unexpectedKeyCache = {};\n  }\n\n  var shapeAssertionError;\n\n  try {\n    assertReducerShape(finalReducers);\n  } catch (e) {\n    shapeAssertionError = e;\n  }\n\n  return function combination(state, action) {\n    if (state === void 0) {\n      state = {};\n    }\n\n    if (shapeAssertionError) {\n      throw shapeAssertionError;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      var warningMessage = getUnexpectedStateShapeWarningMessage(state, finalReducers, action, unexpectedKeyCache);\n\n      if (warningMessage) {\n        warning(warningMessage);\n      }\n    }\n\n    var hasChanged = false;\n    var nextState = {};\n\n    for (var _i = 0; _i < finalReducerKeys.length; _i++) {\n      var _key = finalReducerKeys[_i];\n      var reducer = finalReducers[_key];\n      var previousStateForKey = state[_key];\n      var nextStateForKey = reducer(previousStateForKey, action);\n\n      if (typeof nextStateForKey === 'undefined') {\n        var errorMessage = getUndefinedStateErrorMessage(_key, action);\n        throw new Error(errorMessage);\n      }\n\n      nextState[_key] = nextStateForKey;\n      hasChanged = hasChanged || nextStateForKey !== previousStateForKey;\n    }\n\n    hasChanged = hasChanged || finalReducerKeys.length !== Object.keys(state).length;\n    return hasChanged ? nextState : state;\n  };\n}\n\nfunction bindActionCreator(actionCreator, dispatch) {\n  return function () {\n    return dispatch(actionCreator.apply(this, arguments));\n  };\n}\n/**\n * Turns an object whose values are action creators, into an object with the\n * same keys, but with every function wrapped into a `dispatch` call so they\n * may be invoked directly. This is just a convenience method, as you can call\n * `store.dispatch(MyActionCreators.doSomething())` yourself just fine.\n *\n * For convenience, you can also pass an action creator as the first argument,\n * and get a dispatch wrapped function in return.\n *\n * @param {Function|Object} actionCreators An object whose values are action\n * creator functions. One handy way to obtain it is to use ES6 `import * as`\n * syntax. You may also pass a single function.\n *\n * @param {Function} dispatch The `dispatch` function available on your Redux\n * store.\n *\n * @returns {Function|Object} The object mimicking the original object, but with\n * every action creator wrapped into the `dispatch` call. If you passed a\n * function as `actionCreators`, the return value will also be a single\n * function.\n */\n\n\nfunction bindActionCreators(actionCreators, dispatch) {\n  if (typeof actionCreators === 'function') {\n    return bindActionCreator(actionCreators, dispatch);\n  }\n\n  if (typeof actionCreators !== 'object' || actionCreators === null) {\n    throw new Error(\"bindActionCreators expected an object or a function, instead received \" + (actionCreators === null ? 'null' : typeof actionCreators) + \". \" + \"Did you write \\\"import ActionCreators from\\\" instead of \\\"import * as ActionCreators from\\\"?\");\n  }\n\n  var boundActionCreators = {};\n\n  for (var key in actionCreators) {\n    var actionCreator = actionCreators[key];\n\n    if (typeof actionCreator === 'function') {\n      boundActionCreators[key] = bindActionCreator(actionCreator, dispatch);\n    }\n  }\n\n  return boundActionCreators;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    keys.push.apply(keys, Object.getOwnPropertySymbols(object));\n  }\n\n  if (enumerableOnly) keys = keys.filter(function (sym) {\n    return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n  });\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(source, true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(source).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\n/**\n * Composes single-argument functions from right to left. The rightmost\n * function can take multiple arguments as it provides the signature for\n * the resulting composite function.\n *\n * @param {...Function} funcs The functions to compose.\n * @returns {Function} A function obtained by composing the argument functions\n * from right to left. For example, compose(f, g, h) is identical to doing\n * (...args) => f(g(h(...args))).\n */\nfunction compose() {\n  for (var _len = arguments.length, funcs = new Array(_len), _key = 0; _key < _len; _key++) {\n    funcs[_key] = arguments[_key];\n  }\n\n  if (funcs.length === 0) {\n    return function (arg) {\n      return arg;\n    };\n  }\n\n  if (funcs.length === 1) {\n    return funcs[0];\n  }\n\n  return funcs.reduce(function (a, b) {\n    return function () {\n      return a(b.apply(void 0, arguments));\n    };\n  });\n}\n\n/**\n * Creates a store enhancer that applies middleware to the dispatch method\n * of the Redux store. This is handy for a variety of tasks, such as expressing\n * asynchronous actions in a concise manner, or logging every action payload.\n *\n * See `redux-thunk` package as an example of the Redux middleware.\n *\n * Because middleware is potentially asynchronous, this should be the first\n * store enhancer in the composition chain.\n *\n * Note that each middleware will be given the `dispatch` and `getState` functions\n * as named arguments.\n *\n * @param {...Function} middlewares The middleware chain to be applied.\n * @returns {Function} A store enhancer applying the middleware.\n */\n\nfunction applyMiddleware() {\n  for (var _len = arguments.length, middlewares = new Array(_len), _key = 0; _key < _len; _key++) {\n    middlewares[_key] = arguments[_key];\n  }\n\n  return function (createStore) {\n    return function () {\n      var store = createStore.apply(void 0, arguments);\n\n      var _dispatch = function dispatch() {\n        throw new Error('Dispatching while constructing your middleware is not allowed. ' + 'Other middleware would not be applied to this dispatch.');\n      };\n\n      var middlewareAPI = {\n        getState: store.getState,\n        dispatch: function dispatch() {\n          return _dispatch.apply(void 0, arguments);\n        }\n      };\n      var chain = middlewares.map(function (middleware) {\n        return middleware(middlewareAPI);\n      });\n      _dispatch = compose.apply(void 0, chain)(store.dispatch);\n      return _objectSpread2({}, store, {\n        dispatch: _dispatch\n      });\n    };\n  };\n}\n\n/*\n * This is a dummy function to check if the function name has been altered by minification.\n * If the function has been minified and NODE_ENV !== 'production', warn the user.\n */\n\nfunction isCrushed() {}\n\nif (process.env.NODE_ENV !== 'production' && typeof isCrushed.name === 'string' && isCrushed.name !== 'isCrushed') {\n  warning('You are currently using minified code outside of NODE_ENV === \"production\". ' + 'This means that you are running a slower development build of Redux. ' + 'You can use loose-envify (https://github.com/zertosh/loose-envify) for browserify ' + 'or setting mode to production in webpack (https://webpack.js.org/concepts/mode/) ' + 'to ensure you have the correct code for your production build.');\n}\n\nexport { ActionTypes as __DO_NOT_USE__ActionTypes, applyMiddleware, bindActionCreators, combineReducers, compose, createStore };\n","import { createStore } from 'redux'\nimport { POSITION_CHANGED, GAME_CHANGED, PLAYER_MADE_MOVE, HIDE_PGN_CHANGED, \n    AUTOPLAY_CHANGED, HINT_CLICKED, BOARD_FLIPPED } \n    from '../actions/game-actions'\nimport {findNext, parsepgn} from '../utils/pgnutils'\nimport { gamemap } from '../games'\n\nlet initialStatePractice = {\n    currentRoot: null,\n    current: null,\n    engineColor: 'white',\n    hidePGN: false,\n    autoPlay: false,\n    hint: false\n}\nlet emptyTree = parsepgn(`[White \"me\"]\n[Black \"you\"]\n1. e4 e5 2. Nf3 Nc6 3. Bc4 Bc5 \n(3. ...Nf6 {is the two knights}) \n4. b4 Bxb4 5. c3 Ba5 6. d4 exd4 7. O-O Nge7 $1 *`)\n\nlet initialStateEdit = {\n    currentRoot: emptyTree,\n    current: emptyTree,\n    engineColor: 'black',\n    hidePGN: false,\n    autoPlay: false,\n    hint: false\n}\n\nconst practiceReducer = (state=initialStatePractice, action) => {\n    return reducer(state, action)\n}\n\nconst editReducer = (state=initialStateEdit, action) => {\n    return reducer(state, action)\n}\n\nconst reducer = (state, action) => {\n    switch (action.type) {\n        case POSITION_CHANGED: return { ...state, hint: false, current: action.node }\n        case GAME_CHANGED: return {\n            ...state,\n            currentRoot: action.root,\n            current: action.root,\n            engineColor: action.engineColor,\n            hint: false\n        }\n        case PLAYER_MADE_MOVE:\n            return { ...state, current: action.newCurrent }\n\n        case HIDE_PGN_CHANGED: return { ...state, hidePGN: action.checked }\n\n        case AUTOPLAY_CHANGED: return { ...state, autoPlay: action.checked }\n\n        case HINT_CLICKED: return { ...state, hint: true }\n\n        case BOARD_FLIPPED: return {...state, engineColor: action.checked? 'white' : 'black'}\n\n        default: return state\n    }\n}\n\nexport const practiceStore = createStore(practiceReducer)\n\nexport const editStore = createStore(editReducer)\n\nlet currentState = initialStateEdit\neditStore.subscribe(() => {\n    let state = editStore.getState()\n    console.log(currentState, state)\n    currentState = state\n})\n\n\n\n\n\n","\n/*\n Uses CSS styles: \n\nmove div has classes: 'pgnelement', 'move', 'level0', level1, ...\n                        played or unplayed, and possibly currentmove\ncomment div has classes:  pgnelement', 'comment', 'level0', level1, ...\n\nvariation div has classes: 'pgnelement', 'variation', 'level0', level1,...\n\n*/\n\nimport { allChildrenPlayed } from './pgnutils'\n\nexport const displayFormattedPgn = (pgndiv, root, current, hidePGN, setCurrent) => {\n    pgndiv.innerHTML = ''\n    if (!hidePGN) {\n        // console.log('displayFormattedPGN:', \"Current:\" + current.san)\n        appendElements(root, pgndiv, 0, current, true, setCurrent);\n        if (current) {\n            let currentDiv = document.getElementById(nodeId(current))\n            // console.log('displayFormattedPGN:', currentDiv.offsetTop)\n            pgndiv.scrollTop = currentDiv.offsetTop \n            // currentDiv.scrollIntoView(false, {block:\"nearest\"})\n\n        }\n    }\n}\n\nfunction appendElements(node, parentElem, varDepth, current, writeNode, setCurrent) {\n    let isCurrent = (node === current)\n    if (writeNode) {\n        parentElem.appendChild(makeNodeDiv(node, varDepth, isCurrent, setCurrent))\n    }\n    if (node.children.length > 1) {\n        parentElem.appendChild(makeNodeDiv(node.children[0], varDepth, node.children[0] === current, setCurrent))\n        for (var i = 1; i < node.children.length; i++) {\n            let varDiv = makeVarDiv(varDepth)\n            parentElem.appendChild(varDiv)\n            let child = node.children[i]\n            addTextChild(varDiv, '(')\n            appendElements(child, varDiv, varDepth + 1, current, true, setCurrent)\n            addTextChild(varDiv, ')')\n        }\n        appendElements(node.children[0], parentElem, varDepth, current, false, setCurrent)\n    } else if (node.children.length > 0) {\n        appendElements(node.children[0], parentElem, varDepth, current, true, setCurrent)\n    }\n    \n}\n\nfunction makeNodeDiv(node, varDepth, isCurrent, setCurrent) {\n    let div = document.createElement(\"div\")\n    div.id = nodeId(node)\n    div.classList.add('pgnelement', 'move', 'level' + varDepth)\n\n    if (node.san) {\n        if (isCurrent) {\n            div.classList.add('currentmove')\n        }\n        if (allChildrenPlayed(node)) {\n            div.classList.add('played')\n        } else {\n            div.classList.add('unplayed')\n        }\n        if (node.color == 'w') {\n            div.appendChild(document.createTextNode(node.move_number + \".\"))\n        } else if (firstInVariation(node) ||\n                    firstAfterVariation(node)) {\n            div.appendChild(document.createTextNode(node.move_number + \"...\"))\n        }\n        div.appendChild(document.createTextNode(node.san))\n        if (node.comment) {\n            let cdiv = addTextChild(div, ['{', node.comment, '}'].join(' '))\n            cdiv.classList.add('pgnelement', 'comment', 'level' + varDepth)\n        }\n    }\n    div.onclick = function (ev) {\n        setCurrent(node)\n    }\n    return div\n\n}\n\nfunction addTextChild(parentDiv, text) {\n    let cdiv = document.createElement(\"div\")\n    cdiv.appendChild(document.createTextNode(text))\n    parentDiv.appendChild(cdiv)\n    return cdiv\n}\n\nfunction makeVarDiv(varDepth) {\n    let div = document.createElement(\"div\")\n    div.classList.add('pgnelement', 'variation', 'level' + varDepth)\n    return div\n}\n\nfunction firstInVariation(node) {\n    return (node.parent && node.parent.children.length > 1 &&\n        node != node.parent.children[0])\n}\n\nfunction firstAfterVariation(node) {\n    return (node.parent.parent && node.parent.parent.children.length > 1 &&\n        node.parent == node.parent.parent.children[0] && \n        node == node.parent.children[0])\n}\n\nfunction nodeId(node) {\n    let id = \"\";\n    while (node.parent) {\n        id += node.parent.children.indexOf(node)\n        node = node.parent\n    }\n    return id ? id : 'ROOT'\n}\n\nlet pgnBuffer\n\nexport const getPGNText = (root) => {\n    pgnBuffer = \"\"\n    writePGN(root.children[0], \"\", true, \"  \")\n    return pgnBuffer\n}\n\nconst writePGN = (node, currentIndent, writeNodeFirst, indent) => {\n    if (writeNodeFirst) {\n        writeNode(node)\n    }\n    if (node.children.length > 1) {\n        writeNode(node.children[0])\n        for (var i = 1; i < node.children.length; i++) {\n            pgnBuffer += ('\\n' + currentIndent + ' (')\n            writePGN(node.children[i], currentIndent + indent, true, indent)\n            pgnBuffer += ('\\n' + currentIndent + ') ')\n        }\n        writePGN(node.children[0], currentIndent, false, indent)\n    } else if (node.children.length > 0) {\n        writePGN(node.children[0], currentIndent, true, indent)\n    }\n}\n\nconst writeNode = (node) => {\n    if (node.color == 'w') {\n        pgnBuffer += (node.move_number + \".\")\n    } else if (firstInVariation(node) ||\n                firstAfterVariation(node)) {\n        pgnBuffer += (node.move_number + \"...\")\n    }\n    pgnBuffer += (node.san + ' ')\n    if (node.comment) {\n        pgnBuffer += [' {', node.comment, '} '].join(' ')\n    }\n}","import { parsepgn } from '../utils/pgnutils'\nimport { gamemap } from '../games'\nimport { gameChangedAction, autoPlayChangedAction, hidePgnChangedAction, hintClickedAction } from '../actions/game-actions'\nimport { configureButton, copyToClipboard } from '../utils/documentutils'\nimport { practiceStore as store } from '../store'\nimport { getPGNText } from '../utils/showpgn'\n\nexport const init = (selectDivId) => {\n    configureSelect(selectDivId, store)\n    configureButtons(store)\n}\n\n\nfunction configureSelect(divId) {\n\n    let seldiv = document.getElementById(divId)\n    let sel = document.createElement(\"select\")\n\n\n    for (let key in gamemap) {\n        let option = document.createElement(\"option\");\n        option.value = key;\n        option.text = key;\n        sel.appendChild(option);\n    }\n    seldiv.appendChild(sel)\n    sel.addEventListener(\"change\", event => onSelect(event))\n\n}\n\nfunction onSelect(event) {\n    console.log('onSelect')\n    let pgn = gamemap[event.target.value]\n    let file = './games/' + pgn['pgn']\n    console.log(file)\n    fetch(file)\n        .then((response) => {\n            console.log(\"Response is:\")\n            console.log(response)\n            return response.text();\n        })\n        .then((text) => {\n            console.log(text);\n            let root = parsepgn(text)\n            store.dispatch(gameChangedAction(root, pgn['engineColor']))\n        })\n\n}\n\nfunction configureButtons() {\n    configureButton('play', () => { console.log('Play') })\n    configureButton('hint', event => store.dispatch(hintClickedAction()))\n    configureButton('autoplay', event => store.dispatch(autoPlayChangedAction(event.target.checked)))\n    configureButton('hidepgn', event => store.dispatch(hidePgnChangedAction(event.target.checked)))\n    configureButton('copy', event => {\n        let { currentRoot } = store.getState()\n        let text = getPGNText(currentRoot)\n        copyToClipboard(text)\n\n    })\n}\n\nexport default { init }","\nimport { displayFormattedPgn } from '../utils/showpgn'\nimport { positionChangedAction } from '../actions/game-actions'\n\nexport const init = (divId, store) => {\n\n    const onClick = (node) => {\n        store.dispatch(positionChangedAction(node))\n    }\n\n    store.subscribe(() => {\n        let {currentRoot, current, hidePGN} = store.getState()\n        let pgnDiv = document.getElementById(divId)\n        displayFormattedPgn(pgnDiv, currentRoot, current, hidePGN, onClick)\n        \n    })\n}\n\nexport default {init}\n","\nexport const init = (divId, store) => {\n\n    store.subscribe(() => {\n        let { current } = store.getState()\n\n        let fendiv = document.getElementById(divId)\n        fendiv.innerHTML = ''\n        fendiv.appendChild(document.createTextNode(current.fen))\n    })\n}\n\nexport default { init }","\nexport const isEngineMove = (current, engineColor)  => {\n    return current && \n        ((current.color === 'w' && engineColor === 'black') ||\n        (current.color === 'b' && engineColor === 'white'));\n}","import Board from '../components/chessboard'\nimport PControls from '../components/practice-controls'\nimport PGNView from '../components/pgnviewer'\nimport Fen from '../components/fen'\n\nimport { practiceStore as store } from '../store'\nimport { isEngineMove as isEnginesTurn } from '../utils/gameutils'\nimport { positionChangedAction } from '../actions/game-actions'\nimport { findNext, updatePlayedStatus } from '../utils/pgnutils'\n\nconst computeNewPosition = (orig, dest) => {\n    let { current, engineColor, autoPlay } = store.getState()\n    let next = findNext(current, orig, dest)\n    if (next) {\n        current = next\n    }\n    return current\n}\n\nlet localCurrent = null\nconst triggerEngineMove = () => {\n    let { currentRoot, current, engineColor, autoPlay } = store.getState()\n    // exit if the game is over\n    if (current.children.length === 0) {\n        console.log(\"End of variation\")\n        updatePlayedStatus(current)\n        window.setTimeout(() => {\n            store.dispatch(positionChangedAction(currentRoot))\n        }, 2000)\n        return\n    }\n    if (localCurrent !== current && autoPlay && isEnginesTurn(current, engineColor)) {\n        window.setTimeout(makeNextMove, 500);\n    }\n    localCurrent = current\n}\n\nconst makeNextMove = function () {\n    let { currentRoot, current, engineColor } = store.getState()\n\n    var possibleMoves = current.children\n\n    if (possibleMoves.length === 0) {\n        return\n    }\n\n    let move;\n    let idx = 0;\n    while (idx < possibleMoves.length) {\n        if (!current.played.has(possibleMoves[idx])) {\n            move = possibleMoves[idx]\n            break\n        }\n        idx++\n    }\n    if (!move) {\n        console.log(\"Choosing random move\")\n        let randomIdx = Math.floor(Math.random() * possibleMoves.length)\n        move = possibleMoves[randomIdx]\n    }\n\n    var from = move.from;\n    var to = move.to;\n\n    console.log('' + from + ':' + to);\n    current = move\n    store.dispatch(positionChangedAction(current))\n\n};\n\nPControls.init('game-select')\nPGNView.init('pgndisplay', store)\nFen.init('fen', store)\nBoard.init('dirty', computeNewPosition, store)\n\nstore.subscribe(() => {\n    triggerEngineMove()\n})\n\n\n","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}