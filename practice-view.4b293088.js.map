{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/anim.ts","src/api.ts","src/board.ts","src/chessground.ts","src/config.ts","src/drag.ts","src/draw.ts","src/drop.ts","src/events.ts","src/explosion.ts","src/fen.ts","src/index.js","src/premove.ts","src/render.ts","src/state.ts","src/svg.ts","src/types.ts","src/util.ts","src/wrap.ts","node_modules/pegjs/lib/utils/arrays.js","node_modules/pegjs/lib/utils/objects.js","node_modules/pegjs/lib/utils/classes.js","node_modules/pegjs/lib/grammar-error.js","node_modules/pegjs/lib/parser.js","node_modules/pegjs/lib/compiler/visitor.js","node_modules/pegjs/lib/compiler/asts.js","node_modules/pegjs/lib/compiler/passes/report-undefined-rules.js","node_modules/pegjs/lib/compiler/passes/report-duplicate-rules.js","node_modules/pegjs/lib/compiler/passes/report-duplicate-labels.js","node_modules/pegjs/lib/compiler/passes/report-infinite-recursion.js","node_modules/pegjs/lib/compiler/passes/report-infinite-repetition.js","node_modules/pegjs/lib/compiler/passes/remove-proxy-rules.js","node_modules/pegjs/lib/compiler/opcodes.js","node_modules/pegjs/lib/compiler/js.js","node_modules/pegjs/lib/compiler/passes/generate-bytecode.js","node_modules/pegjs/lib/compiler/passes/generate-js.js","node_modules/pegjs/lib/compiler/index.js","node_modules/pegjs/lib/peg.js","node_modules/chess.js/chess.js","utils/pgnutils.js","actions/game-actions.js","components/chessboard.js","games.js","utils/documentutils.js","node_modules/symbol-observable/es/ponyfill.js","node_modules/symbol-observable/es/index.js","node_modules/redux/es/redux.js","store/index.js","utils/showpgn.js","components/practice-controls.js","components/pgnviewer.js","components/fen.js","utils/gameutils.js","views/practice-view.js"],"names":["arrays","range","start","stop","length","i","j","result","Array","find","array","valueOrPredicate","indexOf","contains","each","iterator","map","pluck","key","e","every","predicate","some","module","exports","objects","keys","object","hasOwnProperty","push","values","clone","defaults","classes","subclass","child","parent","ctor","constructor","prototype","require","GrammarError","message","location","name","Error","captureStackTrace","peg$subclass","peg$SyntaxError","expected","found","peg$parse","input","options","peg$FAILED","peg$result","peg$startRuleFunctions","Grammar","peg$parseGrammar","peg$startRuleFunction","peg$c0","initializer","rules","type","optional","index","extractList","extractOptional","peg$c1","code","peg$c2","peg$c3","peg$literalExpectation","peg$c4","displayName","expression","peg$c5","peg$c6","peg$c7","head","tail","alternatives","buildList","peg$c8","peg$c9","elements","peg$c10","peg$c11","peg$c12","label","peg$c13","operator","OPS_TO_PREFIXED_TYPES","peg$c14","peg$c15","peg$c16","peg$c17","peg$c18","peg$c19","peg$c20","OPS_TO_SUFFIXED_TYPES","peg$c21","peg$c22","peg$c23","peg$c24","peg$c25","peg$c26","peg$c27","peg$c28","peg$c29","peg$c30","peg$c31","peg$c32","peg$c33","OPS_TO_SEMANTIC_PREDICATE_TYPES","peg$c34","peg$c35","peg$otherExpectation","peg$c36","peg$c37","peg$c38","peg$c39","peg$c40","peg$c41","peg$c42","peg$c43","peg$c44","peg$c45","peg$c46","peg$c47","peg$c48","peg$c49","peg$classExpectation","peg$c50","peg$c51","peg$c52","peg$c53","peg$c54","peg$c55","peg$c56","peg$c57","peg$c58","peg$c59","peg$c60","peg$c61","peg$c62","peg$c63","peg$c64","peg$c65","peg$c66","peg$c67","peg$c68","peg$c69","peg$c70","join","peg$c71","peg$c72","peg$c73","peg$c74","peg$c75","sequence","peg$c76","peg$c77","peg$c78","peg$c79","peg$c80","peg$c81","peg$c82","peg$c83","value","ignoreCase","peg$c84","peg$c85","peg$c86","peg$c87","chars","peg$c88","peg$c89","peg$c90","text","peg$c91","peg$c92","peg$c93","peg$c94","peg$c95","peg$c96","peg$c97","peg$c98","inverted","parts","filterEmptyStrings","peg$c99","peg$c100","peg$c101","begin","end","charCodeAt","error","peg$buildSimpleError","peg$computeLocation","peg$savedPos","peg$currPos","peg$c102","peg$c103","peg$c104","peg$c105","peg$c106","peg$c107","peg$c108","peg$c109","peg$c110","peg$c111","peg$c112","peg$c113","peg$c114","peg$c115","peg$c116","peg$c117","peg$c118","peg$c119","peg$c120","peg$c121","peg$c122","peg$c123","peg$c124","peg$c125","peg$c126","peg$c127","peg$c128","digits","String","fromCharCode","parseInt","peg$c129","peg$c130","peg$c131","peg$c132","peg$c133","peg$c134","peg$c135","peg$c136","peg$c137","peg$c138","peg$c139","peg$c140","peg$c141","peg$c142","peg$c143","peg$c144","peg$c145","peg$c146","peg$c147","peg$c148","peg$c149","peg$c150","peg$c151","peg$c152","peg$c153","peg$c154","peg$c155","peg$c156","peg$c157","peg$c158","peg$c159","peg$c160","peg$c161","peg$c162","peg$c163","peg$c164","peg$c165","peg$c166","peg$c167","peg$c168","peg$c169","peg$c170","peg$c171","peg$c172","peg$c173","peg$c174","peg$c175","peg$c176","peg$c177","peg$c178","peg$c179","peg$c180","peg$c181","peg$c182","peg$c183","peg$c184","peg$c185","peg$c186","peg$c187","peg$c188","peg$c189","peg$c190","peg$c191","peg$c192","peg$c193","peg$c194","peg$c195","peg$c196","peg$c197","peg$c198","peg$c199","peg$c200","peg$c201","peg$c202","peg$c203","peg$c204","peg$c205","peg$c206","peg$c207","peg$c208","peg$c209","peg$c210","peg$c211","peg$c212","peg$c213","peg$c214","peg$c215","peg$c216","peg$c217","peg$c218","peg$c219","peg$c220","peg$c221","peg$c222","peg$c223","peg$c224","peg$c225","peg$c226","peg$c227","peg$c228","peg$c229","peg$c230","peg$c231","peg$c232","peg$c233","peg$c234","peg$c235","peg$c236","peg$c237","peg$c238","peg$c239","peg$posDetailsCache","line","column","peg$maxFailPos","peg$maxFailExpected","peg$silentFails","startRule","substring","description","peg$computePosDetails","pos","details","p","startPos","endPos","startPosDetails","endPosDetails","offset","peg$fail","peg$buildStructuredError","buildMessage","s0","s2","s3","s4","s5","s6","s1","peg$parse__","peg$parseInitializer","peg$parseCodeBlock","peg$parseEOS","peg$parseRule","peg$parseIdentifierName","peg$parseStringLiteral","peg$parseChoiceExpression","s7","peg$parseActionExpression","peg$parseSequenceExpression","peg$parseLabeledExpression","peg$parseIdentifier","peg$parseReservedWord","peg$parseKeyword","peg$parseBreakToken","substr","peg$parseIdentifierPart","peg$parseCaseToken","peg$parseCatchToken","peg$parseContinueToken","peg$parseDebuggerToken","peg$parseDefaultToken","peg$parseDeleteToken","peg$parseDoToken","peg$parseElseToken","peg$parseFinallyToken","peg$parseForToken","peg$parseFunctionToken","peg$parseIfToken","peg$parseInstanceofToken","peg$parseInToken","peg$parseNewToken","peg$parseReturnToken","peg$parseSwitchToken","peg$parseThisToken","peg$parseThrowToken","peg$parseTryToken","peg$parseTypeofToken","peg$parseVarToken","peg$parseVoidToken","peg$parseWhileToken","peg$parseWithToken","peg$parseFutureReservedWord","peg$parseClassToken","peg$parseConstToken","peg$parseEnumToken","peg$parseExportToken","peg$parseExtendsToken","peg$parseImportToken","peg$parseSuperToken","peg$parseNullToken","peg$parseBooleanLiteral","peg$parseTrueToken","peg$parseFalseToken","peg$parsePrefixedExpression","peg$parsePrefixedOperator","peg$parseSuffixedExpression","peg$parsePrimaryExpression","peg$parseSuffixedOperator","peg$parseLiteralMatcher","peg$parseCharacterClassMatcher","peg$parseClassCharacterRange","peg$parseClassCharacter","peg$parseAnyMatcher","peg$parseRuleReferenceExpression","peg$parseSemanticPredicateExpression","peg$parseSemanticPredicateOperator","peg$parseSourceCharacter","charAt","peg$parseWhiteSpace","peg$parseZs","test","peg$parseLineTerminator","peg$parseLineTerminatorSequence","peg$parseComment","peg$parseMultiLineComment","peg$parseSingleLineComment","peg$parseMultiLineCommentNoLineTerminator","peg$parseIdentifierStart","peg$parseUnicodeLetter","peg$parseLu","peg$parseLl","peg$parseLt","peg$parseLm","peg$parseLo","peg$parseNl","peg$parseUnicodeEscapeSequence","peg$parseUnicodeCombiningMark","peg$parseMn","peg$parseMc","peg$parseNd","peg$parsePc","peg$parseDoubleStringCharacter","peg$parseSingleStringCharacter","peg$parseEscapeSequence","peg$parseLineContinuation","peg$parseCharacterEscapeSequence","peg$parseSingleEscapeCharacter","peg$parseNonEscapeCharacter","peg$parseEscapeCharacter","peg$parseDecimalDigit","peg$parseHexEscapeSequence","peg$parseHexDigit","peg$parseCode","peg$parse_","peg$parseEOF","list","concat","DESCRIBE_EXPECTATION_FNS","literal","expectation","literalEscape","escapedParts","classEscape","any","other","hex","ch","toString","toUpperCase","s","replace","describeExpected","descriptions","sort","slice","describeFound","SyntaxError","parse","visitor","build","functions","visit","node","apply","arguments","visitNop","visitExpression","extraArgs","call","visitChildren","property","DEFAULT_FUNCTIONS","grammar","rule","named","choice","action","labeled","simple_and","simple_not","zero_or_more","one_or_more","group","semantic_and","semantic_not","rule_ref","asts","findRule","ast","r","indexOfRule","alwaysConsumesOnSuccess","consumesTrue","consumesFalse","consumesExpression","consumes","reportUndefinedRules","check","reportDuplicateRules","reportDuplicateLabels","checkExpressionWithClonedEnv","env","alternative","reportInfiniteRecursion","visitedRules","pop","element","reportInfiniteRepetition","removeProxyRules","indices","isProxyRule","replaceRuleRefs","from","to","allowedStartRules","reverse","splice","opcodes","PUSH","PUSH_UNDEFINED","PUSH_NULL","PUSH_FAILED","PUSH_EMPTY_ARRAY","PUSH_CURR_POS","POP","POP_CURR_POS","POP_N","NIP","APPEND","WRAP","TEXT","IF","IF_ERROR","IF_NOT_ERROR","WHILE_NOT_ERROR","MATCH_ANY","MATCH_STRING","MATCH_STRING_IC","MATCH_REGEXP","ACCEPT_N","ACCEPT_STRING","FAIL","LOAD_SAVED_POS","UPDATE_SAVED_POS","CALL","RULE","SILENT_FAILS_ON","SILENT_FAILS_OFF","js","stringEscape","regexpClassEscape","op","generateBytecode","consts","addConst","addFunctionConst","params","buildSequence","buildCondition","condCode","thenCode","elseCode","buildCall","functionIndex","delta","sp","buildSimplePredicate","negative","context","generate","buildSemanticPredicate","buildAppendLoop","expressionCode","buildLoop","bodyCode","bytecode","nameIndex","buildAlternativesCode","emitCall","buildElementsCode","processedCount","stringIndex","expectedIndex","toLowerCase","regexp","regexpIndex","part","generateJS","indent2","indent6","indent10","generateTables","optimize","b","c","generateRuleHeader","ruleNameCode","ruleIndexCode","trace","cache","generateRuleFooter","resultCode","generateInterpreter","cond","generateCondition","argsLength","baseLength","thenLengthCode","elseLengthCode","generateRuleFunction","stack","maxSp","exprCode","n","top","compile","bc","ip","compileCondition","argCount","thenSp","elseSp","thenLength","elseLength","baseSp","compileLoop","bodySp","bodyLength","compileCall","paramsLength","eval","generateToplevel","startRuleIndices","startRuleIndex","startRuleFunctions","startRuleFunction","ruleNames","generateWrapper","toplevelCode","generateGeneratedByComment","generateParserObject","generators","bare","commonjs","dependencyVars","dependencies","requires","variable","amd","dependencyIds","id","globals","exportVar","umd","format","compiler","passes","transform","stage","output","peg","VERSION","parser","plugins","config","convertPasses","converted","use","parsepgn","pgn","r1","parseOneGame","console","log","baseGame","game","reset","root","fen","children","played","Set","move_number","moves","convert","cmove","movestr","move","addNode","comment","nags","shift","ravs","forEach","rav","load","san","moveNum","color","addCommentAndNags","deleteNode","promoteNode","unshift","updatePlayedStatus","allChildrenPlayed","add","has","parseMultiple","multipgn","games","newRoot","mergeTrees","node1","node2","child2","matching","filter","findNext","current","GAME_CHANGED","gameChangedAction","engineColor","POSITION_CHANGED","positionChangedAction","PLAYER_MADE_MOVE","playerMadeMoveAction","newCurrent","HIDE_PGN_CHANGED","hidePgnChangedAction","checked","AUTOPLAY_CHANGED","autoPlayChangedAction","HINT_CLICKED","hintClickedAction","BOARD_FLIPPED","boardFlippedAction","init","boardId","nextFunc","store","ground","resizable","events","orig","dest","capturedPiece","onMove","resizeBoard","document","getElementById","subscribe","getState","hint","orientation","window","setTimeout","set","shapes","getHintShapes","setShapes","arr","brush","next","dispatch","boardElem","maxw","parentNode","getBoundingClientRect","width","w8","style","height","test_game","budapest_gambit","scotch_gambit","gamemap","configureButton","onClick","addEventListener","copyToClipboard","navigator","clipboard","writeText","then","err","symbolObservablePonyfill","Symbol","observable","self","global","Function","randomString","Math","random","split","ActionTypes","INIT","REPLACE","PROBE_UNKNOWN_ACTION","isPlainObject","obj","Object","proto","getPrototypeOf","createStore","reducer","preloadedState","enhancer","_ref2","undefined","currentReducer","currentState","currentListeners","nextListeners","isDispatching","ensureCanMutateNextListeners","listener","isSubscribed","listeners","replaceReducer","nextReducer","$$observable","_ref","outerSubscribe","observer","TypeError","observeState","unsubscribe","warning","getUndefinedStateErrorMessage","actionType","getUnexpectedStateShapeWarningMessage","inputState","reducers","unexpectedKeyCache","reducerKeys","argumentName","match","unexpectedKeys","assertReducerShape","combineReducers","finalReducers","finalReducerKeys","shapeAssertionError","state","warningMessage","hasChanged","nextState","_i","_key","previousStateForKey","nextStateForKey","errorMessage","bindActionCreator","actionCreator","bindActionCreators","actionCreators","boundActionCreators","_defineProperty","defineProperty","enumerable","configurable","writable","ownKeys","enumerableOnly","getOwnPropertySymbols","sym","getOwnPropertyDescriptor","_objectSpread2","target","source","getOwnPropertyDescriptors","defineProperties","compose","_len","funcs","arg","reduce","a","applyMiddleware","middlewares","_dispatch","middlewareAPI","chain","middleware","isCrushed","initialStatePractice","currentRoot","hidePGN","autoPlay","emptyTree","initialStateEdit","practiceReducer","editReducer","practiceStore","editStore","pgnBuffer","displayFormattedPgn","pgndiv","setCurrent","innerHTML","appendElements","currentDiv","nodeId","scrollTop","offsetTop","parentElem","varDepth","writeNode","isCurrent","appendChild","makeNodeDiv","varDiv","makeVarDiv","addTextChild","div","createElement","classList","createTextNode","firstInVariation","firstAfterVariation","onclick","ev","parentDiv","cdiv","getPGNText","writePGN","currentIndent","writeNodeFirst","indent","selectDivId","configureSelect","configureButtons","divId","seldiv","sel","option","event","onSelect","file","fetch","response","pgnDiv","fendiv","isEngineMove","computeNewPosition","localCurrent","triggerEngineMove","makeNextMove","possibleMoves","idx","floor","PControls","PGNView","Fen","Board"],"mappings":"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AU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,CAAC,IAAU,KAAW,IAAU,IAAU,IAAU,CAAC,IAAU,KAAW,IAAU,IAAU,CAAC,IAAU,KAAW,IAAU,IAAU,IAAU,IAAU,IAAU,CAAC,IAAU,KAAW,IAAU,IAAU,IAAU,IAAU,CAAC,IAAU,KAAW,CAAC,IAAU,KAAW,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,CAAC,IAAU,KAAW,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,CAAC,IAAU,KAAW,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,CAAC,IAAU,KAAW,IAAU,CAAC,IAAU,KAAW,IAAU,IAAU,IAAU,IAAU,IAAU,CAAC,IAAU,KAAW,CAAC,IAAU,KAAW,IAAU,IAAU,IAAU,CAAC,IAAU,KAAW,IAAU,CAAC,IAAU,KAAW,CAAC,IAAU,KAAW,CAAC,IAAU,KAAW,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,CAAC,IAAU,KAAW,IAAU,IAAU,CAAC,IAAU,KAAW,CAAC,IAAU,KAAW,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,CAAC,IAAU,KAAW,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,CAAC,IAAU,KAAW,CAAC,IAAU,KAAW,CAAC,IAAU,KAAW,CAAC,IAAU,KAAW,CAAC,IAAU,KAAW,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,CAAC,IAAU,KAAW,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,CAAC,IAAU,KAAW,CAAC,IAAU,KAAW,CAAC,IAAU,KAAW,CAAC,IAAU,KAAW,CAAC,IAAU,KAAW,CAAC,IAAU,KAAW,CAAC,IAAU,KAAW,CAAC,IAAU,KAAW,CAAC,IAAU,KAAW,CAAC,IAAU,KAAW,CAAC,IAAU,KAAW,CAAC,IAAU,KAAW,CAAC,IAAU,KAAW,IAAU,CAAC,IAAU,KAAW,CAAC,IAAU,KAAW,CAAC,IAAU,KAAW,CAAC,IAAU,KAAW,CAAC,IAAU,KAAW,CAAC,IAAU,KAAW,CAAC,IAAU,KAAW,IAAU,CAAC,IAAU,KAAW,IAAU,IAAU,IAAU,IAAU,CAAC,IAAU,KAAW,CA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IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,CAAC,IAAU,KAAW,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,CAAC,IAAU,KAAW,CAAC,IAAU,KAAW,IAAU,CAAC,IAAU,KAAW,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,CAAC,IAAU,KAAW,IAAU,CAAC,IAAU,KAAW,CAAC,IAAU,KAAW,CAAC,IAAU,KAAW,IAAU,CAAC,IAAU,KAAW,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,CAAC,IAAU,KAAW,CAAC,IAAU,KAAW,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,CAAC,IAAU,KAAW,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,CAAC,IAAU,KAAW,CAAC,IAAU,KAAW,IAAU,IAAU,CAAC,IAAU,KAAW,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,CAAC,IAAU,KAAW,CAAC,IAAU,KAAW,CAAC,IAAU,KAAW,CAAC,IAAU,KAAW,CAAC,IAAU,KAAW,IAAU,IAAU,IAAU,IAAU,CAAC,IAAU,KAAW,CAAC,IAAU,KAAW,CAAC,IAAU,KAAW,CAAC,IAAU,KAAW,CAAC,IAAU,KAAW,CAAC,IAAU,KAAW,IAAU,IAAU,CAAC,IAAU,KAAW,CAAC,IAAU,KAAW,IAAU,CAAC,IAAU,KAAW,IAAU,IAAU,IAAU,CAAC,IAAU,KAAW,CAAC,IAAU,KAAW,CAAC,IAAU,KAAW,IAAU,IAAU,CAAC,IAAU,KAAW,IAAU,CAAC,IAAU,KAAW,IAAU,IAAU,IAAU,CAAC,IAAU,KAAW,IAAU,IAAU,CAAC,IAAU,KAAW,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,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A,0DACA,MACA,GACA,gCACA,eACA,sCA3DS,mCAAA,kCAAA,kCAAA,kCAAA,kCAAA,yFAkET,4FACA,MACA,GACA,8BACA,eACA,sCAvES,kCAAA,kCAAA,iCAAA,kCAAA,kCAAA,kCAAA,kCAAA,yFAgFT,4FACA,MACA,GACA,gDACA,sEACA,MACA,GACA,0CACA,qDACA,gBACA,GACA,8CACA,4DACA,QACA,GACA,2BACA,GACA,qCACA,2DACA,yDACA,+CACA,iBACA,YACA,UACA,iCACA,QACA,GACA,qCACA,gBACA,kCACA,GACA,gBACA,6DACA,GACA,iBACA,sDACA,sBACA,qDACA,QACA,MACA,GACA,oCACA,4EACA,MACA,GACA,kGACA,KACA,IACA6H,KAAK,OAEHrG,QAAQ6kB,OACVrc,EAAMhK,KAAK,CACT,iCACA,0BACA,IACA,GACA,wDACA,qBACA,GACA,0BACA,mCACA,6BACA,GACA,mCACA,6BACA,WACA,GACA,wBACA,QACA,GACA,qCACA,6DACA,QACA,GACA,yCAvBS,qBAyBT,8EACA,8EACA,wCACA,0DACA,WACA,QACA,MACA,GACA,0BACA,yBACA,oBACA,4BACA,eACA,GACA,yBACA,4BACA,oBACA,eACA,GACA,wBACA,4BACA,oBACA,eACA,GACA,eACA,oEACA,MACA,KACA,IACA6H,KAAK,OAGTmC,EAAMhK,KAAK,CACT,uCACA,iDACA,GACA,yBACA,IACA6H,KAAK,OAEkB,SAArBrG,QAAQukB,UACVwC,EAAmB,KACApqB,OAAOgB,IACLqC,QAAQyf,kBACR,SAASzB,GAAYA,OAAAA,EAAI,KAAOH,KAAKI,YAAYF,IAAKC,KACtD3X,KAAK,MACP,KACnB2gB,EAAiBnJ,KAAKI,YAAYF,IAAK/d,QAAQyf,kBAAkB,IAEjEjX,EAAMhK,KAAK,CACT,gCAAkCuoB,EAAmB,IACrD,gCAAkCC,EAAiB,KACnD3gB,KAAK,SAEP4gB,EAAqB,KACFtqB,OAAOgB,IACLqC,QAAQyf,kBACR,SAASzB,GAAYA,OAAAA,EAAI,cAAgBA,IACzC3X,KAAK,MACP,KACnB6gB,EAAoB,YAAclnB,QAAQyf,kBAAkB,GAE5DjX,EAAMhK,KAAK,CACT,kCAAoCyoB,EAAqB,IACzD,kCAAoCC,EAAoB,KACxD7gB,KAAK,QAGTmC,EAAMhK,KAAK,IAEXgK,EAAMhK,KAAK4lB,QAAQE,mBAEnB9b,EAAMhK,KAAK,CACT,GACA,kCACA,kCACA,yDACA,kCACA,mCACA,kCAPS,IAST6H,KAAK,OAEHrG,QAAQ8kB,OACVtc,EAAMhK,KAAK,CACT,+BACA,IACA6H,KAAK,OAGLrG,QAAQ6kB,QACe,SAArB7kB,QAAQukB,WACV4C,EAAY,IACAxqB,OAAOgB,IACLogB,IAAItd,MACJ,SAASud,GAAY,MAAA,IAAM2D,GAAGC,aAAa5D,EAAEze,MAAQ,MACrD8G,KAAK,MACP,IAEZmC,EAAMhK,KAAK,CACT,yBAA2B2oB,EAAY,IACvC,IACA9gB,KAAK,QAGTmC,EAAMhK,KAAK,CACT,qFACA,IACA6H,KAAK,QAGTmC,EAAMhK,KAAK,CACT,oBACA,IACA6H,KAAK,OAEkB,SAArBrG,QAAQukB,SACV/b,EAAMhK,KAAK,CACT,kCACA,0DACA,4FACA,QACA,GACA,oEACA,OACA6H,KAAK,OAEPmC,EAAMhK,KAAK,CACT,kCACA,4DACA,4FACA,QACA,GACA,yEACA,OACA6H,KAAK,OAGTmC,EAAMhK,KAAK,CACT,GACA,sBACA,yDACA,MACA,GACA,0BACA,6DACA,MACA,GACA,+CACA,iGACA,GACA,sCACA,6CACA,oDACA,iBACA,SACA,MACA,GACA,wCACA,iGACA,GACA,qDACA,MACA,GACA,wDACA,sEACA,MACA,GACA,iEACA,0FACA,MACA,GACA,oCACA,8BACA,MACA,GACA,oCACA,8BACA,MACA,GACA,iDACA,0DACA,MACA,GACA,0CACA,iDACA,GACA,qBACA,wBACA,eACA,qBACA,0CACA,eACA,UACA,GACA,0CACA,oBACA,gCACA,iCACA,WACA,GACA,0BACA,4CACA,4BACA,gCACA,mBACA,8BACA,YACA,GACA,eACA,UACA,GACA,4CACA,wBACA,QACA,MACA,GACA,qDACA,6DACA,2DACA,GACA,eACA,iBACA,4BACA,wCACA,yCACA,WACA,eACA,0BACA,sCACA,uCACA,UACA,SACA,MACA,GACA,kCACA,oDACA,GACA,0CACA,sCACA,kCACA,QACA,GACA,0CACA,MACA,GACA,uDACA,iEACA,MACA,GACA,mEACA,kCACA,uDACA,kBACA,eACA,iBACA,SACA,MACA,IACA6H,KAAK,OAEkB,SAArBrG,QAAQukB,UACV/b,EAAMhK,KAAK2lB,QAAQc,wBACnBzc,EAAMhK,KAAK,KAEX7B,OAAOc,KAAKsgB,IAAItd,MAAO,SAASuc,GAC9BxU,EAAMhK,KAAK2lB,QAAQqB,qBAAqBxI,KACxCxU,EAAMhK,KAAK,MAIXuf,IAAIvd,cACNgI,EAAMhK,KAAK2lB,QAAQpG,IAAIvd,YAAYQ,OACnCwH,EAAMhK,KAAK,KAGY,SAArBwB,QAAQukB,SACV/b,EAAMhK,KAAK,qDAEXgK,EAAMhK,KAAK,2CAGbgK,EAAMhK,KAAK,CACT,GACA,qEACA,yBACA,aACA,qEACA,wCACA,QACA,GACA,sCACA,6BACA,6EACA,sCACA,oEACA,gEACA,SACA,MACA,KACA6H,KAAK,OAEAmC,EAAMnC,KAAK,MAGX+gB,SAAAA,gBAAgBC,GACdC,SAAAA,IACA,MAAA,CACL,KACA,iCACA,KACA,uBACA,OACAjhB,KAAK,MAGAkhB,SAAAA,IACAvnB,OAAAA,QAAQ6kB,MACX,CACE,IACA,oCACA,sCACA,6BACA,KACAxe,KAAK,MACP,CACE,IACA,kCACA,2BACA,KACAA,KAAK,MA0INmhB,MAvIU,CACfC,KAAM,WACG,MAAA,CACLH,IACA,gBACA,kBACA,GACGnD,QAAQkD,GACX,GACGlD,QAAQ,UAAYoD,IAAyB,KAChD,QACAlhB,KAAK,OAGTqhB,SAAU,WACJlf,IAAAA,EAAiB,GACjBmf,EAAiBvpB,QAAQC,KAAK2B,QAAQ4nB,cACtCC,EAAiBlrB,OAAOgB,IACtBgqB,EACA,SAASG,GACAA,OAAAA,EACH,eACAnG,GAAGC,aAAa5hB,QAAQ4nB,aAAaE,IACrC,OAuBLtf,OAnBPA,EA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AA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EACA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,EAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,EACA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EACA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EACA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,IAGA,EAAA,CACA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EACA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EACA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EA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","file":"practice-view.4b293088.js","sourceRoot":"..","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","import { State } from './state'\nimport * as util from './util'\nimport * as cg from './types'\n\nexport type Mutation<A> = (state: State) => A;\n\n// 0,1 animation goal\n// 2,3 animation current status\nexport type AnimVector = cg.NumberQuad\n\nexport interface AnimVectors {\n  [key: string]: AnimVector\n}\n\nexport interface AnimFadings {\n  [key: string]: cg.Piece\n}\n\nexport interface AnimPlan {\n  anims: AnimVectors;\n  fadings: AnimFadings;\n}\n\nexport interface AnimCurrent {\n  start: DOMHighResTimeStamp;\n  frequency: cg.KHz;\n  plan: AnimPlan;\n}\n\nexport function anim<A>(mutation: Mutation<A>, state: State): A {\n  return state.animation.enabled ? animate(mutation, state) : render(mutation, state);\n}\n\nexport function render<A>(mutation: Mutation<A>, state: State): A {\n  const result = mutation(state);\n  state.dom.redraw();\n  return result;\n}\n\ninterface AnimPiece {\n  key: cg.Key;\n  pos: cg.Pos;\n  piece: cg.Piece;\n}\ninterface AnimPieces {\n  [key: string]: AnimPiece\n}\n\nfunction makePiece(key: cg.Key, piece: cg.Piece): AnimPiece {\n  return {\n    key: key,\n    pos: util.key2pos(key),\n    piece: piece\n  };\n}\n\nfunction closer(piece: AnimPiece, pieces: AnimPiece[]): AnimPiece {\n  return pieces.sort((p1, p2) => {\n    return util.distanceSq(piece.pos, p1.pos) - util.distanceSq(piece.pos, p2.pos);\n  })[0];\n}\n\nfunction computePlan(prevPieces: cg.Pieces, current: State): AnimPlan {\n  const anims: AnimVectors = {},\n  animedOrigs: cg.Key[] = [],\n  fadings: AnimFadings = {},\n  missings: AnimPiece[] = [],\n  news: AnimPiece[] = [],\n  prePieces: AnimPieces = {};\n  let curP: cg.Piece | undefined, preP: AnimPiece | undefined, i: any, vector: cg.NumberPair;\n  for (i in prevPieces) {\n    prePieces[i] = makePiece(i as cg.Key, prevPieces[i]!);\n  }\n  for (const key of util.allKeys) {\n    curP = current.pieces[key];\n    preP = prePieces[key];\n    if (curP) {\n      if (preP) {\n        if (!util.samePiece(curP, preP.piece)) {\n          missings.push(preP);\n          news.push(makePiece(key, curP));\n        }\n      } else news.push(makePiece(key, curP));\n    } else if (preP) missings.push(preP);\n  }\n  news.forEach(newP => {\n    preP = closer(newP, missings.filter(p => util.samePiece(newP.piece, p.piece)));\n    if (preP) {\n      vector = [preP.pos[0] - newP.pos[0], preP.pos[1] - newP.pos[1]];\n      anims[newP.key] = vector.concat(vector) as AnimVector;\n      animedOrigs.push(preP.key);\n    }\n  });\n  missings.forEach(p => {\n    if (!util.containsX(animedOrigs, p.key)) fadings[p.key] = p.piece;\n  });\n\n  return {\n    anims: anims,\n    fadings: fadings\n  };\n}\n\nfunction step(state: State, now: DOMHighResTimeStamp): void {\n  const cur = state.animation.current;\n  if (cur === undefined) { // animation was canceled :(\n    if (!state.dom.destroyed) state.dom.redrawNow();\n    return;\n  }\n  const rest = 1 - (now - cur.start) * cur.frequency;\n  if (rest <= 0) {\n    state.animation.current = undefined;\n    state.dom.redrawNow();\n  } else {\n    const ease = easing(rest);\n    for (let i in cur.plan.anims) {\n      const cfg = cur.plan.anims[i];\n      cfg[2] = cfg[0] * ease;\n      cfg[3] = cfg[1] * ease;\n    }\n    state.dom.redrawNow(true); // optimisation: don't render SVG changes during animations\n    requestAnimationFrame((now = performance.now()) => step(state, now));\n  }\n}\n\nfunction animate<A>(mutation: Mutation<A>, state: State): A {\n  // clone state before mutating it\n  const prevPieces: cg.Pieces = {...state.pieces};\n\n  const result = mutation(state);\n  const plan = computePlan(prevPieces, state);\n  if (!isObjectEmpty(plan.anims) || !isObjectEmpty(plan.fadings)) {\n    const alreadyRunning = state.animation.current && state.animation.current.start;\n    state.animation.current = {\n      start: performance.now(),\n      frequency: 1 / state.animation.duration,\n      plan: plan\n    };\n    if (!alreadyRunning) step(state, performance.now());\n  } else {\n    // don't animate, just render right away\n    state.dom.redraw();\n  }\n  return result;\n}\n\nfunction isObjectEmpty(o: any): boolean {\n  for (let _ in o) return false;\n  return true;\n}\n// https://gist.github.com/gre/1650294\nfunction easing(t: number): number {\n  return t < 0.5 ? 4 * t * t * t : (t - 1) * (2 * t - 2) * (2 * t - 2) + 1;\n}\n","import { State } from './state'\nimport * as board from './board'\nimport { write as fenWrite } from './fen'\nimport { Config, configure } from './config'\nimport { anim, render } from './anim'\nimport { cancel as dragCancel, dragNewPiece } from './drag'\nimport { DrawShape } from './draw'\nimport explosion from './explosion'\nimport * as cg from './types'\n\nexport interface Api {\n\n  // reconfigure the instance. Accepts all config options, except for viewOnly & drawable.visible.\n  // board will be animated accordingly, if animations are enabled.\n  set(config: Config): void;\n\n  // read chessground state; write at your own risks.\n  state: State;\n\n  // get the position as a FEN string (only contains pieces, no flags)\n  // e.g. rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR\n  getFen(): cg.FEN;\n\n  // change the view angle\n  toggleOrientation(): void;\n\n  // perform a move programmatically\n  move(orig: cg.Key, dest: cg.Key): void;\n\n  // add and/or remove arbitrary pieces on the board\n  setPieces(pieces: cg.PiecesDiff): void;\n\n  // click a square programmatically\n  selectSquare(key: cg.Key | null, force?: boolean): void;\n\n  // put a new piece on the board\n  newPiece(piece: cg.Piece, key: cg.Key): void;\n\n  // play the current premove, if any; returns true if premove was played\n  playPremove(): boolean;\n\n  // cancel the current premove, if any\n  cancelPremove(): void;\n\n  // play the current predrop, if any; returns true if premove was played\n  playPredrop(validate: (drop: cg.Drop) => boolean): boolean;\n\n  // cancel the current predrop, if any\n  cancelPredrop(): void;\n\n  // cancel the current move being made\n  cancelMove(): void;\n\n  // cancel current move and prevent further ones\n  stop(): void;\n\n  // make squares explode (atomic chess)\n  explode(keys: cg.Key[]): void;\n\n  // programmatically draw user shapes\n  setShapes(shapes: DrawShape[]): void;\n\n  // programmatically draw auto shapes\n  setAutoShapes(shapes: DrawShape[]): void;\n\n  // square name at this DOM position (like \"e4\")\n  getKeyAtDomPos(pos: cg.NumberPair): cg.Key | undefined;\n\n  // only useful when CSS changes the board width/height ratio (for 3D)\n  redrawAll: cg.Redraw;\n\n  // for crazyhouse and board editors\n  dragNewPiece(piece: cg.Piece, event: cg.MouchEvent, force?: boolean): void;\n\n  // unbinds all events\n  // (important for document-wide events like scroll and mousemove)\n  destroy: cg.Unbind\n}\n\n// see API types and documentations in dts/api.d.ts\nexport function start(state: State, redrawAll: cg.Redraw): Api {\n\n  function toggleOrientation() {\n    board.toggleOrientation(state);\n    redrawAll();\n  };\n\n  return {\n\n    set(config) {\n      if (config.orientation && config.orientation !== state.orientation) toggleOrientation();\n      (config.fen ? anim : render)(state => configure(state, config), state);\n    },\n\n    state,\n\n    getFen: () => fenWrite(state.pieces),\n\n    toggleOrientation,\n\n    setPieces(pieces) {\n      anim(state => board.setPieces(state, pieces), state);\n    },\n\n    selectSquare(key, force) {\n      if (key) anim(state => board.selectSquare(state, key, force), state);\n      else if (state.selected) {\n        board.unselect(state);\n        state.dom.redraw();\n      }\n    },\n\n    move(orig, dest) {\n      anim(state => board.baseMove(state, orig, dest), state);\n    },\n\n    newPiece(piece, key) {\n      anim(state => board.baseNewPiece(state, piece, key), state);\n    },\n\n    playPremove() {\n      if (state.premovable.current) {\n        if (anim(board.playPremove, state)) return true;\n        // if the premove couldn't be played, redraw to clear it up\n        state.dom.redraw();\n      }\n      return false;\n    },\n\n    playPredrop(validate) {\n      if (state.predroppable.current) {\n        const result = board.playPredrop(state, validate);\n        state.dom.redraw();\n        return result;\n      }\n      return false;\n    },\n\n    cancelPremove() {\n      render(board.unsetPremove, state);\n    },\n\n    cancelPredrop() {\n      render(board.unsetPredrop, state);\n    },\n\n    cancelMove() {\n      render(state => { board.cancelMove(state); dragCancel(state); }, state);\n    },\n\n    stop() {\n      render(state => { board.stop(state); dragCancel(state); }, state);\n    },\n\n    explode(keys: cg.Key[]) {\n      explosion(state, keys);\n    },\n\n    setAutoShapes(shapes: DrawShape[]) {\n      render(state => state.drawable.autoShapes = shapes, state);\n    },\n\n    setShapes(shapes: DrawShape[]) {\n      render(state => state.drawable.shapes = shapes, state);\n    },\n\n    getKeyAtDomPos(pos) {\n      return board.getKeyAtDomPos(pos, board.whitePov(state), state.dom.bounds());\n    },\n\n    redrawAll,\n\n    dragNewPiece(piece, event, force) {\n      dragNewPiece(state, piece, event, force)\n    },\n\n    destroy() {\n      board.stop(state);\n      state.dom.unbind && state.dom.unbind();\n      state.dom.destroyed = true;\n    }\n  };\n}\n","import { State } from './state'\nimport { pos2key, key2pos, opposite, containsX } from './util'\nimport premove from './premove'\nimport * as cg from './types'\n\nexport type Callback = (...args: any[]) => void;\n\nexport function callUserFunction(f: Callback | undefined, ...args: any[]): void {\n  if (f) setTimeout(() => f(...args), 1);\n}\n\nexport function toggleOrientation(state: State): void {\n  state.orientation = opposite(state.orientation);\n  state.animation.current =\n  state.draggable.current =\n  state.selected = undefined;\n}\n\nexport function reset(state: State): void {\n  state.lastMove = undefined;\n  unselect(state);\n  unsetPremove(state);\n  unsetPredrop(state);\n}\n\nexport function setPieces(state: State, pieces: cg.PiecesDiff): void {\n  for (let key in pieces) {\n    const piece = pieces[key];\n    if (piece) state.pieces[key] = piece;\n    else delete state.pieces[key];\n  }\n}\n\nexport function setCheck(state: State, color: cg.Color | boolean): void {\n  state.check = undefined;\n  if (color === true) color = state.turnColor;\n  if (color) for (let k in state.pieces) {\n    if (state.pieces[k]!.role === 'king' && state.pieces[k]!.color === color) {\n      state.check = k as cg.Key;\n    }\n  }\n}\n\nfunction setPremove(state: State, orig: cg.Key, dest: cg.Key, meta: cg.SetPremoveMetadata): void {\n  unsetPredrop(state);\n  state.premovable.current = [orig, dest];\n  callUserFunction(state.premovable.events.set, orig, dest, meta);\n}\n\nexport function unsetPremove(state: State): void {\n  if (state.premovable.current) {\n    state.premovable.current = undefined;\n    callUserFunction(state.premovable.events.unset);\n  }\n}\n\nfunction setPredrop(state: State, role: cg.Role, key: cg.Key): void {\n  unsetPremove(state);\n  state.predroppable.current = { role, key };\n  callUserFunction(state.predroppable.events.set, role, key);\n}\n\nexport function unsetPredrop(state: State): void {\n  const pd = state.predroppable;\n  if (pd.current) {\n    pd.current = undefined;\n    callUserFunction(pd.events.unset);\n  }\n}\n\nfunction tryAutoCastle(state: State, orig: cg.Key, dest: cg.Key): boolean {\n  if (!state.autoCastle) return false;\n  const king = state.pieces[orig];\n  if (!king || king.role !== 'king') return false;\n  const origPos = key2pos(orig);\n  if (origPos[0] !== 5) return false;\n  if (origPos[1] !== 1 && origPos[1] !== 8) return false;\n  const destPos = key2pos(dest);\n  let oldRookPos, newRookPos, newKingPos;\n  if (destPos[0] === 7 || destPos[0] === 8) {\n    oldRookPos = pos2key([8, origPos[1]]);\n    newRookPos = pos2key([6, origPos[1]]);\n    newKingPos = pos2key([7, origPos[1]]);\n  } else if (destPos[0] === 3 || destPos[0] === 1) {\n    oldRookPos = pos2key([1, origPos[1]]);\n    newRookPos = pos2key([4, origPos[1]]);\n    newKingPos = pos2key([3, origPos[1]]);\n  } else return false;\n\n  const rook = state.pieces[oldRookPos];\n  if (!rook || rook.role !== 'rook') return false;\n\n  delete state.pieces[orig];\n  delete state.pieces[oldRookPos];\n\n  state.pieces[newKingPos] = king\n  state.pieces[newRookPos] = rook;\n  return true;\n}\n\nexport function baseMove(state: State, orig: cg.Key, dest: cg.Key): cg.Piece | boolean {\n  const origPiece = state.pieces[orig], destPiece = state.pieces[dest];\n  if (orig === dest || !origPiece) return false;\n  const captured = (destPiece && destPiece.color !== origPiece.color) ? destPiece : undefined;\n  if (dest == state.selected) unselect(state);\n  callUserFunction(state.events.move, orig, dest, captured);\n  if (!tryAutoCastle(state, orig, dest)) {\n    state.pieces[dest] = origPiece;\n    delete state.pieces[orig];\n  }\n  state.lastMove = [orig, dest];\n  state.check = undefined;\n  callUserFunction(state.events.change);\n  return captured || true;\n}\n\nexport function baseNewPiece(state: State, piece: cg.Piece, key: cg.Key, force?: boolean): boolean {\n  if (state.pieces[key]) {\n    if (force) delete state.pieces[key];\n    else return false;\n  }\n  callUserFunction(state.events.dropNewPiece, piece, key);\n  state.pieces[key] = piece;\n  state.lastMove = [key];\n  state.check = undefined;\n  callUserFunction(state.events.change);\n  state.movable.dests = undefined;\n  state.turnColor = opposite(state.turnColor);\n  return true;\n}\n\nfunction baseUserMove(state: State, orig: cg.Key, dest: cg.Key): cg.Piece | boolean {\n  const result = baseMove(state, orig, dest);\n  if (result) {\n    state.movable.dests = undefined;\n    state.turnColor = opposite(state.turnColor);\n    state.animation.current = undefined;\n  }\n  return result;\n}\n\nexport function userMove(state: State, orig: cg.Key, dest: cg.Key): boolean {\n  if (canMove(state, orig, dest)) {\n    const result = baseUserMove(state, orig, dest);\n    if (result) {\n      const holdTime = state.hold.stop();\n      unselect(state);\n      const metadata: cg.MoveMetadata = {\n        premove: false,\n        ctrlKey: state.stats.ctrlKey,\n        holdTime\n      };\n      if (result !== true) metadata.captured = result;\n      callUserFunction(state.movable.events.after, orig, dest, metadata);\n      return true;\n    }\n  } else if (canPremove(state, orig, dest)) {\n    setPremove(state, orig, dest, {\n      ctrlKey: state.stats.ctrlKey\n    });\n    unselect(state);\n    return true;\n  }\n  unselect(state);\n  return false;\n}\n\nexport function dropNewPiece(state: State, orig: cg.Key, dest: cg.Key, force?: boolean): void {\n  if (canDrop(state, orig, dest) || force) {\n    const piece = state.pieces[orig]!;\n    delete state.pieces[orig];\n    baseNewPiece(state, piece, dest, force);\n    callUserFunction(state.movable.events.afterNewPiece, piece.role, dest, {\n      predrop: false\n    });\n  } else if (canPredrop(state, orig, dest)) {\n    setPredrop(state, state.pieces[orig]!.role, dest);\n  } else {\n    unsetPremove(state);\n    unsetPredrop(state);\n  }\n  delete state.pieces[orig];\n  unselect(state);\n}\n\nexport function selectSquare(state: State, key: cg.Key, force?: boolean): void {\n  callUserFunction(state.events.select, key);\n  if (state.selected) {\n    if (state.selected === key && !state.draggable.enabled) {\n      unselect(state);\n      state.hold.cancel();\n      return;\n    } else if ((state.selectable.enabled || force) && state.selected !== key) {\n      if (userMove(state, state.selected, key)) {\n        state.stats.dragged = false;\n        return;\n      }\n    }\n  }\n  if (isMovable(state, key) || isPremovable(state, key)) {\n    setSelected(state, key);\n    state.hold.start();\n  }\n}\n\nexport function setSelected(state: State, key: cg.Key): void {\n  state.selected = key;\n  if (isPremovable(state, key)) {\n    state.premovable.dests = premove(state.pieces, key, state.premovable.castle);\n  }\n  else state.premovable.dests = undefined;\n}\n\nexport function unselect(state: State): void {\n  state.selected = undefined;\n  state.premovable.dests = undefined;\n  state.hold.cancel();\n}\n\nfunction isMovable(state: State, orig: cg.Key): boolean {\n  const piece = state.pieces[orig];\n  return !!piece && (\n    state.movable.color === 'both' || (\n      state.movable.color === piece.color &&\n        state.turnColor === piece.color\n    ));\n}\n\nexport function canMove(state: State, orig: cg.Key, dest: cg.Key): boolean {\n  return orig !== dest && isMovable(state, orig) && (\n    state.movable.free || (!!state.movable.dests && containsX(state.movable.dests[orig], dest))\n  );\n}\n\nfunction canDrop(state: State, orig: cg.Key, dest: cg.Key): boolean {\n  const piece = state.pieces[orig];\n  return !!piece && dest && (orig === dest || !state.pieces[dest]) && (\n    state.movable.color === 'both' || (\n      state.movable.color === piece.color &&\n        state.turnColor === piece.color\n    ));\n}\n\n\nfunction isPremovable(state: State, orig: cg.Key): boolean {\n  const piece = state.pieces[orig];\n  return !!piece && state.premovable.enabled &&\n  state.movable.color === piece.color &&\n    state.turnColor !== piece.color;\n}\n\nfunction canPremove(state: State, orig: cg.Key, dest: cg.Key): boolean {\n  return orig !== dest &&\n  isPremovable(state, orig) &&\n  containsX(premove(state.pieces, orig, state.premovable.castle), dest);\n}\n\nfunction canPredrop(state: State, orig: cg.Key, dest: cg.Key): boolean {\n  const piece = state.pieces[orig];\n  const destPiece = state.pieces[dest];\n  return !!piece && dest &&\n  (!destPiece || destPiece.color !== state.movable.color) &&\n  state.predroppable.enabled &&\n  (piece.role !== 'pawn' || (dest[1] !== '1' && dest[1] !== '8')) &&\n  state.movable.color === piece.color &&\n    state.turnColor !== piece.color;\n}\n\nexport function isDraggable(state: State, orig: cg.Key): boolean {\n  const piece = state.pieces[orig];\n  return !!piece && state.draggable.enabled && (\n    state.movable.color === 'both' || (\n      state.movable.color === piece.color && (\n        state.turnColor === piece.color || state.premovable.enabled\n      )\n    )\n  );\n}\n\nexport function playPremove(state: State): boolean {\n  const move = state.premovable.current;\n  if (!move) return false;\n  const orig = move[0], dest = move[1];\n  let success = false;\n  if (canMove(state, orig, dest)) {\n    const result = baseUserMove(state, orig, dest);\n    if (result) {\n      const metadata: cg.MoveMetadata = { premove: true };\n      if (result !== true) metadata.captured = result;\n      callUserFunction(state.movable.events.after, orig, dest, metadata);\n      success = true;\n    }\n  }\n  unsetPremove(state);\n  return success;\n}\n\nexport function playPredrop(state: State, validate: (drop: cg.Drop) => boolean): boolean {\n  let drop = state.predroppable.current,\n  success = false;\n  if (!drop) return false;\n  if (validate(drop)) {\n    const piece = {\n      role: drop.role,\n      color: state.movable.color\n    } as cg.Piece;\n    if (baseNewPiece(state, piece, drop.key)) {\n      callUserFunction(state.movable.events.afterNewPiece, drop.role, drop.key, {\n        predrop: true\n      });\n      success = true;\n    }\n  }\n  unsetPredrop(state);\n  return success;\n}\n\nexport function cancelMove(state: State): void {\n  unsetPremove(state);\n  unsetPredrop(state);\n  unselect(state);\n}\n\nexport function stop(state: State): void {\n  state.movable.color =\n  state.movable.dests =\n  state.animation.current = undefined;\n  cancelMove(state);\n}\n\nexport function getKeyAtDomPos(pos: cg.NumberPair, asWhite: boolean, bounds: ClientRect): cg.Key | undefined {\n  let file = Math.ceil(8 * ((pos[0] - bounds.left) / bounds.width));\n  if (!asWhite) file = 9 - file;\n  let rank = Math.ceil(8 - (8 * ((pos[1] - bounds.top) / bounds.height)));\n  if (!asWhite) rank = 9 - rank;\n  return (file > 0 && file < 9 && rank > 0 && rank < 9) ? pos2key([file, rank]) : undefined;\n}\n\nexport function whitePov(s: State): boolean {\n  return s.orientation === 'white';\n}\n","import { Api, start } from './api'\nimport { Config, configure } from './config'\nimport { State, defaults } from './state'\n\nimport renderWrap from './wrap';\nimport * as events from './events'\nimport render from './render';\nimport * as svg from './svg';\nimport * as util from './util';\n\nexport function Chessground(element: HTMLElement, config?: Config): Api {\n\n  const state = defaults() as State;\n\n  configure(state, config || {});\n\n  function redrawAll() {\n    let prevUnbind = state.dom && state.dom.unbind;\n    // compute bounds from existing board element if possible\n    // this allows non-square boards from CSS to be handled (for 3D)\n    const relative = state.viewOnly && !state.drawable.visible,\n    elements = renderWrap(element, state, relative),\n    bounds = util.memo(() => elements.board.getBoundingClientRect()),\n    redrawNow = (skipSvg?: boolean) => {\n      render(state);\n      if (!skipSvg && elements.svg) svg.renderSvg(state, elements.svg);\n    };\n    state.dom = {\n      elements,\n      bounds,\n      redraw: debounceRedraw(redrawNow),\n      redrawNow,\n      unbind: prevUnbind,\n      relative\n    };\n    state.drawable.prevSvgHash = '';\n    redrawNow(false);\n    events.bindBoard(state);\n    if (!prevUnbind) state.dom.unbind = events.bindDocument(state, redrawAll);\n    state.events.insert && state.events.insert(elements);\n  }\n  redrawAll();\n\n  return start(state, redrawAll);\n};\n\nfunction debounceRedraw(redrawNow: (skipSvg?: boolean) => void): () => void {\n  let redrawing = false;\n  return () => {\n    if (redrawing) return;\n    redrawing = true;\n    requestAnimationFrame(() => {\n      redrawNow();\n      redrawing = false;\n    });\n  };\n}\n","import { State } from './state'\nimport { setCheck, setSelected } from './board'\nimport { read as fenRead } from './fen'\nimport { DrawShape, DrawBrush } from './draw'\nimport * as cg from './types'\n\nexport interface Config {\n  fen?: cg.FEN; // chess position in Forsyth notation\n  orientation?: cg.Color; // board orientation. white | black\n  turnColor?: cg.Color; // turn to play. white | black\n  check?: cg.Color | boolean; // true for current color, false to unset\n  lastMove?: cg.Key[]; // squares part of the last move [\"c3\", \"c4\"]\n  selected?: cg.Key; // square currently selected \"a1\"\n  coordinates?: boolean; // include coords attributes\n  autoCastle?: boolean; // immediately complete the castle by moving the rook after king move\n  viewOnly?: boolean; // don't bind events: the user will never be able to move pieces around\n  disableContextMenu?: boolean; // because who needs a context menu on a chessboard\n  resizable?: boolean; // listens to chessground.resize on document.body to clear bounds cache\n  addPieceZIndex?: boolean; // adds z-index values to pieces (for 3D)\n  // pieceKey: boolean; // add a data-key attribute to piece elements\n  highlight?: {\n    lastMove?: boolean; // add last-move class to squares\n    check?: boolean; // add check class to squares\n  };\n  animation?: {\n    enabled?: boolean;\n    duration?: number;\n  };\n  movable?: {\n    free?: boolean; // all moves are valid - board editor\n    color?: cg.Color | 'both'; // color that can move. white | black | both | undefined\n    dests?: {\n      [key: string]: cg.Key[]\n    }; // valid moves. {\"a2\" [\"a3\" \"a4\"] \"b1\" [\"a3\" \"c3\"]}\n    showDests?: boolean; // whether to add the move-dest class on squares\n    events?: {\n      after?: (orig: cg.Key, dest: cg.Key, metadata: cg.MoveMetadata) => void; // called after the move has been played\n      afterNewPiece?: (role: cg.Role, key: cg.Key, metadata: cg.MoveMetadata) => void; // called after a new piece is dropped on the board\n    };\n    rookCastle?: boolean // castle by moving the king to the rook\n  };\n  premovable?: {\n    enabled?: boolean; // allow premoves for color that can not move\n    showDests?: boolean; // whether to add the premove-dest class on squares\n    castle?: boolean; // whether to allow king castle premoves\n    dests?: cg.Key[]; // premove destinations for the current selection\n    events?: {\n      set?: (orig: cg.Key, dest: cg.Key, metadata?: cg.SetPremoveMetadata) => void; // called after the premove has been set\n      unset?: () => void;  // called after the premove has been unset\n    }\n  };\n  predroppable?: {\n    enabled?: boolean; // allow predrops for color that can not move\n    events?: {\n      set?: (role: cg.Role, key: cg.Key) => void; // called after the predrop has been set\n      unset?: () => void; // called after the predrop has been unset\n    }\n  };\n  draggable?: {\n    enabled?: boolean; // allow moves & premoves to use drag'n drop\n    distance?: number; // minimum distance to initiate a drag; in pixels\n    autoDistance?: boolean; // lets chessground set distance to zero when user drags pieces\n    centerPiece?: boolean; // center the piece on cursor at drag start\n    showGhost?: boolean; // show ghost of piece being dragged\n    deleteOnDropOff?: boolean; // delete a piece when it is dropped off the board\n  };\n  selectable?: {\n    // disable to enforce dragging over click-click move\n    enabled?: boolean\n  };\n  events?: {\n    change?: () => void; // called after the situation changes on the board\n    // called after a piece has been moved.\n    // capturedPiece is undefined or like {color: 'white'; 'role': 'queen'}\n    move?: (orig: cg.Key, dest: cg.Key, capturedPiece?: cg.Piece) => void;\n    dropNewPiece?: (piece: cg.Piece, key: cg.Key) => void;\n    select?: (key: cg.Key) => void; // called when a square is selected\n    insert?: (elements: cg.Elements) => void; // when the board DOM has been (re)inserted\n  };\n  drawable?: {\n    enabled?: boolean; // can draw\n    visible?: boolean; // can view\n    eraseOnClick?: boolean;\n    shapes?: DrawShape[];\n    autoShapes?: DrawShape[];\n    brushes?: DrawBrush[];\n    pieces?: {\n      baseUrl?: string;\n    }\n  }\n}\n\nexport function configure(state: State, config: Config) {\n\n  // don't merge destinations. Just override.\n  if (config.movable && config.movable.dests) state.movable.dests = undefined;\n\n  merge(state, config);\n\n  // if a fen was provided, replace the pieces\n  if (config.fen) {\n    state.pieces = fenRead(config.fen);\n    state.drawable.shapes = [];\n  }\n\n  // apply config values that could be undefined yet meaningful\n  if (config.hasOwnProperty('check')) setCheck(state, config.check || false);\n  if (config.hasOwnProperty('lastMove') && !config.lastMove) state.lastMove = undefined;\n  // in case of ZH drop last move, there's a single square.\n  // if the previous last move had two squares,\n  // the merge algorithm will incorrectly keep the second square.\n  else if (config.lastMove) state.lastMove = config.lastMove;\n\n  // fix move/premove dests\n  if (state.selected) setSelected(state, state.selected);\n\n  // no need for such short animations\n  if (!state.animation.duration || state.animation.duration < 100) state.animation.enabled = false;\n\n  if (!state.movable.rookCastle && state.movable.dests) {\n    const rank = state.movable.color === 'white' ? 1 : 8,\n    kingStartPos = 'e' + rank,\n    dests = state.movable.dests[kingStartPos],\n    king = state.pieces[kingStartPos];\n    if (!dests || !king || king.role !== 'king') return;\n    state.movable.dests[kingStartPos] = dests.filter(d =>\n      !((d === 'a' + rank) && dests.indexOf('c' + rank as cg.Key) !== -1) &&\n        !((d === 'h' + rank) && dests.indexOf('g' + rank as cg.Key) !== -1)\n    );\n  }\n};\n\nfunction merge(base: any, extend: any) {\n  for (let key in extend) {\n    if (isObject(base[key]) && isObject(extend[key])) merge(base[key], extend[key]);\n    else base[key] = extend[key];\n  }\n}\n\nfunction isObject(o: any): boolean {\n  return typeof o === 'object';\n}\n","import { State } from './state'\nimport * as board from './board'\nimport * as util from './util'\nimport { clear as drawClear } from './draw'\nimport * as cg from './types'\nimport { anim } from './anim'\n\nexport interface DragCurrent {\n  orig: cg.Key; // orig key of dragging piece\n  origPos: cg.Pos;\n  piece: cg.Piece;\n  rel: cg.NumberPair; // x; y of the piece at original position\n  epos: cg.NumberPair; // initial event position\n  pos: cg.NumberPair; // relative current position\n  dec: cg.NumberPair; // piece center decay\n  started: boolean; // whether the drag has started; as per the distance setting\n  element: cg.PieceNode | (() => cg.PieceNode | undefined);\n  newPiece?: boolean; // it it a new piece from outside the board\n  force?: boolean; // can the new piece replace an existing one (editor)\n  previouslySelected?: cg.Key;\n  originTarget: EventTarget | null;\n}\n\nexport function start(s: State, e: cg.MouchEvent): void {\n  if (e.button !== undefined && e.button !== 0) return; // only touch or left click\n  if (e.touches && e.touches.length > 1) return; // support one finger touch only\n  const bounds = s.dom.bounds(),\n  position = util.eventPosition(e) as cg.NumberPair,\n  orig = board.getKeyAtDomPos(position, board.whitePov(s), bounds);\n  if (!orig) return;\n  const piece = s.pieces[orig];\n  const previouslySelected = s.selected;\n  if (!previouslySelected && s.drawable.enabled && (\n    s.drawable.eraseOnClick || (!piece || piece.color !== s.turnColor)\n  )) drawClear(s);\n  // Prevent touch scroll and create no corresponding mouse event, if there\n  // is an intent to interact with the board. If no color is movable\n  // (and the board is not for viewing only), touches are likely intended to\n  // select squares.\n  if (e.cancelable !== false &&\n      (!e.touches || !s.movable.color || piece || previouslySelected || pieceCloseTo(s, position)))\n       e.preventDefault();\n  const hadPremove = !!s.premovable.current;\n  const hadPredrop = !!s.predroppable.current;\n  s.stats.ctrlKey = e.ctrlKey;\n  if (s.selected && board.canMove(s, s.selected, orig)) {\n    anim(state => board.selectSquare(state, orig), s);\n  } else {\n    board.selectSquare(s, orig);\n  }\n  const stillSelected = s.selected === orig;\n  const element = pieceElementByKey(s, orig);\n  if (piece && element && stillSelected && board.isDraggable(s, orig)) {\n    const squareBounds = computeSquareBounds(orig, board.whitePov(s), bounds);\n    s.draggable.current = {\n      orig,\n      origPos: util.key2pos(orig),\n      piece,\n      rel: position,\n      epos: position,\n      pos: [0, 0],\n      dec: s.draggable.centerPiece ? [\n        position[0] - (squareBounds.left + squareBounds.width / 2),\n        position[1] - (squareBounds.top + squareBounds.height / 2)\n      ] : [0, 0],\n      started: s.draggable.autoDistance && s.stats.dragged,\n      element,\n      previouslySelected,\n      originTarget: e.target\n    };\n    element.cgDragging = true;\n    element.classList.add('dragging');\n    // place ghost\n    const ghost = s.dom.elements.ghost;\n    if (ghost) {\n      ghost.className = `ghost ${piece.color} ${piece.role}`;\n      util.translateAbs(ghost, util.posToTranslateAbs(bounds)(util.key2pos(orig), board.whitePov(s)));\n      util.setVisible(ghost, true);\n    }\n    processDrag(s);\n  } else {\n    if (hadPremove) board.unsetPremove(s);\n    if (hadPredrop) board.unsetPredrop(s);\n  }\n  s.dom.redraw();\n}\n\nexport function pieceCloseTo(s: State, pos: cg.NumberPair): boolean {\n  const asWhite = board.whitePov(s),\n  bounds = s.dom.bounds(),\n  radiusSq = Math.pow(bounds.width / 8, 2);\n  for (let key in s.pieces) {\n    const squareBounds = computeSquareBounds(key as cg.Key, asWhite, bounds),\n    center: cg.NumberPair = [\n      squareBounds.left + squareBounds.width / 2,\n      squareBounds.top + squareBounds.height / 2\n    ];\n    if (util.distanceSq(center, pos) <= radiusSq) return true;\n  }\n  return false;\n}\n\nexport function dragNewPiece(s: State, piece: cg.Piece, e: cg.MouchEvent, force?: boolean): void {\n\n  const key: cg.Key = 'a0';\n\n  s.pieces[key] = piece;\n\n  s.dom.redraw();\n\n  const position = util.eventPosition(e) as cg.NumberPair,\n  asWhite = board.whitePov(s),\n  bounds = s.dom.bounds(),\n  squareBounds = computeSquareBounds(key, asWhite, bounds);\n\n  const rel: cg.NumberPair = [\n    (asWhite ? 0 : 7) * squareBounds.width + bounds.left,\n    (asWhite ? 8 : -1) * squareBounds.height + bounds.top\n  ];\n\n  s.draggable.current = {\n    orig: key,\n    origPos: util.key2pos(key),\n    piece,\n    rel,\n    epos: position,\n    pos: [position[0] - rel[0], position[1] - rel[1]],\n    dec: [-squareBounds.width / 2, -squareBounds.height / 2],\n    started: true,\n    element: () => pieceElementByKey(s, key),\n    originTarget: e.target,\n    newPiece: true,\n    force: !!force\n  };\n  processDrag(s);\n}\n\nfunction processDrag(s: State): void {\n  requestAnimationFrame(() => {\n    const cur = s.draggable.current;\n    if (!cur) return;\n    // cancel animations while dragging\n    if (s.animation.current && s.animation.current.plan.anims[cur.orig]) s.animation.current = undefined;\n    // if moving piece is gone, cancel\n    const origPiece = s.pieces[cur.orig];\n    if (!origPiece || !util.samePiece(origPiece, cur.piece)) cancel(s);\n    else {\n      if (!cur.started && util.distanceSq(cur.epos, cur.rel) >= Math.pow(s.draggable.distance, 2)) cur.started = true;\n      if (cur.started) {\n\n        // support lazy elements\n        if (typeof cur.element === 'function') {\n          const found = cur.element();\n          if (!found) return;\n          found.cgDragging = true;\n          found.classList.add('dragging');\n          cur.element = found;\n        }\n\n        cur.pos = [\n          cur.epos[0] - cur.rel[0],\n          cur.epos[1] - cur.rel[1]\n        ];\n\n        // move piece\n        const translation = util.posToTranslateAbs(s.dom.bounds())(cur.origPos, board.whitePov(s));\n        translation[0] += cur.pos[0] + cur.dec[0];\n        translation[1] += cur.pos[1] + cur.dec[1];\n        util.translateAbs(cur.element, translation);\n      }\n    }\n    processDrag(s);\n  });\n}\n\nexport function move(s: State, e: cg.MouchEvent): void {\n  // support one finger touch only\n  if (s.draggable.current && (!e.touches || e.touches.length < 2)) {\n    s.draggable.current.epos = util.eventPosition(e) as cg.NumberPair;\n  }\n}\n\nexport function end(s: State, e: cg.MouchEvent): void {\n  const cur = s.draggable.current;\n  if (!cur) return;\n  // create no corresponding mouse event\n  if (e.type === 'touchend' && e.cancelable !== false) e.preventDefault();\n  // comparing with the origin target is an easy way to test that the end event\n  // has the same touch origin\n  if (e.type === 'touchend' && cur && cur.originTarget !== e.target && !cur.newPiece) {\n    s.draggable.current = undefined;\n    return;\n  }\n  board.unsetPremove(s);\n  board.unsetPredrop(s);\n  // touchend has no position; so use the last touchmove position instead\n  const eventPos: cg.NumberPair = util.eventPosition(e) || cur.epos;\n  const dest = board.getKeyAtDomPos(eventPos, board.whitePov(s), s.dom.bounds());\n  if (dest && cur.started && cur.orig !== dest) {\n    if (cur.newPiece) board.dropNewPiece(s, cur.orig, dest, cur.force);\n    else {\n      s.stats.ctrlKey = e.ctrlKey;\n      if (board.userMove(s, cur.orig, dest)) s.stats.dragged = true;\n    }\n  } else if (cur.newPiece) {\n    delete s.pieces[cur.orig];\n  } else if (s.draggable.deleteOnDropOff && !dest) {\n    delete s.pieces[cur.orig];\n    board.callUserFunction(s.events.change);\n  }\n  if (cur && cur.orig === cur.previouslySelected && (cur.orig === dest || !dest))\n    board.unselect(s);\n  else if (!s.selectable.enabled) board.unselect(s);\n\n  removeDragElements(s);\n\n  s.draggable.current = undefined;\n  s.dom.redraw();\n}\n\nexport function cancel(s: State): void {\n  const cur = s.draggable.current;\n  if (cur) {\n    if (cur.newPiece) delete s.pieces[cur.orig];\n    s.draggable.current = undefined;\n    board.unselect(s);\n    removeDragElements(s);\n    s.dom.redraw();\n  }\n}\n\nfunction removeDragElements(s: State) {\n  const e = s.dom.elements;\n  if (e.ghost) util.setVisible(e.ghost, false);\n}\n\nfunction computeSquareBounds(key: cg.Key, asWhite: boolean, bounds: ClientRect) {\n  const pos = util.key2pos(key);\n  if (!asWhite) {\n    pos[0] = 9 - pos[0];\n    pos[1] = 9 - pos[1];\n  }\n  return {\n    left: bounds.left + bounds.width * (pos[0] - 1) / 8,\n    top: bounds.top + bounds.height * (8 - pos[1]) / 8,\n    width: bounds.width / 8,\n    height: bounds.height / 8\n  };\n}\n\nfunction pieceElementByKey(s: State, key: cg.Key): cg.PieceNode | undefined {\n  let el = s.dom.elements.board.firstChild as cg.PieceNode;\n  while (el) {\n    if (el.cgKey === key && el.tagName === 'PIECE') return el;\n    el = el.nextSibling as cg.PieceNode;\n  }\n  return undefined;\n}\n","import { State } from './state'\nimport { unselect, cancelMove, getKeyAtDomPos, whitePov } from './board'\nimport { eventPosition, isRightButton } from './util'\nimport * as cg from './types'\n\nexport interface DrawShape {\n  orig: cg.Key;\n  dest?: cg.Key;\n  brush: string;\n  modifiers?: DrawModifiers;\n  piece?: DrawShapePiece;\n}\n\nexport interface DrawShapePiece {\n  role: cg.Role;\n  color: cg.Color;\n  scale?: number;\n}\n\nexport interface DrawBrush {\n  key: string;\n  color: string;\n  opacity: number;\n  lineWidth: number\n}\n\nexport interface DrawBrushes {\n  [name: string]: DrawBrush;\n}\n\nexport interface DrawModifiers {\n  lineWidth?: number;\n}\n\nexport interface Drawable {\n  enabled: boolean; // can draw\n  visible: boolean; // can view\n  eraseOnClick: boolean;\n  onChange?: (shapes: DrawShape[]) => void;\n  shapes: DrawShape[]; // user shapes\n  autoShapes: DrawShape[]; // computer shapes\n  current?: DrawCurrent;\n  brushes: DrawBrushes;\n  // drawable SVG pieces; used for crazyhouse drop\n  pieces: {\n    baseUrl: string\n  },\n  prevSvgHash: string\n}\n\nexport interface DrawCurrent {\n  orig: cg.Key; // orig key of drawing\n  dest?: cg.Key; // shape dest, or undefined for circle\n  mouseSq?: cg.Key; // square being moused over\n  pos: cg.NumberPair; // relative current position\n  brush: string; // brush name for shape\n}\n\nconst brushes = ['green', 'red', 'blue', 'yellow'];\n\nexport function start(state: State, e: cg.MouchEvent): void {\n  if (e.touches && e.touches.length > 1) return; // support one finger touch only\n  e.stopPropagation();\n  e.preventDefault();\n  e.ctrlKey ? unselect(state) : cancelMove(state);\n  const pos = eventPosition(e) as cg.NumberPair,\n  orig = getKeyAtDomPos(pos, whitePov(state), state.dom.bounds());\n  if (!orig) return;\n  state.drawable.current = {\n    orig,\n    pos,\n    brush: eventBrush(e)\n  };\n  processDraw(state);\n}\n\nexport function processDraw(state: State): void {\n  requestAnimationFrame(() => {\n    const cur = state.drawable.current;\n    if (cur) {\n      const mouseSq = getKeyAtDomPos(cur.pos, whitePov(state), state.dom.bounds());\n      if (mouseSq !== cur.mouseSq) {\n        cur.mouseSq = mouseSq;\n        cur.dest = mouseSq !== cur.orig ? mouseSq : undefined;\n        state.dom.redrawNow();\n      }\n      processDraw(state);\n    }\n  });\n}\n\nexport function move(state: State, e: cg.MouchEvent): void {\n  if (state.drawable.current) state.drawable.current.pos = eventPosition(e) as cg.NumberPair;\n}\n\nexport function end(state: State): void {\n  const cur = state.drawable.current;\n  if (cur) {\n    if (cur.mouseSq) addShape(state.drawable, cur);\n    cancel(state);\n  }\n}\n\nexport function cancel(state: State): void {\n  if (state.drawable.current) {\n    state.drawable.current = undefined;\n    state.dom.redraw();\n  }\n}\n\nexport function clear(state: State): void {\n  if (state.drawable.shapes.length) {\n    state.drawable.shapes = [];\n    state.dom.redraw();\n    onChange(state.drawable);\n  }\n}\n\nfunction eventBrush(e: cg.MouchEvent): string {\n  return brushes[((e.shiftKey || e.ctrlKey) && isRightButton(e) ? 1 : 0) + (e.altKey ? 2 : 0)];\n}\n\nfunction addShape(drawable: Drawable, cur: DrawCurrent): void {\n  const sameShape = (s: DrawShape) => s.orig === cur.orig && s.dest === cur.dest;\n  const similar = drawable.shapes.filter(sameShape)[0];\n  if (similar) drawable.shapes = drawable.shapes.filter(s => !sameShape(s));\n  if (!similar || similar.brush !== cur.brush) drawable.shapes.push(cur);\n  onChange(drawable);\n}\n\nfunction onChange(drawable: Drawable): void {\n  if (drawable.onChange) drawable.onChange(drawable.shapes);\n}\n","import { State } from './state'\nimport * as cg from './types'\nimport * as board from './board'\nimport * as util from './util'\nimport { cancel as cancelDrag } from './drag'\n\nexport function setDropMode(s: State, piece?: cg.Piece): void {\n  s.dropmode = {\n    active: true,\n    piece\n  };\n  cancelDrag(s);\n}\n\nexport function cancelDropMode(s: State): void {\n  s.dropmode = {\n    active: false\n  };\n}\n\nexport function drop(s: State, e: cg.MouchEvent): void {\n  if (!s.dropmode.active) return;\n\n  board.unsetPremove(s);\n  board.unsetPredrop(s);\n\n  const piece = s.dropmode.piece;\n\n  if (piece) {\n    s.pieces.a0 = piece;\n    const position = util.eventPosition(e);\n    const dest = position && board.getKeyAtDomPos(\n      position, board.whitePov(s), s.dom.bounds());\n    if (dest) board.dropNewPiece(s, 'a0', dest);\n  }\n  s.dom.redraw();\n}\n","import { State } from './state'\nimport * as drag from './drag'\nimport * as draw from './draw'\nimport { drop } from './drop'\nimport { isRightButton } from './util'\nimport * as cg from './types'\n\ntype MouchBind = (e: cg.MouchEvent) => void;\ntype StateMouchBind = (d: State, e: cg.MouchEvent) => void;\n\nexport function bindBoard(s: State): void {\n\n  if (s.viewOnly) return;\n\n  const boardEl = s.dom.elements.board,\n  onStart = startDragOrDraw(s);\n\n  // Cannot be passive, because we prevent touch scrolling and dragging of\n  // selected elements.\n  boardEl.addEventListener('touchstart', onStart as EventListener, { passive: false });\n  boardEl.addEventListener('mousedown', onStart as EventListener, { passive: false });\n\n  if (s.disableContextMenu || s.drawable.enabled) {\n    boardEl.addEventListener('contextmenu', e => e.preventDefault());\n  }\n}\n\n// returns the unbind function\nexport function bindDocument(s: State, redrawAll: cg.Redraw): cg.Unbind {\n\n  const unbinds: cg.Unbind[] = [];\n\n  if (!s.dom.relative && s.resizable) {\n    const onResize = () => {\n      s.dom.bounds.clear();\n      requestAnimationFrame(redrawAll);\n    };\n    unbinds.push(unbindable(document.body, 'chessground.resize', onResize));\n  }\n\n  if (!s.viewOnly) {\n\n    const onmove: MouchBind = dragOrDraw(s, drag.move, draw.move);\n    const onend: MouchBind = dragOrDraw(s, drag.end, draw.end);\n\n    ['touchmove', 'mousemove'].forEach(ev => unbinds.push(unbindable(document, ev, onmove)));\n    ['touchend', 'mouseup'].forEach(ev => unbinds.push(unbindable(document, ev, onend)));\n\n    const onScroll = () => s.dom.bounds.clear();\n    unbinds.push(unbindable(window, 'scroll', onScroll, { passive: true }));\n    unbinds.push(unbindable(window, 'resize', onScroll, { passive: true }));\n  }\n\n  return () => unbinds.forEach(f => f());\n}\n\nfunction unbindable(el: EventTarget, eventName: string, callback: MouchBind, options?: any): cg.Unbind {\n  el.addEventListener(eventName, callback as EventListener, options);\n  return () => el.removeEventListener(eventName, callback as EventListener);\n}\n\nfunction startDragOrDraw(s: State): MouchBind {\n  return e => {\n    if (s.draggable.current) drag.cancel(s);\n    else if (s.drawable.current) draw.cancel(s);\n    else if (e.shiftKey || isRightButton(e)) { if (s.drawable.enabled) draw.start(s, e); }\n    else if (!s.viewOnly) {\n      if (s.dropmode.active) drop(s, e);\n      else drag.start(s, e);\n    }\n  };\n}\n\nfunction dragOrDraw(s: State, withDrag: StateMouchBind, withDraw: StateMouchBind): MouchBind {\n  return e => {\n    if (e.shiftKey || isRightButton(e)) { if (s.drawable.enabled) withDraw(s, e); }\n    else if (!s.viewOnly) withDrag(s, e);\n  };\n}\n","import { State } from './state'\nimport { Key } from './types'\n\nexport default function explosion(state: State, keys: Key[]): void {\n  state.exploding = { stage: 1, keys };\n  state.dom.redraw();\n  setTimeout(() => {\n    setStage(state, 2);\n    setTimeout(() => setStage(state, undefined), 120);\n  }, 120);\n}\n\nfunction setStage(state: State, stage: number | undefined): void {\n  if (state.exploding) {\n    if (stage) state.exploding.stage = stage;\n    else state.exploding = undefined;\n    state.dom.redraw();\n  }\n}\n","import { pos2key, invRanks } from './util'\nimport * as cg from './types'\n\nexport const initial: cg.FEN = 'rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR';\n\nconst roles: { [letter: string]: cg.Role } = { p: 'pawn', r: 'rook', n: 'knight', b: 'bishop', q: 'queen', k: 'king' };\n\nconst letters = { pawn: 'p', rook: 'r', knight: 'n', bishop: 'b', queen: 'q', king: 'k' };\n\nexport function read(fen: cg.FEN): cg.Pieces {\n  if (fen === 'start') fen = initial;\n  const pieces: cg.Pieces = {};\n  let row: number = 8, col: number = 0;\n  for (const c of fen) {\n    switch (c) {\n      case ' ': return pieces;\n      case '/':\n        --row;\n        if (row === 0) return pieces;\n        col = 0;\n        break;\n      case '~':\n        const piece = pieces[pos2key([col, row])];\n        if (piece) piece.promoted = true;\n        break;\n      default:\n        const nb = c.charCodeAt(0);\n        if (nb < 57) col += nb - 48;\n        else {\n          ++col;\n          const role = c.toLowerCase();\n          pieces[pos2key([col, row])] = {\n            role: roles[role],\n            color: (c === role ? 'black' : 'white') as cg.Color\n          };\n        }\n    }\n  }\n  return pieces;\n}\n\nexport function write(pieces: cg.Pieces): cg.FEN {\n  return invRanks.map(y => cg.ranks.map(x => {\n      const piece = pieces[pos2key([x, y])];\n      if (piece) {\n        const letter = letters[piece.role];\n        return piece.color === 'white' ? letter.toUpperCase() : letter;\n      } else return '1';\n    }).join('')\n  ).join('/').replace(/1{2,}/g, s => s.length.toString());\n}\n","module.exports = require(\"./chessground\").Chessground;\n","import * as util from './util'\nimport * as cg from './types'\n\ntype Mobility = (x1:number, y1:number, x2:number, y2:number) => boolean;\n\nfunction diff(a: number, b:number):number {\n  return Math.abs(a - b);\n}\n\nfunction pawn(color: cg.Color): Mobility {\n  return (x1, y1, x2, y2) => diff(x1, x2) < 2 && (\n    color === 'white' ? (\n      // allow 2 squares from 1 and 8, for horde\n      y2 === y1 + 1 || (y1 <= 2 && y2 === (y1 + 2) && x1 === x2)\n    ) : (\n      y2 === y1 - 1 || (y1 >= 7 && y2 === (y1 - 2) && x1 === x2)\n    )\n  );\n}\n\nconst knight: Mobility = (x1, y1, x2, y2) => {\n  const xd = diff(x1, x2);\n  const yd = diff(y1, y2);\n  return (xd === 1 && yd === 2) || (xd === 2 && yd === 1);\n}\n\nconst bishop: Mobility = (x1, y1, x2, y2) => {\n  return diff(x1, x2) === diff(y1, y2);\n}\n\nconst rook: Mobility = (x1, y1, x2, y2) => {\n  return x1 === x2 || y1 === y2;\n}\n\nconst queen: Mobility = (x1, y1, x2, y2) => {\n  return bishop(x1, y1, x2, y2) || rook(x1, y1, x2, y2);\n}\n\nfunction king(color: cg.Color, rookFiles: number[], canCastle: boolean): Mobility {\n  return (x1, y1, x2, y2)  => (\n    diff(x1, x2) < 2 && diff(y1, y2) < 2\n  ) || (\n    canCastle && y1 === y2 && y1 === (color === 'white' ? 1 : 8) && (\n      (x1 === 5 && ((util.containsX(rookFiles, 1) && x2 === 3) || (util.containsX(rookFiles, 8) && x2 === 7))) ||\n      util.containsX(rookFiles, x2)\n    )\n  );\n}\n\nfunction rookFilesOf(pieces: cg.Pieces, color: cg.Color) {\n  const backrank = color == 'white' ? '1' : '8';\n  return Object.keys(pieces).filter(key => {\n    const piece = pieces[key];\n    return key[1] === backrank && piece && piece.color === color && piece.role === 'rook';\n  }).map((key: string ) => util.key2pos(key as cg.Key)[0]);\n}\n\nconst allPos = util.allKeys.map(util.key2pos);\n\nexport default function premove(pieces: cg.Pieces, key: cg.Key, canCastle: boolean): cg.Key[] {\n  const piece = pieces[key]!,\n    pos = util.key2pos(key),\n    r = piece.role,\n    mobility: Mobility = r === 'pawn' ? pawn(piece.color) : (\n      r === 'knight' ? knight : (\n        r === 'bishop' ? bishop : (\n          r === 'rook' ? rook : (\n            r === 'queen' ? queen : king(piece.color, rookFilesOf(pieces, piece.color), canCastle)\n          ))));\n  return allPos.filter(pos2 =>\n    (pos[0] !== pos2[0] || pos[1] !== pos2[1]) && mobility(pos[0], pos[1], pos2[0], pos2[1])\n  ).map(util.pos2key);\n};\n","import { State } from './state'\nimport { key2pos, createEl } from './util'\nimport { whitePov } from './board'\nimport * as util from './util'\nimport { AnimCurrent, AnimVectors, AnimVector, AnimFadings } from './anim'\nimport { DragCurrent } from './drag'\nimport * as cg from './types'\n\n// `$color $role`\ntype PieceName = string;\n\ninterface SamePieces { [key: string]: boolean }\ninterface SameSquares { [key: string]: boolean }\ninterface MovedPieces { [pieceName: string]: cg.PieceNode[] }\ninterface MovedSquares { [className: string]: cg.SquareNode[] }\ninterface SquareClasses { [key: string]: string }\n\n// ported from https://github.com/veloce/lichobile/blob/master/src/js/chessground/view.js\n// in case of bugs, blame @veloce\nexport default function render(s: State): void {\n  const asWhite: boolean = whitePov(s),\n  posToTranslate = s.dom.relative ? util.posToTranslateRel : util.posToTranslateAbs(s.dom.bounds()),\n  translate = s.dom.relative ? util.translateRel : util.translateAbs,\n  boardEl: HTMLElement = s.dom.elements.board,\n  pieces: cg.Pieces = s.pieces,\n  curAnim: AnimCurrent | undefined = s.animation.current,\n  anims: AnimVectors = curAnim ? curAnim.plan.anims : {},\n  fadings: AnimFadings = curAnim ? curAnim.plan.fadings : {},\n  curDrag: DragCurrent | undefined = s.draggable.current,\n  squares: SquareClasses = computeSquareClasses(s),\n  samePieces: SamePieces = {},\n  sameSquares: SameSquares = {},\n  movedPieces: MovedPieces = {},\n  movedSquares: MovedSquares = {},\n  piecesKeys: cg.Key[] = Object.keys(pieces) as cg.Key[];\n  let k: cg.Key,\n  p: cg.Piece | undefined,\n  el: cg.PieceNode | cg.SquareNode,\n  pieceAtKey: cg.Piece | undefined,\n  elPieceName: PieceName,\n  anim: AnimVector | undefined,\n  fading: cg.Piece | undefined,\n  pMvdset: cg.PieceNode[],\n  pMvd: cg.PieceNode | undefined,\n  sMvdset: cg.SquareNode[],\n  sMvd: cg.SquareNode | undefined;\n\n  // walk over all board dom elements, apply animations and flag moved pieces\n  el = boardEl.firstChild as cg.PieceNode | cg.SquareNode;\n  while (el) {\n    k = el.cgKey;\n    if (isPieceNode(el)) {\n      pieceAtKey = pieces[k];\n      anim = anims[k];\n      fading = fadings[k];\n      elPieceName = el.cgPiece;\n      // if piece not being dragged anymore, remove dragging style\n      if (el.cgDragging && (!curDrag || curDrag.orig !== k)) {\n        el.classList.remove('dragging');\n        translate(el, posToTranslate(key2pos(k), asWhite));\n        el.cgDragging = false;\n      }\n      // remove fading class if it still remains\n      if (!fading && el.cgFading) {\n        el.cgFading = false;\n        el.classList.remove('fading');\n      }\n      // there is now a piece at this dom key\n      if (pieceAtKey) {\n        // continue animation if already animating and same piece\n        // (otherwise it could animate a captured piece)\n        if (anim && el.cgAnimating && elPieceName === pieceNameOf(pieceAtKey)) {\n          const pos = key2pos(k);\n          pos[0] += anim[2];\n          pos[1] += anim[3];\n          el.classList.add('anim');\n          translate(el, posToTranslate(pos, asWhite));\n        } else if (el.cgAnimating) {\n          el.cgAnimating = false;\n          el.classList.remove('anim');\n          translate(el, posToTranslate(key2pos(k), asWhite));\n          if (s.addPieceZIndex) el.style.zIndex = posZIndex(key2pos(k), asWhite);\n        }\n        // same piece: flag as same\n        if (elPieceName === pieceNameOf(pieceAtKey) && (!fading || !el.cgFading)) {\n          samePieces[k] = true;\n        }\n        // different piece: flag as moved unless it is a fading piece\n        else {\n          if (fading && elPieceName === pieceNameOf(fading)) {\n            el.classList.add('fading');\n            el.cgFading = true;\n          } else {\n            if (movedPieces[elPieceName]) movedPieces[elPieceName].push(el);\n            else movedPieces[elPieceName] = [el];\n          }\n        }\n      }\n      // no piece: flag as moved\n      else {\n        if (movedPieces[elPieceName]) movedPieces[elPieceName].push(el);\n        else movedPieces[elPieceName] = [el];\n      }\n    }\n    else if (isSquareNode(el)) {\n      const cn = el.className;\n      if (squares[k] === cn) sameSquares[k] = true;\n      else if (movedSquares[cn]) movedSquares[cn].push(el);\n      else movedSquares[cn] = [el];\n    }\n    el = el.nextSibling as cg.PieceNode | cg.SquareNode;\n  }\n\n  // walk over all squares in current set, apply dom changes to moved squares\n  // or append new squares\n  for (const sk in squares) {\n    if (!sameSquares[sk]) {\n      sMvdset = movedSquares[squares[sk]];\n      sMvd = sMvdset && sMvdset.pop();\n      const translation = posToTranslate(key2pos(sk as cg.Key), asWhite);\n      if (sMvd) {\n        sMvd.cgKey = sk as cg.Key;\n        translate(sMvd, translation);\n      }\n      else {\n        const squareNode = createEl('square', squares[sk]) as cg.SquareNode;\n        squareNode.cgKey = sk as cg.Key;\n        translate(squareNode, translation);\n        boardEl.insertBefore(squareNode, boardEl.firstChild);\n      }\n    }\n  }\n\n  // walk over all pieces in current set, apply dom changes to moved pieces\n  // or append new pieces\n  for (const j in piecesKeys) {\n    k = piecesKeys[j];\n    p = pieces[k]!;\n    anim = anims[k];\n    if (!samePieces[k]) {\n      pMvdset = movedPieces[pieceNameOf(p)];\n      pMvd = pMvdset && pMvdset.pop();\n      // a same piece was moved\n      if (pMvd) {\n        // apply dom changes\n        pMvd.cgKey = k;\n        if (pMvd.cgFading) {\n          pMvd.classList.remove('fading');\n          pMvd.cgFading = false;\n        }\n        const pos = key2pos(k);\n        if (s.addPieceZIndex) pMvd.style.zIndex = posZIndex(pos, asWhite);\n        if (anim) {\n          pMvd.cgAnimating = true;\n          pMvd.classList.add('anim');\n          pos[0] += anim[2];\n          pos[1] += anim[3];\n        }\n        translate(pMvd, posToTranslate(pos, asWhite));\n      }\n      // no piece in moved obj: insert the new piece\n      // assumes the new piece is not being dragged\n      else {\n\n        const pieceName = pieceNameOf(p),\n        pieceNode = createEl('piece', pieceName) as cg.PieceNode,\n        pos = key2pos(k);\n\n        pieceNode.cgPiece = pieceName;\n        pieceNode.cgKey = k;\n        if (anim) {\n          pieceNode.cgAnimating = true;\n          pos[0] += anim[2];\n          pos[1] += anim[3];\n        }\n        translate(pieceNode, posToTranslate(pos, asWhite));\n\n        if (s.addPieceZIndex) pieceNode.style.zIndex = posZIndex(pos, asWhite);\n\n        boardEl.appendChild(pieceNode);\n      }\n    }\n  }\n\n  // remove any element that remains in the moved sets\n  for (const i in movedPieces) removeNodes(s, movedPieces[i]);\n  for (const i in movedSquares) removeNodes(s, movedSquares[i]);\n}\n\nfunction isPieceNode(el: cg.PieceNode | cg.SquareNode): el is cg.PieceNode {\n  return el.tagName === 'PIECE';\n}\nfunction isSquareNode(el: cg.PieceNode | cg.SquareNode): el is cg.SquareNode {\n  return el.tagName === 'SQUARE';\n}\n\nfunction removeNodes(s: State, nodes: HTMLElement[]): void {\n  for (const i in nodes) s.dom.elements.board.removeChild(nodes[i]);\n}\n\nfunction posZIndex(pos: cg.Pos, asWhite: boolean): string {\n  let z = 2 + (pos[1] - 1) * 8 + (8 - pos[0]);\n  if (asWhite) z = 67 - z;\n  return z + '';\n}\n\nfunction pieceNameOf(piece: cg.Piece): string {\n  return `${piece.color} ${piece.role}`;\n}\n\nfunction computeSquareClasses(s: State): SquareClasses {\n  const squares: SquareClasses = {};\n  let i: any, k: cg.Key;\n  if (s.lastMove && s.highlight.lastMove) for (i in s.lastMove) {\n    addSquare(squares, s.lastMove[i], 'last-move');\n  }\n  if (s.check && s.highlight.check) addSquare(squares, s.check, 'check');\n  if (s.selected) {\n    addSquare(squares, s.selected, 'selected');\n    if (s.movable.showDests) {\n      const dests = s.movable.dests && s.movable.dests[s.selected];\n      if (dests) for (i in dests) {\n        k = dests[i];\n        addSquare(squares, k, 'move-dest' + (s.pieces[k] ? ' oc' : ''));\n      }\n      const pDests = s.premovable.dests;\n      if (pDests) for (i in pDests) {\n        k = pDests[i];\n        addSquare(squares, k, 'premove-dest' + (s.pieces[k] ? ' oc' : ''));\n      }\n    }\n  }\n  const premove = s.premovable.current;\n  if (premove) for (i in premove) addSquare(squares, premove[i], 'current-premove');\n  else if (s.predroppable.current) addSquare(squares, s.predroppable.current.key, 'current-premove');\n\n  const o = s.exploding;\n  if (o) for (i in o.keys) addSquare(squares, o.keys[i], 'exploding' + o.stage);\n\n  return squares;\n}\n\nfunction addSquare(squares: SquareClasses, key: cg.Key, klass: string): void {\n  if (squares[key]) squares[key] += ' ' + klass;\n  else squares[key] = klass;\n}\n","import * as fen from './fen'\nimport { AnimCurrent } from './anim'\nimport { DragCurrent } from './drag'\nimport { Drawable } from './draw'\nimport { timer } from './util'\nimport * as cg from './types';\n\nexport interface State {\n  pieces: cg.Pieces;\n  orientation: cg.Color; // board orientation. white | black\n  turnColor: cg.Color; // turn to play. white | black\n  check?: cg.Key; // square currently in check \"a2\"\n  lastMove?: cg.Key[]; // squares part of the last move [\"c3\"; \"c4\"]\n  selected?: cg.Key; // square currently selected \"a1\"\n  coordinates: boolean; // include coords attributes\n  autoCastle: boolean; // immediately complete the castle by moving the rook after king move\n  viewOnly: boolean; // don't bind events: the user will never be able to move pieces around\n  disableContextMenu: boolean; // because who needs a context menu on a chessboard\n  resizable: boolean; // listens to chessground.resize on document.body to clear bounds cache\n  addPieceZIndex: boolean; // adds z-index values to pieces (for 3D)\n  pieceKey: boolean; // add a data-key attribute to piece elements\n  highlight: {\n    lastMove: boolean; // add last-move class to squares\n    check: boolean; // add check class to squares\n  };\n  animation: {\n    enabled: boolean;\n    duration: number;\n    current?: AnimCurrent;\n  };\n  movable: {\n    free: boolean; // all moves are valid - board editor\n    color?: cg.Color | 'both'; // color that can move. white | black | both\n    dests?: cg.Dests; // valid moves. {\"a2\" [\"a3\" \"a4\"] \"b1\" [\"a3\" \"c3\"]}\n    showDests: boolean; // whether to add the move-dest class on squares\n    events: {\n      after?: (orig: cg.Key, dest: cg.Key, metadata: cg.MoveMetadata) => void; // called after the move has been played\n      afterNewPiece?: (role: cg.Role, key: cg.Key, metadata: cg.MoveMetadata) => void; // called after a new piece is dropped on the board\n    };\n    rookCastle: boolean // castle by moving the king to the rook\n  };\n  premovable: {\n    enabled: boolean; // allow premoves for color that can not move\n    showDests: boolean; // whether to add the premove-dest class on squares\n    castle: boolean; // whether to allow king castle premoves\n    dests?: cg.Key[]; // premove destinations for the current selection\n    current?: cg.KeyPair; // keys of the current saved premove [\"e2\" \"e4\"]\n    events: {\n      set?: (orig: cg.Key, dest: cg.Key, metadata?: cg.SetPremoveMetadata) => void; // called after the premove has been set\n      unset?: () => void;  // called after the premove has been unset\n    }\n  };\n  predroppable: {\n    enabled: boolean; // allow predrops for color that can not move\n    current?: { // current saved predrop {role: 'knight'; key: 'e4'}\n      role: cg.Role;\n      key: cg.Key\n    };\n    events: {\n      set?: (role: cg.Role, key: cg.Key) => void; // called after the predrop has been set\n      unset?: () => void; // called after the predrop has been unset\n    }\n  };\n  draggable: {\n    enabled: boolean; // allow moves & premoves to use drag'n drop\n    distance: number; // minimum distance to initiate a drag; in pixels\n    autoDistance: boolean; // lets chessground set distance to zero when user drags pieces\n    centerPiece: boolean; // center the piece on cursor at drag start\n    showGhost: boolean; // show ghost of piece being dragged\n    deleteOnDropOff: boolean; // delete a piece when it is dropped off the board\n    current?: DragCurrent;\n  };\n  dropmode: {\n    active: boolean;\n    piece?: cg.Piece;\n  }\n  selectable: {\n    // disable to enforce dragging over click-click move\n    enabled: boolean\n  };\n  stats: {\n    // was last piece dragged or clicked?\n    // needs default to false for touch\n    dragged: boolean,\n    ctrlKey?: boolean\n  };\n  events: {\n    change?: () => void; // called after the situation changes on the board\n    // called after a piece has been moved.\n    // capturedPiece is undefined or like {color: 'white'; 'role': 'queen'}\n    move?: (orig: cg.Key, dest: cg.Key, capturedPiece?: cg.Piece) => void;\n    dropNewPiece?: (piece: cg.Piece, key: cg.Key) => void;\n    select?: (key: cg.Key) => void // called when a square is selected\n    insert?: (elements: cg.Elements) => void; // when the board DOM has been (re)inserted\n  };\n  drawable: Drawable,\n  exploding?: cg.Exploding;\n  dom: cg.Dom,\n  hold: cg.Timer\n}\n\nexport function defaults(): Partial<State> {\n  return {\n    pieces: fen.read(fen.initial),\n    orientation: 'white',\n    turnColor: 'white',\n    coordinates: true,\n    autoCastle: true,\n    viewOnly: false,\n    disableContextMenu: false,\n    resizable: true,\n    addPieceZIndex: false,\n    pieceKey: false,\n    highlight: {\n      lastMove: true,\n      check: true\n    },\n    animation: {\n      enabled: true,\n      duration: 200\n    },\n    movable: {\n      free: true,\n      color: 'both',\n      showDests: true,\n      events: {},\n      rookCastle: true\n    },\n    premovable: {\n      enabled: true,\n      showDests: true,\n      castle: true,\n      events: {}\n    },\n    predroppable: {\n      enabled: false,\n      events: {}\n    },\n    draggable: {\n      enabled: true,\n      distance: 3,\n      autoDistance: true,\n      centerPiece: true,\n      showGhost: true,\n      deleteOnDropOff: false\n    },\n    dropmode: {\n      active: false\n    },\n    selectable: {\n      enabled: true\n    },\n    stats: {\n      // on touchscreen, default to \"tap-tap\" moves\n      // instead of drag\n      dragged: !('ontouchstart' in window)\n    },\n    events: {},\n    drawable: {\n      enabled: true, // can draw\n      visible: true, // can view\n      eraseOnClick: true,\n      shapes: [],\n      autoShapes: [],\n      brushes: {\n        green: { key: 'g', color: '#15781B', opacity: 1, lineWidth: 10 },\n        red: { key: 'r', color: '#882020', opacity: 1, lineWidth: 10 },\n        blue: { key: 'b', color: '#003088', opacity: 1, lineWidth: 10 },\n        yellow: { key: 'y', color: '#e68f00', opacity: 1, lineWidth: 10 },\n        paleBlue: { key: 'pb', color: '#003088', opacity: 0.4, lineWidth: 15 },\n        paleGreen: { key: 'pg', color: '#15781B', opacity: 0.4, lineWidth: 15 },\n        paleRed: { key: 'pr', color: '#882020', opacity: 0.4, lineWidth: 15 },\n        paleGrey: { key: 'pgr', color: '#4a4a4a', opacity: 0.35, lineWidth: 15 }\n      },\n      pieces: {\n        baseUrl: 'https://lichess1.org/assets/piece/cburnett/'\n      },\n      prevSvgHash: ''\n    },\n    hold: timer()\n  };\n}\n","import { State } from './state'\nimport { key2pos } from './util'\nimport { Drawable, DrawShape, DrawShapePiece, DrawBrush, DrawBrushes, DrawModifiers } from './draw'\nimport * as cg from './types'\n\nexport function createElement(tagName: string): SVGElement {\n  return document.createElementNS('http://www.w3.org/2000/svg', tagName);\n}\n\ninterface Shape {\n  shape: DrawShape;\n  current: boolean;\n  hash: Hash;\n}\n\ninterface CustomBrushes {\n  [hash: string]: DrawBrush\n}\n\ninterface ArrowDests {\n  [key: string]: number; // how many arrows land on a square\n}\n\ntype Hash = string;\n\nexport function renderSvg(state: State, root: SVGElement): void {\n\n  const d = state.drawable,\n  curD = d.current,\n  cur = curD && curD.mouseSq ? curD as DrawShape : undefined,\n  arrowDests: ArrowDests = {};\n\n  d.shapes.concat(d.autoShapes).concat(cur ? [cur] : []).forEach(s => {\n    if (s.dest) arrowDests[s.dest] = (arrowDests[s.dest] || 0) + 1;\n  });\n\n  const shapes: Shape[] = d.shapes.concat(d.autoShapes).map((s: DrawShape) => {\n    return {\n      shape: s,\n      current: false,\n      hash: shapeHash(s, arrowDests, false)\n    };\n  });\n  if (cur) shapes.push({\n    shape: cur,\n    current: true,\n    hash: shapeHash(cur, arrowDests, true)\n  });\n\n  const fullHash = shapes.map(sc => sc.hash).join('');\n  if (fullHash === state.drawable.prevSvgHash) return;\n  state.drawable.prevSvgHash = fullHash;\n\n  const defsEl = root.firstChild as SVGElement;\n\n  syncDefs(d, shapes, defsEl);\n  syncShapes(state, shapes, d.brushes, arrowDests, root, defsEl);\n}\n\n// append only. Don't try to update/remove.\nfunction syncDefs(d: Drawable, shapes: Shape[], defsEl: SVGElement) {\n  const brushes: CustomBrushes = {};\n  let brush: DrawBrush;\n  shapes.forEach(s => {\n    if (s.shape.dest) {\n      brush = d.brushes[s.shape.brush];\n      if (s.shape.modifiers) brush = makeCustomBrush(brush, s.shape.modifiers);\n      brushes[brush.key] = brush;\n    }\n  });\n  const keysInDom: {[key: string]: boolean} = {};\n  let el: SVGElement = defsEl.firstChild as SVGElement;\n  while(el) {\n    keysInDom[el.getAttribute('cgKey') as string] = true;\n    el = el.nextSibling as SVGElement;\n  }\n  for (let key in brushes) {\n    if (!keysInDom[key]) defsEl.appendChild(renderMarker(brushes[key]));\n  }\n}\n\n// append and remove only. No updates.\nfunction syncShapes(state: State, shapes: Shape[], brushes: DrawBrushes, arrowDests: ArrowDests, root: SVGElement, defsEl: SVGElement): void {\n  const bounds = state.dom.bounds(),\n  hashesInDom: {[hash: string]: boolean} = {},\n  toRemove: SVGElement[] = [];\n  shapes.forEach(sc => { hashesInDom[sc.hash] = false; });\n  let el: SVGElement = defsEl.nextSibling as SVGElement, elHash: Hash;\n  while(el) {\n    elHash = el.getAttribute('cgHash') as Hash;\n    // found a shape element that's here to stay\n    if (hashesInDom.hasOwnProperty(elHash)) hashesInDom[elHash] = true;\n    // or remove it\n    else toRemove.push(el);\n    el = el.nextSibling as SVGElement;\n  }\n  // remove old shapes\n  toRemove.forEach(el => root.removeChild(el));\n  // insert shapes that are not yet in dom\n  shapes.forEach(sc => {\n    if (!hashesInDom[sc.hash]) root.appendChild(renderShape(state, sc, brushes, arrowDests, bounds));\n  });\n}\n\nfunction shapeHash({orig, dest, brush, piece, modifiers}: DrawShape, arrowDests: ArrowDests, current: boolean): Hash {\n  return [current, orig, dest, brush, dest && arrowDests[dest] > 1,\n    piece && pieceHash(piece),\n    modifiers && modifiersHash(modifiers)\n  ].filter(x => x).join('');\n}\n\nfunction pieceHash(piece: DrawShapePiece): Hash {\n  return [piece.color, piece.role, piece.scale].filter(x => x).join('');\n}\n\nfunction modifiersHash(m: DrawModifiers): Hash {\n  return '' + (m.lineWidth || '');\n}\n\nfunction renderShape(state: State, {shape, current, hash}: Shape, brushes: DrawBrushes, arrowDests: ArrowDests, bounds: ClientRect): SVGElement {\n  let el: SVGElement;\n  if (shape.piece) el = renderPiece(\n    state.drawable.pieces.baseUrl,\n    orient(key2pos(shape.orig), state.orientation),\n    shape.piece,\n    bounds);\n  else {\n    const orig = orient(key2pos(shape.orig), state.orientation);\n    if (shape.orig && shape.dest) {\n      let brush: DrawBrush = brushes[shape.brush];\n      if (shape.modifiers) brush = makeCustomBrush(brush, shape.modifiers);\n      el = renderArrow(\n        brush,\n        orig,\n        orient(key2pos(shape.dest), state.orientation),\n        current,\n        arrowDests[shape.dest] > 1,\n        bounds);\n    }\n    else el = renderCircle(brushes[shape.brush], orig, current, bounds);\n  }\n  el.setAttribute('cgHash', hash);\n  return el;\n}\n\nfunction renderCircle(brush: DrawBrush, pos: cg.Pos, current: boolean, bounds: ClientRect): SVGElement {\n  const o = pos2px(pos, bounds),\n  widths = circleWidth(bounds),\n  radius = (bounds.width + bounds.height) / 32;\n  return setAttributes(createElement('circle'), {\n    stroke: brush.color,\n    'stroke-width': widths[current ? 0 : 1],\n    fill: 'none',\n    opacity: opacity(brush, current),\n    cx: o[0],\n    cy: o[1],\n    r: radius - widths[1] / 2\n  });\n}\n\nfunction renderArrow(brush: DrawBrush, orig: cg.Pos, dest: cg.Pos, current: boolean, shorten: boolean, bounds: ClientRect): SVGElement {\n  const m = arrowMargin(bounds, shorten && !current),\n  a = pos2px(orig, bounds),\n  b = pos2px(dest, bounds),\n  dx = b[0] - a[0],\n  dy = b[1] - a[1],\n  angle = Math.atan2(dy, dx),\n  xo = Math.cos(angle) * m,\n  yo = Math.sin(angle) * m;\n  return setAttributes(createElement('line'), {\n    stroke: brush.color,\n    'stroke-width': lineWidth(brush, current, bounds),\n    'stroke-linecap': 'round',\n    'marker-end': 'url(#arrowhead-' + brush.key + ')',\n    opacity: opacity(brush, current),\n    x1: a[0],\n    y1: a[1],\n    x2: b[0] - xo,\n    y2: b[1] - yo\n  });\n}\n\nfunction renderPiece(baseUrl: string, pos: cg.Pos, piece: DrawShapePiece, bounds: ClientRect): SVGElement {\n  const o = pos2px(pos, bounds),\n  size = bounds.width / 8 * (piece.scale || 1),\n  name = piece.color[0] + (piece.role === 'knight' ? 'n' : piece.role[0]).toUpperCase();\n  return setAttributes(createElement('image'), {\n    className: `${piece.role} ${piece.color}`,\n    x: o[0] - size / 2,\n    y: o[1] - size / 2,\n    width: size,\n    height: size,\n    href: baseUrl + name + '.svg'\n  });\n}\n\nfunction renderMarker(brush: DrawBrush): SVGElement {\n  const marker = setAttributes(createElement('marker'), {\n    id: 'arrowhead-' + brush.key,\n    orient: 'auto',\n    markerWidth: 4,\n    markerHeight: 8,\n    refX: 2.05,\n    refY: 2.01\n  });\n  marker.appendChild(setAttributes(createElement('path'), {\n    d: 'M0,0 V4 L3,2 Z',\n    fill: brush.color\n  }));\n  marker.setAttribute('cgKey', brush.key);\n  return marker;\n}\n\nfunction setAttributes(el: SVGElement, attrs: { [key: string]: any }): SVGElement {\n  for (let key in attrs) el.setAttribute(key, attrs[key]);\n  return el;\n}\n\nfunction orient(pos: cg.Pos, color: cg.Color): cg.Pos {\n  return color === 'white' ? pos : [9 - pos[0], 9 - pos[1]];\n}\n\nfunction makeCustomBrush(base: DrawBrush, modifiers: DrawModifiers): DrawBrush {\n  const brush: Partial<DrawBrush> = {\n    color: base.color,\n    opacity: Math.round(base.opacity * 10) / 10,\n    lineWidth: Math.round(modifiers.lineWidth || base.lineWidth)\n  };\n  brush.key = [base.key, modifiers.lineWidth].filter(x => x).join('');\n  return brush as DrawBrush;\n}\n\nfunction circleWidth(bounds: ClientRect): [number, number] {\n  const base = bounds.width / 512;\n  return [3 * base, 4 * base];\n}\n\nfunction lineWidth(brush: DrawBrush, current: boolean, bounds: ClientRect): number {\n  return (brush.lineWidth || 10) * (current ? 0.85 : 1) / 512 * bounds.width;\n}\n\nfunction opacity(brush: DrawBrush, current: boolean): number {\n  return (brush.opacity || 1) * (current ? 0.9 : 1);\n}\n\nfunction arrowMargin(bounds: ClientRect, shorten: boolean): number {\n  return (shorten ? 20 : 10) / 512 * bounds.width;\n}\n\nfunction pos2px(pos: cg.Pos, bounds: ClientRect): cg.NumberPair {\n  return [(pos[0] - 0.5) * bounds.width / 8, (8.5 - pos[1]) * bounds.height / 8];\n}\n","export type Color = 'white' | 'black';\nexport type Role = 'king' | 'queen' | 'rook' | 'bishop' | 'knight' | 'pawn';\nexport type Key = 'a0' | 'a1' | 'b1' | 'c1' | 'd1' | 'e1' | 'f1' | 'g1' | 'h1' | 'a2' | 'b2' | 'c2' | 'd2' | 'e2' | 'f2' | 'g2' | 'h2' | 'a3' | 'b3' | 'c3' | 'd3' | 'e3' | 'f3' | 'g3' | 'h3' | 'a4' | 'b4' | 'c4' | 'd4' | 'e4' | 'f4' | 'g4' | 'h4' | 'a5' | 'b5' | 'c5' | 'd5' | 'e5' | 'f5' | 'g5' | 'h5' | 'a6' | 'b6' | 'c6' | 'd6' | 'e6' | 'f6' | 'g6' | 'h6' | 'a7' | 'b7' | 'c7' | 'd7' | 'e7' | 'f7' | 'g7' | 'h7' | 'a8' | 'b8' | 'c8' | 'd8' | 'e8' | 'f8' | 'g8' | 'h8';\nexport type File = 'a' | 'b' | 'c' | 'd' | 'e' | 'f' | 'g' | 'h';\nexport type Rank = 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8;\nexport type FEN = string;\nexport type Pos = [number, number];\nexport interface Piece {\n  role: Role;\n  color: Color;\n  promoted?: boolean;\n}\nexport interface Drop {\n  role: Role;\n  key: Key;\n}\nexport interface Pieces {\n  [key: string]: Piece | undefined;\n}\nexport interface PiecesDiff {\n  [key: string]: Piece | undefined;\n}\n\nexport type KeyPair = [Key, Key];\n\nexport type NumberPair = [number, number];\n\nexport type NumberQuad = [number, number, number, number];\n\nexport interface Dests {\n  [key: string]: Key[]\n}\n\nexport interface Elements {\n  board: HTMLElement;\n  container: HTMLElement;\n  ghost?: HTMLElement;\n  svg?: SVGElement;\n}\nexport interface Dom {\n  elements: Elements,\n  bounds: Memo<ClientRect>;\n  redraw: () => void;\n  redrawNow: (skipSvg?: boolean) => void;\n  unbind?: Unbind;\n  destroyed?: boolean;\n  relative?: boolean; // don't compute bounds, use relative % to place pieces\n}\nexport interface Exploding {\n  stage: number;\n  keys: Key[];\n}\n\nexport interface MoveMetadata {\n  premove: boolean;\n  ctrlKey?: boolean;\n  holdTime?: number;\n  captured?: Piece;\n  predrop?: boolean;\n}\nexport interface SetPremoveMetadata {\n  ctrlKey?: boolean;\n}\n\nexport type WindowEvent = 'onscroll' | 'onresize';\n\nexport type MouchEvent = MouseEvent & TouchEvent;\n\nexport interface KeyedNode extends HTMLElement {\n  cgKey: Key;\n}\nexport interface PieceNode extends KeyedNode {\n  cgPiece: string;\n  cgAnimating?: boolean;\n  cgFading?: boolean;\n  cgDragging?: boolean;\n}\nexport interface SquareNode extends KeyedNode { }\n\nexport interface Memo<A> { (): A; clear: () => void; }\n\nexport interface Timer {\n  start: () => void;\n  cancel: () => void;\n  stop: () => number;\n}\n\nexport type Redraw = () => void;\nexport type Unbind = () => void;\nexport type Milliseconds = number;\nexport type KHz = number;\n\nexport const files: File[] = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h'];\nexport const ranks: Rank[] = [1, 2, 3, 4, 5, 6, 7, 8];\n","import * as cg from './types';\n\nexport const colors: cg.Color[] = ['white', 'black'];\n\nexport const invRanks: cg.Rank[] = [8, 7, 6, 5, 4, 3, 2, 1];\n\nexport const allKeys: cg.Key[] = Array.prototype.concat(...cg.files.map(c => cg.ranks.map(r => c+r)));\n\nexport const pos2key = (pos: cg.Pos) => allKeys[8 * pos[0] + pos[1] - 9];\n\nexport const key2pos = (k: cg.Key) => [k.charCodeAt(0) - 96, k.charCodeAt(1) - 48] as cg.Pos;\n\nexport function memo<A>(f: () => A): cg.Memo<A> {\n  let v: A | undefined;\n  const ret: any = () => {\n    if (v === undefined) v = f();\n    return v;\n  };\n  ret.clear = () => { v = undefined };\n  return ret;\n}\n\nexport const timer: () => cg.Timer = () => {\n  let startAt: number | undefined;\n  return {\n    start() { startAt = performance.now() },\n    cancel() { startAt = undefined },\n    stop() {\n      if (!startAt) return 0;\n      const time = performance.now() - startAt;\n      startAt = undefined;\n      return time;\n    }\n  };\n}\n\nexport const opposite = (c: cg.Color) => c === 'white' ? 'black' : 'white';\n\nexport function containsX<X>(xs: X[] | undefined, x: X): boolean {\n  return xs !== undefined && xs.indexOf(x) !== -1;\n}\n\nexport const distanceSq: (pos1: cg.Pos, pos2: cg.Pos) => number = (pos1, pos2) => {\n  return Math.pow(pos1[0] - pos2[0], 2) + Math.pow(pos1[1] - pos2[1], 2);\n}\n\nexport const samePiece: (p1: cg.Piece, p2: cg.Piece) => boolean = (p1, p2) =>\n  p1.role === p2.role && p1.color === p2.color;\n\nconst posToTranslateBase: (pos: cg.Pos, asWhite: boolean, xFactor: number, yFactor: number) => cg.NumberPair =\n(pos, asWhite, xFactor, yFactor) => [\n  (asWhite ? pos[0] - 1 : 8 - pos[0]) * xFactor,\n  (asWhite ? 8 - pos[1] : pos[1] - 1) * yFactor\n];\n\nexport const posToTranslateAbs = (bounds: ClientRect) => {\n  const xFactor = bounds.width / 8,\n  yFactor = bounds.height / 8;\n  return (pos: cg.Pos, asWhite: boolean) => posToTranslateBase(pos, asWhite, xFactor, yFactor);\n};\n\nexport const posToTranslateRel: (pos: cg.Pos, asWhite: boolean) => cg.NumberPair =\n  (pos, asWhite) => posToTranslateBase(pos, asWhite, 100, 100);\n\nexport const translateAbs = (el: HTMLElement, pos: cg.NumberPair) => {\n  el.style.transform = `translate(${pos[0]}px,${pos[1]}px)`;\n}\n\nexport const translateRel = (el: HTMLElement, percents: cg.NumberPair) => {\n  el.style.transform = `translate(${percents[0]}%,${percents[1]}%)`;\n}\n\nexport const setVisible = (el: HTMLElement, v: boolean) => {\n  el.style.visibility = v ? 'visible' : 'hidden';\n}\n\n// touchend has no position!\nexport const eventPosition: (e: cg.MouchEvent) => cg.NumberPair | undefined = e => {\n  if (e.clientX || e.clientX === 0) return [e.clientX, e.clientY];\n  if (e.touches && e.targetTouches[0]) return [e.targetTouches[0].clientX, e.targetTouches[0].clientY];\n  return undefined;\n}\n\nexport const isRightButton = (e: MouseEvent) => e.buttons === 2 || e.button === 2;\n\nexport const createEl = (tagName: string, className?: string) => {\n  const el = document.createElement(tagName);\n  if (className) el.className = className;\n  return el;\n}\n","import { State } from './state'\nimport { colors, setVisible, createEl } from './util'\nimport { files, ranks } from './types'\nimport { createElement as createSVG } from './svg'\nimport { Elements } from './types'\n\nexport default function wrap(element: HTMLElement, s: State, relative: boolean): Elements {\n\n  // .cg-wrap (element passed to Chessground)\n  //   cg-helper (12.5%)\n  //     cg-container (800%)\n  //       cg-board\n  //       svg\n  //       coords.ranks\n  //       coords.files\n  //       piece.ghost\n\n  element.innerHTML = '';\n\n  // ensure the cg-wrap class is set\n  // so bounds calculation can use the CSS width/height values\n  // add that class yourself to the element before calling chessground\n  // for a slight performance improvement! (avoids recomputing style)\n  element.classList.add('cg-wrap');\n\n  colors.forEach(c => element.classList.toggle('orientation-' + c, s.orientation === c));\n  element.classList.toggle('manipulable', !s.viewOnly);\n\n  const helper = createEl('cg-helper');\n  element.appendChild(helper);\n  const container = createEl('cg-container');\n  helper.appendChild(container);\n\n  const board = createEl('cg-board');\n  container.appendChild(board);\n\n  let svg: SVGElement | undefined;\n  if (s.drawable.visible && !relative) {\n    svg = createSVG('svg');\n    svg.appendChild(createSVG('defs'));\n    container.appendChild(svg);\n  }\n\n  if (s.coordinates) {\n    const orientClass = s.orientation === 'black' ? ' black' : '';\n    container.appendChild(renderCoords(ranks, 'ranks' + orientClass));\n    container.appendChild(renderCoords(files, 'files' + orientClass));\n  }\n\n  let ghost: HTMLElement | undefined;\n  if (s.draggable.showGhost && !relative) {\n    ghost = createEl('piece', 'ghost');\n    setVisible(ghost, false);\n    container.appendChild(ghost);\n  }\n\n  return {\n    board,\n    container,\n    ghost,\n    svg\n  };\n}\n\nfunction renderCoords(elems: any[], className: string): HTMLElement {\n  const el = createEl('coords', className);\n  let f: HTMLElement;\n  for (let i in elems) {\n    f = createEl('coord');\n    f.textContent = elems[i];\n    el.appendChild(f);\n  }\n  return el;\n}\n","\"use strict\";\n\n/* Array utilities. */\nvar arrays = {\n  range: function(start, stop) {\n    var length = stop - start,\n        result = new Array(length),\n        i, j;\n\n    for (i = 0, j = start; i < length; i++, j++) {\n      result[i] = j;\n    }\n\n    return result;\n  },\n\n  find: function(array, valueOrPredicate) {\n    var length = array.length, i;\n\n    if (typeof valueOrPredicate === \"function\") {\n      for (i = 0; i < length; i++) {\n        if (valueOrPredicate(array[i])) {\n          return array[i];\n        }\n      }\n    } else {\n      for (i = 0; i < length; i++) {\n        if (array[i] === valueOrPredicate) {\n          return array[i];\n        }\n      }\n    }\n  },\n\n  indexOf: function(array, valueOrPredicate) {\n    var length = array.length, i;\n\n    if (typeof valueOrPredicate === \"function\") {\n      for (i = 0; i < length; i++) {\n        if (valueOrPredicate(array[i])) {\n          return i;\n        }\n      }\n    } else {\n      for (i = 0; i < length; i++) {\n        if (array[i] === valueOrPredicate) {\n          return i;\n        }\n      }\n    }\n\n    return -1;\n  },\n\n  contains: function(array, valueOrPredicate) {\n    return arrays.indexOf(array, valueOrPredicate) !== -1;\n  },\n\n  each: function(array, iterator) {\n    var length = array.length, i;\n\n    for (i = 0; i < length; i++) {\n      iterator(array[i], i);\n    }\n  },\n\n  map: function(array, iterator) {\n    var length = array.length,\n        result = new Array(length),\n        i;\n\n    for (i = 0; i < length; i++) {\n      result[i] = iterator(array[i], i);\n    }\n\n    return result;\n  },\n\n  pluck: function(array, key) {\n    return arrays.map(array, function (e) { return e[key]; });\n  },\n\n  every: function(array, predicate) {\n    var length = array.length, i;\n\n    for (i = 0; i < length; i++) {\n      if (!predicate(array[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  },\n\n  some: function(array, predicate) {\n    var length = array.length, i;\n\n    for (i = 0; i < length; i++) {\n      if (predicate(array[i])) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n};\n\nmodule.exports = arrays;\n","\"use strict\";\n\n/* Object utilities. */\nvar objects = {\n  keys: function(object) {\n    var result = [], key;\n\n    for (key in object) {\n      if (object.hasOwnProperty(key)) {\n        result.push(key);\n      }\n    }\n\n    return result;\n  },\n\n  values: function(object) {\n    var result = [], key;\n\n    for (key in object) {\n      if (object.hasOwnProperty(key)) {\n        result.push(object[key]);\n      }\n    }\n\n    return result;\n  },\n\n  clone: function(object) {\n    var result = {}, key;\n\n    for (key in object) {\n      if (object.hasOwnProperty(key)) {\n        result[key] = object[key];\n      }\n    }\n\n    return result;\n  },\n\n  defaults: function(object, defaults) {\n    var key;\n\n    for (key in defaults) {\n      if (defaults.hasOwnProperty(key)) {\n        if (!(key in object)) {\n          object[key] = defaults[key];\n        }\n      }\n    }\n  }\n};\n\nmodule.exports = objects;\n","\"use strict\";\n\n/* Class utilities */\nvar classes = {\n  subclass: function(child, parent) {\n    function ctor() { this.constructor = child; }\n    ctor.prototype = parent.prototype;\n    child.prototype = new ctor();\n  }\n};\n\nmodule.exports = classes;\n","\"use strict\";\n\nvar classes = require(\"./utils/classes\");\n\n/* Thrown when the grammar contains an error. */\nfunction GrammarError(message, location) {\n  this.name = \"GrammarError\";\n  this.message = message;\n  this.location = location;\n\n  if (typeof Error.captureStackTrace === \"function\") {\n    Error.captureStackTrace(this, GrammarError);\n  }\n}\n\nclasses.subclass(GrammarError, Error);\n\nmodule.exports = GrammarError;\n","/* eslint-env node, amd */\n/* eslint no-unused-vars: 0 */\n\n/*\n * Generated by PEG.js 0.10.0.\n *\n * http://pegjs.org/\n */\n\n\"use strict\";\n\nfunction peg$subclass(child, parent) {\n  function ctor() { this.constructor = child; }\n  ctor.prototype = parent.prototype;\n  child.prototype = new ctor();\n}\n\nfunction peg$SyntaxError(message, expected, found, location) {\n  this.message  = message;\n  this.expected = expected;\n  this.found    = found;\n  this.location = location;\n  this.name     = \"SyntaxError\";\n\n  if (typeof Error.captureStackTrace === \"function\") {\n    Error.captureStackTrace(this, peg$SyntaxError);\n  }\n}\n\npeg$subclass(peg$SyntaxError, Error);\n\npeg$SyntaxError.buildMessage = function(expected, found) {\n  var DESCRIBE_EXPECTATION_FNS = {\n        literal: function(expectation) {\n          return \"\\\"\" + literalEscape(expectation.text) + \"\\\"\";\n        },\n\n        \"class\": function(expectation) {\n          var escapedParts = \"\",\n              i;\n\n          for (i = 0; i < expectation.parts.length; i++) {\n            escapedParts += expectation.parts[i] instanceof Array\n              ? classEscape(expectation.parts[i][0]) + \"-\" + classEscape(expectation.parts[i][1])\n              : classEscape(expectation.parts[i]);\n          }\n\n          return \"[\" + (expectation.inverted ? \"^\" : \"\") + escapedParts + \"]\";\n        },\n\n        any: function(expectation) {\n          return \"any character\";\n        },\n\n        end: function(expectation) {\n          return \"end of input\";\n        },\n\n        other: function(expectation) {\n          return expectation.description;\n        }\n      };\n\n  function hex(ch) {\n    return ch.charCodeAt(0).toString(16).toUpperCase();\n  }\n\n  function literalEscape(s) {\n    return s\n      .replace(/\\\\/g, '\\\\\\\\')\n      .replace(/\"/g,  '\\\\\"')\n      .replace(/\\0/g, '\\\\0')\n      .replace(/\\t/g, '\\\\t')\n      .replace(/\\n/g, '\\\\n')\n      .replace(/\\r/g, '\\\\r')\n      .replace(/[\\x00-\\x0F]/g,          function(ch) { return '\\\\x0' + hex(ch); })\n      .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function(ch) { return '\\\\x'  + hex(ch); });\n  }\n\n  function classEscape(s) {\n    return s\n      .replace(/\\\\/g, '\\\\\\\\')\n      .replace(/\\]/g, '\\\\]')\n      .replace(/\\^/g, '\\\\^')\n      .replace(/-/g,  '\\\\-')\n      .replace(/\\0/g, '\\\\0')\n      .replace(/\\t/g, '\\\\t')\n      .replace(/\\n/g, '\\\\n')\n      .replace(/\\r/g, '\\\\r')\n      .replace(/[\\x00-\\x0F]/g,          function(ch) { return '\\\\x0' + hex(ch); })\n      .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function(ch) { return '\\\\x'  + hex(ch); });\n  }\n\n  function describeExpectation(expectation) {\n    return DESCRIBE_EXPECTATION_FNS[expectation.type](expectation);\n  }\n\n  function describeExpected(expected) {\n    var descriptions = new Array(expected.length),\n        i, j;\n\n    for (i = 0; i < expected.length; i++) {\n      descriptions[i] = describeExpectation(expected[i]);\n    }\n\n    descriptions.sort();\n\n    if (descriptions.length > 0) {\n      for (i = 1, j = 1; i < descriptions.length; i++) {\n        if (descriptions[i - 1] !== descriptions[i]) {\n          descriptions[j] = descriptions[i];\n          j++;\n        }\n      }\n      descriptions.length = j;\n    }\n\n    switch (descriptions.length) {\n      case 1:\n        return descriptions[0];\n\n      case 2:\n        return descriptions[0] + \" or \" + descriptions[1];\n\n      default:\n        return descriptions.slice(0, -1).join(\", \")\n          + \", or \"\n          + descriptions[descriptions.length - 1];\n    }\n  }\n\n  function describeFound(found) {\n    return found ? \"\\\"\" + literalEscape(found) + \"\\\"\" : \"end of input\";\n  }\n\n  return \"Expected \" + describeExpected(expected) + \" but \" + describeFound(found) + \" found.\";\n};\n\nfunction peg$parse(input, options) {\n  options = options !== void 0 ? options : {};\n\n  var peg$FAILED = {},\n\n      peg$startRuleFunctions = { Grammar: peg$parseGrammar },\n      peg$startRuleFunction  = peg$parseGrammar,\n\n      peg$c0 = function(initializer, rules) {\n            return {\n              type:        \"grammar\",\n              initializer: extractOptional(initializer, 0),\n              rules:       extractList(rules, 0),\n              location:    location()\n            };\n          },\n      peg$c1 = function(code) {\n            return { type: \"initializer\", code: code, location: location() };\n          },\n      peg$c2 = \"=\",\n      peg$c3 = peg$literalExpectation(\"=\", false),\n      peg$c4 = function(name, displayName, expression) {\n            return {\n              type:        \"rule\",\n              name:        name,\n              expression:  displayName !== null\n                ? {\n                    type:       \"named\",\n                    name:       displayName[0],\n                    expression: expression,\n                    location:   location()\n                  }\n                : expression,\n              location:    location()\n            };\n          },\n      peg$c5 = \"/\",\n      peg$c6 = peg$literalExpectation(\"/\", false),\n      peg$c7 = function(head, tail) {\n            return tail.length > 0\n              ? {\n                  type:         \"choice\",\n                  alternatives: buildList(head, tail, 3),\n                  location:     location()\n                }\n              : head;\n          },\n      peg$c8 = function(expression, code) {\n            return code !== null\n              ? {\n                  type:       \"action\",\n                  expression: expression,\n                  code:       code[1],\n                  location:   location()\n                }\n              : expression;\n          },\n      peg$c9 = function(head, tail) {\n            return tail.length > 0\n              ? {\n                  type:     \"sequence\",\n                  elements: buildList(head, tail, 1),\n                  location: location()\n                }\n              : head;\n          },\n      peg$c10 = \":\",\n      peg$c11 = peg$literalExpectation(\":\", false),\n      peg$c12 = function(label, expression) {\n            return {\n              type:       \"labeled\",\n              label:      label,\n              expression: expression,\n              location:   location()\n            };\n          },\n      peg$c13 = function(operator, expression) {\n            return {\n              type:       OPS_TO_PREFIXED_TYPES[operator],\n              expression: expression,\n              location:   location()\n            };\n          },\n      peg$c14 = \"$\",\n      peg$c15 = peg$literalExpectation(\"$\", false),\n      peg$c16 = \"&\",\n      peg$c17 = peg$literalExpectation(\"&\", false),\n      peg$c18 = \"!\",\n      peg$c19 = peg$literalExpectation(\"!\", false),\n      peg$c20 = function(expression, operator) {\n            return {\n              type:       OPS_TO_SUFFIXED_TYPES[operator],\n              expression: expression,\n              location:   location()\n            };\n          },\n      peg$c21 = \"?\",\n      peg$c22 = peg$literalExpectation(\"?\", false),\n      peg$c23 = \"*\",\n      peg$c24 = peg$literalExpectation(\"*\", false),\n      peg$c25 = \"+\",\n      peg$c26 = peg$literalExpectation(\"+\", false),\n      peg$c27 = \"(\",\n      peg$c28 = peg$literalExpectation(\"(\", false),\n      peg$c29 = \")\",\n      peg$c30 = peg$literalExpectation(\")\", false),\n      peg$c31 = function(expression) {\n            /*\n             * The purpose of the \"group\" AST node is just to isolate label scope. We\n             * don't need to put it around nodes that can't contain any labels or\n             * nodes that already isolate label scope themselves. This leaves us with\n             * \"labeled\" and \"sequence\".\n             */\n            return expression.type === 'labeled' || expression.type === 'sequence'\n                ? { type: \"group\", expression: expression }\n                : expression;\n          },\n      peg$c32 = function(name) {\n            return { type: \"rule_ref\", name: name, location: location() };\n          },\n      peg$c33 = function(operator, code) {\n            return {\n              type:     OPS_TO_SEMANTIC_PREDICATE_TYPES[operator],\n              code:     code,\n              location: location()\n            };\n          },\n      peg$c34 = peg$anyExpectation(),\n      peg$c35 = peg$otherExpectation(\"whitespace\"),\n      peg$c36 = \"\\t\",\n      peg$c37 = peg$literalExpectation(\"\\t\", false),\n      peg$c38 = \"\\x0B\",\n      peg$c39 = peg$literalExpectation(\"\\x0B\", false),\n      peg$c40 = \"\\f\",\n      peg$c41 = peg$literalExpectation(\"\\f\", false),\n      peg$c42 = \" \",\n      peg$c43 = peg$literalExpectation(\" \", false),\n      peg$c44 = \"\\xA0\",\n      peg$c45 = peg$literalExpectation(\"\\xA0\", false),\n      peg$c46 = \"\\uFEFF\",\n      peg$c47 = peg$literalExpectation(\"\\uFEFF\", false),\n      peg$c48 = /^[\\n\\r\\u2028\\u2029]/,\n      peg$c49 = peg$classExpectation([\"\\n\", \"\\r\", \"\\u2028\", \"\\u2029\"], false, false),\n      peg$c50 = peg$otherExpectation(\"end of line\"),\n      peg$c51 = \"\\n\",\n      peg$c52 = peg$literalExpectation(\"\\n\", false),\n      peg$c53 = \"\\r\\n\",\n      peg$c54 = peg$literalExpectation(\"\\r\\n\", false),\n      peg$c55 = \"\\r\",\n      peg$c56 = peg$literalExpectation(\"\\r\", false),\n      peg$c57 = \"\\u2028\",\n      peg$c58 = peg$literalExpectation(\"\\u2028\", false),\n      peg$c59 = \"\\u2029\",\n      peg$c60 = peg$literalExpectation(\"\\u2029\", false),\n      peg$c61 = peg$otherExpectation(\"comment\"),\n      peg$c62 = \"/*\",\n      peg$c63 = peg$literalExpectation(\"/*\", false),\n      peg$c64 = \"*/\",\n      peg$c65 = peg$literalExpectation(\"*/\", false),\n      peg$c66 = \"//\",\n      peg$c67 = peg$literalExpectation(\"//\", false),\n      peg$c68 = function(name) { return name; },\n      peg$c69 = peg$otherExpectation(\"identifier\"),\n      peg$c70 = function(head, tail) { return head + tail.join(\"\"); },\n      peg$c71 = \"_\",\n      peg$c72 = peg$literalExpectation(\"_\", false),\n      peg$c73 = \"\\\\\",\n      peg$c74 = peg$literalExpectation(\"\\\\\", false),\n      peg$c75 = function(sequence) { return sequence; },\n      peg$c76 = \"\\u200C\",\n      peg$c77 = peg$literalExpectation(\"\\u200C\", false),\n      peg$c78 = \"\\u200D\",\n      peg$c79 = peg$literalExpectation(\"\\u200D\", false),\n      peg$c80 = peg$otherExpectation(\"literal\"),\n      peg$c81 = \"i\",\n      peg$c82 = peg$literalExpectation(\"i\", false),\n      peg$c83 = function(value, ignoreCase) {\n            return {\n              type:       \"literal\",\n              value:      value,\n              ignoreCase: ignoreCase !== null,\n              location:   location()\n            };\n          },\n      peg$c84 = peg$otherExpectation(\"string\"),\n      peg$c85 = \"\\\"\",\n      peg$c86 = peg$literalExpectation(\"\\\"\", false),\n      peg$c87 = function(chars) { return chars.join(\"\"); },\n      peg$c88 = \"'\",\n      peg$c89 = peg$literalExpectation(\"'\", false),\n      peg$c90 = function() { return text(); },\n      peg$c91 = peg$otherExpectation(\"character class\"),\n      peg$c92 = \"[\",\n      peg$c93 = peg$literalExpectation(\"[\", false),\n      peg$c94 = \"^\",\n      peg$c95 = peg$literalExpectation(\"^\", false),\n      peg$c96 = \"]\",\n      peg$c97 = peg$literalExpectation(\"]\", false),\n      peg$c98 = function(inverted, parts, ignoreCase) {\n            return {\n              type:       \"class\",\n              parts:      filterEmptyStrings(parts),\n              inverted:   inverted !== null,\n              ignoreCase: ignoreCase !== null,\n              location:   location()\n            };\n          },\n      peg$c99 = \"-\",\n      peg$c100 = peg$literalExpectation(\"-\", false),\n      peg$c101 = function(begin, end) {\n            if (begin.charCodeAt(0) > end.charCodeAt(0)) {\n              error(\n                \"Invalid character range: \" + text() + \".\"\n              );\n            }\n\n            return [begin, end];\n          },\n      peg$c102 = function() { return \"\"; },\n      peg$c103 = \"0\",\n      peg$c104 = peg$literalExpectation(\"0\", false),\n      peg$c105 = function() { return \"\\0\"; },\n      peg$c106 = \"b\",\n      peg$c107 = peg$literalExpectation(\"b\", false),\n      peg$c108 = function() { return \"\\b\";   },\n      peg$c109 = \"f\",\n      peg$c110 = peg$literalExpectation(\"f\", false),\n      peg$c111 = function() { return \"\\f\";   },\n      peg$c112 = \"n\",\n      peg$c113 = peg$literalExpectation(\"n\", false),\n      peg$c114 = function() { return \"\\n\";   },\n      peg$c115 = \"r\",\n      peg$c116 = peg$literalExpectation(\"r\", false),\n      peg$c117 = function() { return \"\\r\";   },\n      peg$c118 = \"t\",\n      peg$c119 = peg$literalExpectation(\"t\", false),\n      peg$c120 = function() { return \"\\t\";   },\n      peg$c121 = \"v\",\n      peg$c122 = peg$literalExpectation(\"v\", false),\n      peg$c123 = function() { return \"\\x0B\"; },\n      peg$c124 = \"x\",\n      peg$c125 = peg$literalExpectation(\"x\", false),\n      peg$c126 = \"u\",\n      peg$c127 = peg$literalExpectation(\"u\", false),\n      peg$c128 = function(digits) {\n            return String.fromCharCode(parseInt(digits, 16));\n          },\n      peg$c129 = /^[0-9]/,\n      peg$c130 = peg$classExpectation([[\"0\", \"9\"]], false, false),\n      peg$c131 = /^[0-9a-f]/i,\n      peg$c132 = peg$classExpectation([[\"0\", \"9\"], [\"a\", \"f\"]], false, true),\n      peg$c133 = \".\",\n      peg$c134 = peg$literalExpectation(\".\", false),\n      peg$c135 = function() { return { type: \"any\", location: location() }; },\n      peg$c136 = peg$otherExpectation(\"code block\"),\n      peg$c137 = \"{\",\n      peg$c138 = peg$literalExpectation(\"{\", false),\n      peg$c139 = \"}\",\n      peg$c140 = peg$literalExpectation(\"}\", false),\n      peg$c141 = function(code) { return code; },\n      peg$c142 = /^[{}]/,\n      peg$c143 = peg$classExpectation([\"{\", \"}\"], false, false),\n      peg$c144 = /^[a-z\\xB5\\xDF-\\xF6\\xF8-\\xFF\\u0101\\u0103\\u0105\\u0107\\u0109\\u010B\\u010D\\u010F\\u0111\\u0113\\u0115\\u0117\\u0119\\u011B\\u011D\\u011F\\u0121\\u0123\\u0125\\u0127\\u0129\\u012B\\u012D\\u012F\\u0131\\u0133\\u0135\\u0137-\\u0138\\u013A\\u013C\\u013E\\u0140\\u0142\\u0144\\u0146\\u0148-\\u0149\\u014B\\u014D\\u014F\\u0151\\u0153\\u0155\\u0157\\u0159\\u015B\\u015D\\u015F\\u0161\\u0163\\u0165\\u0167\\u0169\\u016B\\u016D\\u016F\\u0171\\u0173\\u0175\\u0177\\u017A\\u017C\\u017E-\\u0180\\u0183\\u0185\\u0188\\u018C-\\u018D\\u0192\\u0195\\u0199-\\u019B\\u019E\\u01A1\\u01A3\\u01A5\\u01A8\\u01AA-\\u01AB\\u01AD\\u01B0\\u01B4\\u01B6\\u01B9-\\u01BA\\u01BD-\\u01BF\\u01C6\\u01C9\\u01CC\\u01CE\\u01D0\\u01D2\\u01D4\\u01D6\\u01D8\\u01DA\\u01DC-\\u01DD\\u01DF\\u01E1\\u01E3\\u01E5\\u01E7\\u01E9\\u01EB\\u01ED\\u01EF-\\u01F0\\u01F3\\u01F5\\u01F9\\u01FB\\u01FD\\u01FF\\u0201\\u0203\\u0205\\u0207\\u0209\\u020B\\u020D\\u020F\\u0211\\u0213\\u0215\\u0217\\u0219\\u021B\\u021D\\u021F\\u0221\\u0223\\u0225\\u0227\\u0229\\u022B\\u022D\\u022F\\u0231\\u0233-\\u0239\\u023C\\u023F-\\u0240\\u0242\\u0247\\u0249\\u024B\\u024D\\u024F-\\u0293\\u0295-\\u02AF\\u0371\\u0373\\u0377\\u037B-\\u037D\\u0390\\u03AC-\\u03CE\\u03D0-\\u03D1\\u03D5-\\u03D7\\u03D9\\u03DB\\u03DD\\u03DF\\u03E1\\u03E3\\u03E5\\u03E7\\u03E9\\u03EB\\u03ED\\u03EF-\\u03F3\\u03F5\\u03F8\\u03FB-\\u03FC\\u0430-\\u045F\\u0461\\u0463\\u0465\\u0467\\u0469\\u046B\\u046D\\u046F\\u0471\\u0473\\u0475\\u0477\\u0479\\u047B\\u047D\\u047F\\u0481\\u048B\\u048D\\u048F\\u0491\\u0493\\u0495\\u0497\\u0499\\u049B\\u049D\\u049F\\u04A1\\u04A3\\u04A5\\u04A7\\u04A9\\u04AB\\u04AD\\u04AF\\u04B1\\u04B3\\u04B5\\u04B7\\u04B9\\u04BB\\u04BD\\u04BF\\u04C2\\u04C4\\u04C6\\u04C8\\u04CA\\u04CC\\u04CE-\\u04CF\\u04D1\\u04D3\\u04D5\\u04D7\\u04D9\\u04DB\\u04DD\\u04DF\\u04E1\\u04E3\\u04E5\\u04E7\\u04E9\\u04EB\\u04ED\\u04EF\\u04F1\\u04F3\\u04F5\\u04F7\\u04F9\\u04FB\\u04FD\\u04FF\\u0501\\u0503\\u0505\\u0507\\u0509\\u050B\\u050D\\u050F\\u0511\\u0513\\u0515\\u0517\\u0519\\u051B\\u051D\\u051F\\u0521\\u0523\\u0525\\u0527\\u0529\\u052B\\u052D\\u052F\\u0561-\\u0587\\u13F8-\\u13FD\\u1D00-\\u1D2B\\u1D6B-\\u1D77\\u1D79-\\u1D9A\\u1E01\\u1E03\\u1E05\\u1E07\\u1E09\\u1E0B\\u1E0D\\u1E0F\\u1E11\\u1E13\\u1E15\\u1E17\\u1E19\\u1E1B\\u1E1D\\u1E1F\\u1E21\\u1E23\\u1E25\\u1E27\\u1E29\\u1E2B\\u1E2D\\u1E2F\\u1E31\\u1E33\\u1E35\\u1E37\\u1E39\\u1E3B\\u1E3D\\u1E3F\\u1E41\\u1E43\\u1E45\\u1E47\\u1E49\\u1E4B\\u1E4D\\u1E4F\\u1E51\\u1E53\\u1E55\\u1E57\\u1E59\\u1E5B\\u1E5D\\u1E5F\\u1E61\\u1E63\\u1E65\\u1E67\\u1E69\\u1E6B\\u1E6D\\u1E6F\\u1E71\\u1E73\\u1E75\\u1E77\\u1E79\\u1E7B\\u1E7D\\u1E7F\\u1E81\\u1E83\\u1E85\\u1E87\\u1E89\\u1E8B\\u1E8D\\u1E8F\\u1E91\\u1E93\\u1E95-\\u1E9D\\u1E9F\\u1EA1\\u1EA3\\u1EA5\\u1EA7\\u1EA9\\u1EAB\\u1EAD\\u1EAF\\u1EB1\\u1EB3\\u1EB5\\u1EB7\\u1EB9\\u1EBB\\u1EBD\\u1EBF\\u1EC1\\u1EC3\\u1EC5\\u1EC7\\u1EC9\\u1ECB\\u1ECD\\u1ECF\\u1ED1\\u1ED3\\u1ED5\\u1ED7\\u1ED9\\u1EDB\\u1EDD\\u1EDF\\u1EE1\\u1EE3\\u1EE5\\u1EE7\\u1EE9\\u1EEB\\u1EED\\u1EEF\\u1EF1\\u1EF3\\u1EF5\\u1EF7\\u1EF9\\u1EFB\\u1EFD\\u1EFF-\\u1F07\\u1F10-\\u1F15\\u1F20-\\u1F27\\u1F30-\\u1F37\\u1F40-\\u1F45\\u1F50-\\u1F57\\u1F60-\\u1F67\\u1F70-\\u1F7D\\u1F80-\\u1F87\\u1F90-\\u1F97\\u1FA0-\\u1FA7\\u1FB0-\\u1FB4\\u1FB6-\\u1FB7\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FC7\\u1FD0-\\u1FD3\\u1FD6-\\u1FD7\\u1FE0-\\u1FE7\\u1FF2-\\u1FF4\\u1FF6-\\u1FF7\\u210A\\u210E-\\u210F\\u2113\\u212F\\u2134\\u2139\\u213C-\\u213D\\u2146-\\u2149\\u214E\\u2184\\u2C30-\\u2C5E\\u2C61\\u2C65-\\u2C66\\u2C68\\u2C6A\\u2C6C\\u2C71\\u2C73-\\u2C74\\u2C76-\\u2C7B\\u2C81\\u2C83\\u2C85\\u2C87\\u2C89\\u2C8B\\u2C8D\\u2C8F\\u2C91\\u2C93\\u2C95\\u2C97\\u2C99\\u2C9B\\u2C9D\\u2C9F\\u2CA1\\u2CA3\\u2CA5\\u2CA7\\u2CA9\\u2CAB\\u2CAD\\u2CAF\\u2CB1\\u2CB3\\u2CB5\\u2CB7\\u2CB9\\u2CBB\\u2CBD\\u2CBF\\u2CC1\\u2CC3\\u2CC5\\u2CC7\\u2CC9\\u2CCB\\u2CCD\\u2CCF\\u2CD1\\u2CD3\\u2CD5\\u2CD7\\u2CD9\\u2CDB\\u2CDD\\u2CDF\\u2CE1\\u2CE3-\\u2CE4\\u2CEC\\u2CEE\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\uA641\\uA643\\uA645\\uA647\\uA649\\uA64B\\uA64D\\uA64F\\uA651\\uA653\\uA655\\uA657\\uA659\\uA65B\\uA65D\\uA65F\\uA661\\uA663\\uA665\\uA667\\uA669\\uA66B\\uA66D\\uA681\\uA683\\uA685\\uA687\\uA689\\uA68B\\uA68D\\uA68F\\uA691\\uA693\\uA695\\uA697\\uA699\\uA69B\\uA723\\uA725\\uA727\\uA729\\uA72B\\uA72D\\uA72F-\\uA731\\uA733\\uA735\\uA737\\uA739\\uA73B\\uA73D\\uA73F\\uA741\\uA743\\uA745\\uA747\\uA749\\uA74B\\uA74D\\uA74F\\uA751\\uA753\\uA755\\uA757\\uA759\\uA75B\\uA75D\\uA75F\\uA761\\uA763\\uA765\\uA767\\uA769\\uA76B\\uA76D\\uA76F\\uA771-\\uA778\\uA77A\\uA77C\\uA77F\\uA781\\uA783\\uA785\\uA787\\uA78C\\uA78E\\uA791\\uA793-\\uA795\\uA797\\uA799\\uA79B\\uA79D\\uA79F\\uA7A1\\uA7A3\\uA7A5\\uA7A7\\uA7A9\\uA7B5\\uA7B7\\uA7FA\\uAB30-\\uAB5A\\uAB60-\\uAB65\\uAB70-\\uABBF\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFF41-\\uFF5A]/,\n      peg$c145 = peg$classExpectation([[\"a\", \"z\"], \"\\xB5\", [\"\\xDF\", \"\\xF6\"], [\"\\xF8\", \"\\xFF\"], \"\\u0101\", \"\\u0103\", \"\\u0105\", \"\\u0107\", \"\\u0109\", \"\\u010B\", \"\\u010D\", \"\\u010F\", \"\\u0111\", \"\\u0113\", \"\\u0115\", \"\\u0117\", \"\\u0119\", \"\\u011B\", \"\\u011D\", \"\\u011F\", \"\\u0121\", \"\\u0123\", \"\\u0125\", \"\\u0127\", \"\\u0129\", \"\\u012B\", \"\\u012D\", \"\\u012F\", \"\\u0131\", \"\\u0133\", \"\\u0135\", [\"\\u0137\", \"\\u0138\"], \"\\u013A\", \"\\u013C\", \"\\u013E\", \"\\u0140\", \"\\u0142\", \"\\u0144\", \"\\u0146\", [\"\\u0148\", \"\\u0149\"], \"\\u014B\", \"\\u014D\", \"\\u014F\", \"\\u0151\", \"\\u0153\", \"\\u0155\", \"\\u0157\", \"\\u0159\", \"\\u015B\", \"\\u015D\", \"\\u015F\", \"\\u0161\", \"\\u0163\", \"\\u0165\", \"\\u0167\", \"\\u0169\", \"\\u016B\", \"\\u016D\", \"\\u016F\", \"\\u0171\", \"\\u0173\", \"\\u0175\", \"\\u0177\", \"\\u017A\", \"\\u017C\", [\"\\u017E\", \"\\u0180\"], \"\\u0183\", \"\\u0185\", \"\\u0188\", [\"\\u018C\", \"\\u018D\"], \"\\u0192\", \"\\u0195\", [\"\\u0199\", \"\\u019B\"], \"\\u019E\", \"\\u01A1\", \"\\u01A3\", \"\\u01A5\", \"\\u01A8\", [\"\\u01AA\", \"\\u01AB\"], \"\\u01AD\", \"\\u01B0\", \"\\u01B4\", \"\\u01B6\", [\"\\u01B9\", \"\\u01BA\"], [\"\\u01BD\", \"\\u01BF\"], \"\\u01C6\", \"\\u01C9\", \"\\u01CC\", \"\\u01CE\", \"\\u01D0\", \"\\u01D2\", \"\\u01D4\", \"\\u01D6\", \"\\u01D8\", \"\\u01DA\", [\"\\u01DC\", \"\\u01DD\"], \"\\u01DF\", \"\\u01E1\", \"\\u01E3\", \"\\u01E5\", \"\\u01E7\", \"\\u01E9\", \"\\u01EB\", \"\\u01ED\", [\"\\u01EF\", \"\\u01F0\"], \"\\u01F3\", \"\\u01F5\", \"\\u01F9\", \"\\u01FB\", \"\\u01FD\", \"\\u01FF\", \"\\u0201\", \"\\u0203\", \"\\u0205\", \"\\u0207\", \"\\u0209\", \"\\u020B\", \"\\u020D\", \"\\u020F\", \"\\u0211\", \"\\u0213\", \"\\u0215\", \"\\u0217\", \"\\u0219\", \"\\u021B\", \"\\u021D\", \"\\u021F\", \"\\u0221\", \"\\u0223\", \"\\u0225\", \"\\u0227\", \"\\u0229\", \"\\u022B\", \"\\u022D\", \"\\u022F\", \"\\u0231\", [\"\\u0233\", \"\\u0239\"], \"\\u023C\", [\"\\u023F\", \"\\u0240\"], \"\\u0242\", \"\\u0247\", \"\\u0249\", \"\\u024B\", \"\\u024D\", [\"\\u024F\", \"\\u0293\"], [\"\\u0295\", \"\\u02AF\"], \"\\u0371\", \"\\u0373\", \"\\u0377\", [\"\\u037B\", \"\\u037D\"], \"\\u0390\", [\"\\u03AC\", \"\\u03CE\"], [\"\\u03D0\", \"\\u03D1\"], [\"\\u03D5\", \"\\u03D7\"], \"\\u03D9\", \"\\u03DB\", \"\\u03DD\", \"\\u03DF\", \"\\u03E1\", \"\\u03E3\", \"\\u03E5\", \"\\u03E7\", \"\\u03E9\", \"\\u03EB\", \"\\u03ED\", [\"\\u03EF\", \"\\u03F3\"], \"\\u03F5\", \"\\u03F8\", [\"\\u03FB\", \"\\u03FC\"], [\"\\u0430\", \"\\u045F\"], \"\\u0461\", \"\\u0463\", \"\\u0465\", \"\\u0467\", \"\\u0469\", \"\\u046B\", \"\\u046D\", \"\\u046F\", \"\\u0471\", \"\\u0473\", \"\\u0475\", \"\\u0477\", \"\\u0479\", \"\\u047B\", \"\\u047D\", \"\\u047F\", \"\\u0481\", \"\\u048B\", \"\\u048D\", \"\\u048F\", \"\\u0491\", \"\\u0493\", \"\\u0495\", \"\\u0497\", \"\\u0499\", \"\\u049B\", \"\\u049D\", \"\\u049F\", \"\\u04A1\", \"\\u04A3\", \"\\u04A5\", \"\\u04A7\", \"\\u04A9\", \"\\u04AB\", \"\\u04AD\", \"\\u04AF\", \"\\u04B1\", \"\\u04B3\", \"\\u04B5\", \"\\u04B7\", \"\\u04B9\", \"\\u04BB\", \"\\u04BD\", \"\\u04BF\", \"\\u04C2\", \"\\u04C4\", \"\\u04C6\", \"\\u04C8\", \"\\u04CA\", \"\\u04CC\", [\"\\u04CE\", \"\\u04CF\"], \"\\u04D1\", \"\\u04D3\", \"\\u04D5\", \"\\u04D7\", \"\\u04D9\", \"\\u04DB\", \"\\u04DD\", \"\\u04DF\", \"\\u04E1\", \"\\u04E3\", \"\\u04E5\", \"\\u04E7\", \"\\u04E9\", \"\\u04EB\", \"\\u04ED\", \"\\u04EF\", \"\\u04F1\", \"\\u04F3\", \"\\u04F5\", \"\\u04F7\", \"\\u04F9\", \"\\u04FB\", \"\\u04FD\", \"\\u04FF\", \"\\u0501\", \"\\u0503\", \"\\u0505\", \"\\u0507\", \"\\u0509\", \"\\u050B\", \"\\u050D\", \"\\u050F\", \"\\u0511\", \"\\u0513\", \"\\u0515\", \"\\u0517\", \"\\u0519\", \"\\u051B\", \"\\u051D\", \"\\u051F\", \"\\u0521\", \"\\u0523\", \"\\u0525\", \"\\u0527\", \"\\u0529\", \"\\u052B\", \"\\u052D\", \"\\u052F\", [\"\\u0561\", \"\\u0587\"], [\"\\u13F8\", \"\\u13FD\"], [\"\\u1D00\", \"\\u1D2B\"], [\"\\u1D6B\", \"\\u1D77\"], [\"\\u1D79\", \"\\u1D9A\"], \"\\u1E01\", \"\\u1E03\", \"\\u1E05\", \"\\u1E07\", \"\\u1E09\", \"\\u1E0B\", \"\\u1E0D\", \"\\u1E0F\", \"\\u1E11\", \"\\u1E13\", \"\\u1E15\", \"\\u1E17\", \"\\u1E19\", \"\\u1E1B\", \"\\u1E1D\", \"\\u1E1F\", \"\\u1E21\", \"\\u1E23\", \"\\u1E25\", \"\\u1E27\", \"\\u1E29\", \"\\u1E2B\", \"\\u1E2D\", \"\\u1E2F\", \"\\u1E31\", \"\\u1E33\", \"\\u1E35\", \"\\u1E37\", \"\\u1E39\", \"\\u1E3B\", \"\\u1E3D\", \"\\u1E3F\", \"\\u1E41\", \"\\u1E43\", \"\\u1E45\", \"\\u1E47\", \"\\u1E49\", \"\\u1E4B\", \"\\u1E4D\", \"\\u1E4F\", \"\\u1E51\", \"\\u1E53\", \"\\u1E55\", \"\\u1E57\", \"\\u1E59\", \"\\u1E5B\", \"\\u1E5D\", \"\\u1E5F\", \"\\u1E61\", \"\\u1E63\", \"\\u1E65\", \"\\u1E67\", \"\\u1E69\", \"\\u1E6B\", \"\\u1E6D\", \"\\u1E6F\", \"\\u1E71\", \"\\u1E73\", \"\\u1E75\", \"\\u1E77\", \"\\u1E79\", \"\\u1E7B\", \"\\u1E7D\", \"\\u1E7F\", \"\\u1E81\", \"\\u1E83\", \"\\u1E85\", \"\\u1E87\", \"\\u1E89\", \"\\u1E8B\", \"\\u1E8D\", \"\\u1E8F\", \"\\u1E91\", \"\\u1E93\", [\"\\u1E95\", \"\\u1E9D\"], \"\\u1E9F\", \"\\u1EA1\", \"\\u1EA3\", \"\\u1EA5\", \"\\u1EA7\", \"\\u1EA9\", \"\\u1EAB\", \"\\u1EAD\", \"\\u1EAF\", \"\\u1EB1\", \"\\u1EB3\", \"\\u1EB5\", \"\\u1EB7\", \"\\u1EB9\", \"\\u1EBB\", \"\\u1EBD\", \"\\u1EBF\", \"\\u1EC1\", \"\\u1EC3\", \"\\u1EC5\", \"\\u1EC7\", \"\\u1EC9\", \"\\u1ECB\", \"\\u1ECD\", \"\\u1ECF\", \"\\u1ED1\", \"\\u1ED3\", \"\\u1ED5\", \"\\u1ED7\", \"\\u1ED9\", \"\\u1EDB\", \"\\u1EDD\", \"\\u1EDF\", \"\\u1EE1\", \"\\u1EE3\", \"\\u1EE5\", \"\\u1EE7\", \"\\u1EE9\", \"\\u1EEB\", \"\\u1EED\", \"\\u1EEF\", \"\\u1EF1\", \"\\u1EF3\", \"\\u1EF5\", \"\\u1EF7\", \"\\u1EF9\", \"\\u1EFB\", \"\\u1EFD\", [\"\\u1EFF\", \"\\u1F07\"], [\"\\u1F10\", \"\\u1F15\"], [\"\\u1F20\", \"\\u1F27\"], [\"\\u1F30\", \"\\u1F37\"], [\"\\u1F40\", \"\\u1F45\"], [\"\\u1F50\", \"\\u1F57\"], [\"\\u1F60\", \"\\u1F67\"], [\"\\u1F70\", \"\\u1F7D\"], [\"\\u1F80\", \"\\u1F87\"], [\"\\u1F90\", \"\\u1F97\"], [\"\\u1FA0\", \"\\u1FA7\"], [\"\\u1FB0\", \"\\u1FB4\"], [\"\\u1FB6\", \"\\u1FB7\"], \"\\u1FBE\", [\"\\u1FC2\", \"\\u1FC4\"], [\"\\u1FC6\", \"\\u1FC7\"], [\"\\u1FD0\", \"\\u1FD3\"], [\"\\u1FD6\", \"\\u1FD7\"], [\"\\u1FE0\", \"\\u1FE7\"], [\"\\u1FF2\", \"\\u1FF4\"], [\"\\u1FF6\", \"\\u1FF7\"], \"\\u210A\", [\"\\u210E\", \"\\u210F\"], \"\\u2113\", \"\\u212F\", \"\\u2134\", \"\\u2139\", [\"\\u213C\", \"\\u213D\"], [\"\\u2146\", \"\\u2149\"], \"\\u214E\", \"\\u2184\", [\"\\u2C30\", \"\\u2C5E\"], \"\\u2C61\", [\"\\u2C65\", \"\\u2C66\"], \"\\u2C68\", \"\\u2C6A\", \"\\u2C6C\", \"\\u2C71\", [\"\\u2C73\", \"\\u2C74\"], [\"\\u2C76\", \"\\u2C7B\"], \"\\u2C81\", \"\\u2C83\", \"\\u2C85\", \"\\u2C87\", \"\\u2C89\", \"\\u2C8B\", \"\\u2C8D\", \"\\u2C8F\", \"\\u2C91\", \"\\u2C93\", \"\\u2C95\", \"\\u2C97\", \"\\u2C99\", \"\\u2C9B\", \"\\u2C9D\", \"\\u2C9F\", \"\\u2CA1\", \"\\u2CA3\", \"\\u2CA5\", \"\\u2CA7\", \"\\u2CA9\", \"\\u2CAB\", \"\\u2CAD\", \"\\u2CAF\", \"\\u2CB1\", \"\\u2CB3\", \"\\u2CB5\", \"\\u2CB7\", \"\\u2CB9\", \"\\u2CBB\", \"\\u2CBD\", \"\\u2CBF\", \"\\u2CC1\", \"\\u2CC3\", \"\\u2CC5\", \"\\u2CC7\", \"\\u2CC9\", \"\\u2CCB\", \"\\u2CCD\", \"\\u2CCF\", \"\\u2CD1\", \"\\u2CD3\", \"\\u2CD5\", \"\\u2CD7\", \"\\u2CD9\", \"\\u2CDB\", \"\\u2CDD\", \"\\u2CDF\", \"\\u2CE1\", [\"\\u2CE3\", \"\\u2CE4\"], \"\\u2CEC\", \"\\u2CEE\", \"\\u2CF3\", [\"\\u2D00\", \"\\u2D25\"], \"\\u2D27\", \"\\u2D2D\", \"\\uA641\", \"\\uA643\", \"\\uA645\", \"\\uA647\", \"\\uA649\", \"\\uA64B\", \"\\uA64D\", \"\\uA64F\", \"\\uA651\", \"\\uA653\", \"\\uA655\", \"\\uA657\", \"\\uA659\", \"\\uA65B\", \"\\uA65D\", \"\\uA65F\", \"\\uA661\", \"\\uA663\", \"\\uA665\", \"\\uA667\", \"\\uA669\", \"\\uA66B\", \"\\uA66D\", \"\\uA681\", \"\\uA683\", \"\\uA685\", \"\\uA687\", \"\\uA689\", \"\\uA68B\", \"\\uA68D\", \"\\uA68F\", \"\\uA691\", \"\\uA693\", \"\\uA695\", \"\\uA697\", \"\\uA699\", \"\\uA69B\", \"\\uA723\", \"\\uA725\", \"\\uA727\", \"\\uA729\", \"\\uA72B\", \"\\uA72D\", [\"\\uA72F\", \"\\uA731\"], \"\\uA733\", \"\\uA735\", \"\\uA737\", \"\\uA739\", \"\\uA73B\", \"\\uA73D\", \"\\uA73F\", \"\\uA741\", \"\\uA743\", \"\\uA745\", \"\\uA747\", \"\\uA749\", \"\\uA74B\", \"\\uA74D\", \"\\uA74F\", \"\\uA751\", \"\\uA753\", \"\\uA755\", \"\\uA757\", \"\\uA759\", \"\\uA75B\", \"\\uA75D\", \"\\uA75F\", \"\\uA761\", \"\\uA763\", \"\\uA765\", \"\\uA767\", \"\\uA769\", \"\\uA76B\", \"\\uA76D\", \"\\uA76F\", [\"\\uA771\", \"\\uA778\"], \"\\uA77A\", \"\\uA77C\", \"\\uA77F\", \"\\uA781\", \"\\uA783\", \"\\uA785\", \"\\uA787\", \"\\uA78C\", \"\\uA78E\", \"\\uA791\", [\"\\uA793\", \"\\uA795\"], \"\\uA797\", \"\\uA799\", \"\\uA79B\", \"\\uA79D\", \"\\uA79F\", \"\\uA7A1\", \"\\uA7A3\", \"\\uA7A5\", \"\\uA7A7\", \"\\uA7A9\", \"\\uA7B5\", \"\\uA7B7\", \"\\uA7FA\", [\"\\uAB30\", \"\\uAB5A\"], [\"\\uAB60\", \"\\uAB65\"], [\"\\uAB70\", \"\\uABBF\"], [\"\\uFB00\", \"\\uFB06\"], [\"\\uFB13\", \"\\uFB17\"], [\"\\uFF41\", \"\\uFF5A\"]], false, false),\n      peg$c146 = /^[\\u02B0-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0374\\u037A\\u0559\\u0640\\u06E5-\\u06E6\\u07F4-\\u07F5\\u07FA\\u081A\\u0824\\u0828\\u0971\\u0E46\\u0EC6\\u10FC\\u17D7\\u1843\\u1AA7\\u1C78-\\u1C7D\\u1D2C-\\u1D6A\\u1D78\\u1D9B-\\u1DBF\\u2071\\u207F\\u2090-\\u209C\\u2C7C-\\u2C7D\\u2D6F\\u2E2F\\u3005\\u3031-\\u3035\\u303B\\u309D-\\u309E\\u30FC-\\u30FE\\uA015\\uA4F8-\\uA4FD\\uA60C\\uA67F\\uA69C-\\uA69D\\uA717-\\uA71F\\uA770\\uA788\\uA7F8-\\uA7F9\\uA9CF\\uA9E6\\uAA70\\uAADD\\uAAF3-\\uAAF4\\uAB5C-\\uAB5F\\uFF70\\uFF9E-\\uFF9F]/,\n      peg$c147 = peg$classExpectation([[\"\\u02B0\", \"\\u02C1\"], [\"\\u02C6\", \"\\u02D1\"], [\"\\u02E0\", \"\\u02E4\"], \"\\u02EC\", \"\\u02EE\", \"\\u0374\", \"\\u037A\", \"\\u0559\", \"\\u0640\", [\"\\u06E5\", \"\\u06E6\"], [\"\\u07F4\", \"\\u07F5\"], \"\\u07FA\", \"\\u081A\", \"\\u0824\", \"\\u0828\", \"\\u0971\", \"\\u0E46\", \"\\u0EC6\", \"\\u10FC\", \"\\u17D7\", \"\\u1843\", \"\\u1AA7\", [\"\\u1C78\", \"\\u1C7D\"], [\"\\u1D2C\", \"\\u1D6A\"], \"\\u1D78\", [\"\\u1D9B\", \"\\u1DBF\"], \"\\u2071\", \"\\u207F\", [\"\\u2090\", \"\\u209C\"], [\"\\u2C7C\", \"\\u2C7D\"], \"\\u2D6F\", \"\\u2E2F\", \"\\u3005\", [\"\\u3031\", \"\\u3035\"], \"\\u303B\", [\"\\u309D\", \"\\u309E\"], [\"\\u30FC\", \"\\u30FE\"], \"\\uA015\", [\"\\uA4F8\", \"\\uA4FD\"], \"\\uA60C\", \"\\uA67F\", [\"\\uA69C\", \"\\uA69D\"], [\"\\uA717\", \"\\uA71F\"], \"\\uA770\", \"\\uA788\", [\"\\uA7F8\", \"\\uA7F9\"], \"\\uA9CF\", \"\\uA9E6\", \"\\uAA70\", \"\\uAADD\", [\"\\uAAF3\", \"\\uAAF4\"], [\"\\uAB5C\", \"\\uAB5F\"], \"\\uFF70\", [\"\\uFF9E\", \"\\uFF9F\"]], false, false),\n      peg$c148 = /^[\\xAA\\xBA\\u01BB\\u01C0-\\u01C3\\u0294\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u063F\\u0641-\\u064A\\u066E-\\u066F\\u0671-\\u06D3\\u06D5\\u06EE-\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u0800-\\u0815\\u0840-\\u0858\\u08A0-\\u08B4\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0972-\\u0980\\u0985-\\u098C\\u098F-\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC-\\u09DD\\u09DF-\\u09E1\\u09F0-\\u09F1\\u0A05-\\u0A0A\\u0A0F-\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32-\\u0A33\\u0A35-\\u0A36\\u0A38-\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2-\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0-\\u0AE1\\u0AF9\\u0B05-\\u0B0C\\u0B0F-\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32-\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C-\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99-\\u0B9A\\u0B9C\\u0B9E-\\u0B9F\\u0BA3-\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C60-\\u0C61\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0-\\u0CE1\\u0CF1-\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D5F-\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32-\\u0E33\\u0E40-\\u0E45\\u0E81-\\u0E82\\u0E84\\u0E87-\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA-\\u0EAB\\u0EAD-\\u0EB0\\u0EB2-\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065-\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10D0-\\u10FA\\u10FD-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16F1-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17DC\\u1820-\\u1842\\u1844-\\u1877\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE-\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C77\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5-\\u1CF6\\u2135-\\u2138\\u2D30-\\u2D67\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u3006\\u303C\\u3041-\\u3096\\u309F\\u30A1-\\u30FA\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FD5\\uA000-\\uA014\\uA016-\\uA48C\\uA4D0-\\uA4F7\\uA500-\\uA60B\\uA610-\\uA61F\\uA62A-\\uA62B\\uA66E\\uA6A0-\\uA6E5\\uA78F\\uA7F7\\uA7FB-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9E0-\\uA9E4\\uA9E7-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA6F\\uAA71-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5-\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADC\\uAAE0-\\uAAEA\\uAAF2\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uABC0-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40-\\uFB41\\uFB43-\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF66-\\uFF6F\\uFF71-\\uFF9D\\uFFA0-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]/,\n      peg$c149 = peg$classExpectation([\"\\xAA\", \"\\xBA\", \"\\u01BB\", [\"\\u01C0\", \"\\u01C3\"], \"\\u0294\", [\"\\u05D0\", \"\\u05EA\"], [\"\\u05F0\", \"\\u05F2\"], [\"\\u0620\", \"\\u063F\"], [\"\\u0641\", \"\\u064A\"], [\"\\u066E\", \"\\u066F\"], [\"\\u0671\", \"\\u06D3\"], \"\\u06D5\", [\"\\u06EE\", \"\\u06EF\"], [\"\\u06FA\", \"\\u06FC\"], \"\\u06FF\", \"\\u0710\", [\"\\u0712\", \"\\u072F\"], [\"\\u074D\", \"\\u07A5\"], \"\\u07B1\", [\"\\u07CA\", \"\\u07EA\"], [\"\\u0800\", \"\\u0815\"], [\"\\u0840\", \"\\u0858\"], [\"\\u08A0\", \"\\u08B4\"], [\"\\u0904\", \"\\u0939\"], \"\\u093D\", \"\\u0950\", [\"\\u0958\", \"\\u0961\"], [\"\\u0972\", \"\\u0980\"], [\"\\u0985\", \"\\u098C\"], [\"\\u098F\", \"\\u0990\"], [\"\\u0993\", \"\\u09A8\"], [\"\\u09AA\", \"\\u09B0\"], \"\\u09B2\", [\"\\u09B6\", \"\\u09B9\"], \"\\u09BD\", \"\\u09CE\", [\"\\u09DC\", \"\\u09DD\"], [\"\\u09DF\", \"\\u09E1\"], [\"\\u09F0\", \"\\u09F1\"], [\"\\u0A05\", \"\\u0A0A\"], [\"\\u0A0F\", \"\\u0A10\"], [\"\\u0A13\", \"\\u0A28\"], [\"\\u0A2A\", \"\\u0A30\"], [\"\\u0A32\", \"\\u0A33\"], [\"\\u0A35\", \"\\u0A36\"], [\"\\u0A38\", \"\\u0A39\"], [\"\\u0A59\", \"\\u0A5C\"], \"\\u0A5E\", [\"\\u0A72\", \"\\u0A74\"], [\"\\u0A85\", \"\\u0A8D\"], [\"\\u0A8F\", \"\\u0A91\"], [\"\\u0A93\", \"\\u0AA8\"], [\"\\u0AAA\", \"\\u0AB0\"], [\"\\u0AB2\", \"\\u0AB3\"], [\"\\u0AB5\", \"\\u0AB9\"], \"\\u0ABD\", \"\\u0AD0\", [\"\\u0AE0\", \"\\u0AE1\"], \"\\u0AF9\", [\"\\u0B05\", \"\\u0B0C\"], [\"\\u0B0F\", \"\\u0B10\"], [\"\\u0B13\", \"\\u0B28\"], [\"\\u0B2A\", \"\\u0B30\"], [\"\\u0B32\", \"\\u0B33\"], [\"\\u0B35\", \"\\u0B39\"], \"\\u0B3D\", [\"\\u0B5C\", \"\\u0B5D\"], [\"\\u0B5F\", \"\\u0B61\"], \"\\u0B71\", \"\\u0B83\", [\"\\u0B85\", \"\\u0B8A\"], [\"\\u0B8E\", \"\\u0B90\"], [\"\\u0B92\", \"\\u0B95\"], [\"\\u0B99\", \"\\u0B9A\"], \"\\u0B9C\", [\"\\u0B9E\", \"\\u0B9F\"], [\"\\u0BA3\", \"\\u0BA4\"], [\"\\u0BA8\", \"\\u0BAA\"], [\"\\u0BAE\", \"\\u0BB9\"], \"\\u0BD0\", [\"\\u0C05\", \"\\u0C0C\"], [\"\\u0C0E\", \"\\u0C10\"], [\"\\u0C12\", \"\\u0C28\"], [\"\\u0C2A\", \"\\u0C39\"], \"\\u0C3D\", [\"\\u0C58\", \"\\u0C5A\"], [\"\\u0C60\", \"\\u0C61\"], [\"\\u0C85\", \"\\u0C8C\"], [\"\\u0C8E\", \"\\u0C90\"], [\"\\u0C92\", \"\\u0CA8\"], [\"\\u0CAA\", \"\\u0CB3\"], [\"\\u0CB5\", \"\\u0CB9\"], \"\\u0CBD\", \"\\u0CDE\", [\"\\u0CE0\", \"\\u0CE1\"], [\"\\u0CF1\", \"\\u0CF2\"], [\"\\u0D05\", \"\\u0D0C\"], [\"\\u0D0E\", \"\\u0D10\"], [\"\\u0D12\", \"\\u0D3A\"], \"\\u0D3D\", \"\\u0D4E\", [\"\\u0D5F\", \"\\u0D61\"], [\"\\u0D7A\", \"\\u0D7F\"], [\"\\u0D85\", \"\\u0D96\"], [\"\\u0D9A\", \"\\u0DB1\"], [\"\\u0DB3\", \"\\u0DBB\"], \"\\u0DBD\", [\"\\u0DC0\", \"\\u0DC6\"], [\"\\u0E01\", \"\\u0E30\"], [\"\\u0E32\", \"\\u0E33\"], [\"\\u0E40\", \"\\u0E45\"], [\"\\u0E81\", \"\\u0E82\"], \"\\u0E84\", [\"\\u0E87\", \"\\u0E88\"], \"\\u0E8A\", \"\\u0E8D\", [\"\\u0E94\", \"\\u0E97\"], [\"\\u0E99\", \"\\u0E9F\"], [\"\\u0EA1\", \"\\u0EA3\"], \"\\u0EA5\", \"\\u0EA7\", [\"\\u0EAA\", \"\\u0EAB\"], [\"\\u0EAD\", \"\\u0EB0\"], [\"\\u0EB2\", \"\\u0EB3\"], \"\\u0EBD\", [\"\\u0EC0\", \"\\u0EC4\"], [\"\\u0EDC\", \"\\u0EDF\"], \"\\u0F00\", [\"\\u0F40\", \"\\u0F47\"], [\"\\u0F49\", \"\\u0F6C\"], [\"\\u0F88\", \"\\u0F8C\"], [\"\\u1000\", \"\\u102A\"], \"\\u103F\", [\"\\u1050\", \"\\u1055\"], [\"\\u105A\", \"\\u105D\"], \"\\u1061\", [\"\\u1065\", \"\\u1066\"], [\"\\u106E\", \"\\u1070\"], [\"\\u1075\", \"\\u1081\"], \"\\u108E\", [\"\\u10D0\", \"\\u10FA\"], [\"\\u10FD\", \"\\u1248\"], [\"\\u124A\", \"\\u124D\"], [\"\\u1250\", \"\\u1256\"], \"\\u1258\", [\"\\u125A\", \"\\u125D\"], [\"\\u1260\", \"\\u1288\"], [\"\\u128A\", \"\\u128D\"], [\"\\u1290\", \"\\u12B0\"], [\"\\u12B2\", \"\\u12B5\"], [\"\\u12B8\", \"\\u12BE\"], \"\\u12C0\", [\"\\u12C2\", \"\\u12C5\"], [\"\\u12C8\", \"\\u12D6\"], [\"\\u12D8\", \"\\u1310\"], [\"\\u1312\", \"\\u1315\"], [\"\\u1318\", \"\\u135A\"], [\"\\u1380\", \"\\u138F\"], [\"\\u1401\", \"\\u166C\"], [\"\\u166F\", \"\\u167F\"], [\"\\u1681\", \"\\u169A\"], [\"\\u16A0\", \"\\u16EA\"], [\"\\u16F1\", \"\\u16F8\"], [\"\\u1700\", \"\\u170C\"], [\"\\u170E\", \"\\u1711\"], [\"\\u1720\", \"\\u1731\"], [\"\\u1740\", \"\\u1751\"], [\"\\u1760\", \"\\u176C\"], [\"\\u176E\", \"\\u1770\"], [\"\\u1780\", \"\\u17B3\"], \"\\u17DC\", [\"\\u1820\", \"\\u1842\"], [\"\\u1844\", \"\\u1877\"], [\"\\u1880\", \"\\u18A8\"], \"\\u18AA\", [\"\\u18B0\", \"\\u18F5\"], [\"\\u1900\", \"\\u191E\"], [\"\\u1950\", \"\\u196D\"], [\"\\u1970\", \"\\u1974\"], [\"\\u1980\", \"\\u19AB\"], [\"\\u19B0\", \"\\u19C9\"], [\"\\u1A00\", \"\\u1A16\"], [\"\\u1A20\", \"\\u1A54\"], [\"\\u1B05\", \"\\u1B33\"], [\"\\u1B45\", \"\\u1B4B\"], [\"\\u1B83\", \"\\u1BA0\"], [\"\\u1BAE\", \"\\u1BAF\"], [\"\\u1BBA\", \"\\u1BE5\"], [\"\\u1C00\", \"\\u1C23\"], [\"\\u1C4D\", \"\\u1C4F\"], [\"\\u1C5A\", \"\\u1C77\"], [\"\\u1CE9\", \"\\u1CEC\"], [\"\\u1CEE\", \"\\u1CF1\"], [\"\\u1CF5\", \"\\u1CF6\"], [\"\\u2135\", \"\\u2138\"], [\"\\u2D30\", \"\\u2D67\"], [\"\\u2D80\", \"\\u2D96\"], [\"\\u2DA0\", \"\\u2DA6\"], [\"\\u2DA8\", \"\\u2DAE\"], [\"\\u2DB0\", \"\\u2DB6\"], [\"\\u2DB8\", \"\\u2DBE\"], [\"\\u2DC0\", \"\\u2DC6\"], [\"\\u2DC8\", \"\\u2DCE\"], [\"\\u2DD0\", \"\\u2DD6\"], [\"\\u2DD8\", \"\\u2DDE\"], \"\\u3006\", \"\\u303C\", [\"\\u3041\", \"\\u3096\"], \"\\u309F\", [\"\\u30A1\", \"\\u30FA\"], \"\\u30FF\", [\"\\u3105\", \"\\u312D\"], [\"\\u3131\", \"\\u318E\"], [\"\\u31A0\", \"\\u31BA\"], [\"\\u31F0\", \"\\u31FF\"], [\"\\u3400\", \"\\u4DB5\"], [\"\\u4E00\", \"\\u9FD5\"], [\"\\uA000\", \"\\uA014\"], [\"\\uA016\", \"\\uA48C\"], [\"\\uA4D0\", \"\\uA4F7\"], [\"\\uA500\", \"\\uA60B\"], [\"\\uA610\", \"\\uA61F\"], [\"\\uA62A\", \"\\uA62B\"], \"\\uA66E\", [\"\\uA6A0\", \"\\uA6E5\"], \"\\uA78F\", \"\\uA7F7\", [\"\\uA7FB\", \"\\uA801\"], [\"\\uA803\", \"\\uA805\"], [\"\\uA807\", \"\\uA80A\"], [\"\\uA80C\", \"\\uA822\"], [\"\\uA840\", \"\\uA873\"], [\"\\uA882\", \"\\uA8B3\"], [\"\\uA8F2\", \"\\uA8F7\"], \"\\uA8FB\", \"\\uA8FD\", [\"\\uA90A\", \"\\uA925\"], [\"\\uA930\", \"\\uA946\"], [\"\\uA960\", \"\\uA97C\"], [\"\\uA984\", \"\\uA9B2\"], [\"\\uA9E0\", \"\\uA9E4\"], [\"\\uA9E7\", \"\\uA9EF\"], [\"\\uA9FA\", \"\\uA9FE\"], [\"\\uAA00\", \"\\uAA28\"], [\"\\uAA40\", \"\\uAA42\"], [\"\\uAA44\", \"\\uAA4B\"], [\"\\uAA60\", \"\\uAA6F\"], [\"\\uAA71\", \"\\uAA76\"], \"\\uAA7A\", [\"\\uAA7E\", \"\\uAAAF\"], \"\\uAAB1\", [\"\\uAAB5\", \"\\uAAB6\"], [\"\\uAAB9\", \"\\uAABD\"], \"\\uAAC0\", \"\\uAAC2\", [\"\\uAADB\", \"\\uAADC\"], [\"\\uAAE0\", \"\\uAAEA\"], \"\\uAAF2\", [\"\\uAB01\", \"\\uAB06\"], [\"\\uAB09\", \"\\uAB0E\"], [\"\\uAB11\", \"\\uAB16\"], [\"\\uAB20\", \"\\uAB26\"], [\"\\uAB28\", \"\\uAB2E\"], [\"\\uABC0\", \"\\uABE2\"], [\"\\uAC00\", \"\\uD7A3\"], [\"\\uD7B0\", \"\\uD7C6\"], [\"\\uD7CB\", \"\\uD7FB\"], [\"\\uF900\", \"\\uFA6D\"], [\"\\uFA70\", \"\\uFAD9\"], \"\\uFB1D\", [\"\\uFB1F\", \"\\uFB28\"], [\"\\uFB2A\", \"\\uFB36\"], [\"\\uFB38\", \"\\uFB3C\"], \"\\uFB3E\", [\"\\uFB40\", \"\\uFB41\"], [\"\\uFB43\", \"\\uFB44\"], [\"\\uFB46\", \"\\uFBB1\"], [\"\\uFBD3\", \"\\uFD3D\"], [\"\\uFD50\", \"\\uFD8F\"], [\"\\uFD92\", \"\\uFDC7\"], [\"\\uFDF0\", \"\\uFDFB\"], [\"\\uFE70\", \"\\uFE74\"], [\"\\uFE76\", \"\\uFEFC\"], [\"\\uFF66\", \"\\uFF6F\"], [\"\\uFF71\", \"\\uFF9D\"], [\"\\uFFA0\", \"\\uFFBE\"], [\"\\uFFC2\", \"\\uFFC7\"], [\"\\uFFCA\", \"\\uFFCF\"], [\"\\uFFD2\", \"\\uFFD7\"], [\"\\uFFDA\", \"\\uFFDC\"]], false, false),\n      peg$c150 = /^[\\u01C5\\u01C8\\u01CB\\u01F2\\u1F88-\\u1F8F\\u1F98-\\u1F9F\\u1FA8-\\u1FAF\\u1FBC\\u1FCC\\u1FFC]/,\n      peg$c151 = peg$classExpectation([\"\\u01C5\", \"\\u01C8\", \"\\u01CB\", \"\\u01F2\", [\"\\u1F88\", \"\\u1F8F\"], [\"\\u1F98\", \"\\u1F9F\"], [\"\\u1FA8\", \"\\u1FAF\"], \"\\u1FBC\", \"\\u1FCC\", \"\\u1FFC\"], false, false),\n      peg$c152 = /^[A-Z\\xC0-\\xD6\\xD8-\\xDE\\u0100\\u0102\\u0104\\u0106\\u0108\\u010A\\u010C\\u010E\\u0110\\u0112\\u0114\\u0116\\u0118\\u011A\\u011C\\u011E\\u0120\\u0122\\u0124\\u0126\\u0128\\u012A\\u012C\\u012E\\u0130\\u0132\\u0134\\u0136\\u0139\\u013B\\u013D\\u013F\\u0141\\u0143\\u0145\\u0147\\u014A\\u014C\\u014E\\u0150\\u0152\\u0154\\u0156\\u0158\\u015A\\u015C\\u015E\\u0160\\u0162\\u0164\\u0166\\u0168\\u016A\\u016C\\u016E\\u0170\\u0172\\u0174\\u0176\\u0178-\\u0179\\u017B\\u017D\\u0181-\\u0182\\u0184\\u0186-\\u0187\\u0189-\\u018B\\u018E-\\u0191\\u0193-\\u0194\\u0196-\\u0198\\u019C-\\u019D\\u019F-\\u01A0\\u01A2\\u01A4\\u01A6-\\u01A7\\u01A9\\u01AC\\u01AE-\\u01AF\\u01B1-\\u01B3\\u01B5\\u01B7-\\u01B8\\u01BC\\u01C4\\u01C7\\u01CA\\u01CD\\u01CF\\u01D1\\u01D3\\u01D5\\u01D7\\u01D9\\u01DB\\u01DE\\u01E0\\u01E2\\u01E4\\u01E6\\u01E8\\u01EA\\u01EC\\u01EE\\u01F1\\u01F4\\u01F6-\\u01F8\\u01FA\\u01FC\\u01FE\\u0200\\u0202\\u0204\\u0206\\u0208\\u020A\\u020C\\u020E\\u0210\\u0212\\u0214\\u0216\\u0218\\u021A\\u021C\\u021E\\u0220\\u0222\\u0224\\u0226\\u0228\\u022A\\u022C\\u022E\\u0230\\u0232\\u023A-\\u023B\\u023D-\\u023E\\u0241\\u0243-\\u0246\\u0248\\u024A\\u024C\\u024E\\u0370\\u0372\\u0376\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u038F\\u0391-\\u03A1\\u03A3-\\u03AB\\u03CF\\u03D2-\\u03D4\\u03D8\\u03DA\\u03DC\\u03DE\\u03E0\\u03E2\\u03E4\\u03E6\\u03E8\\u03EA\\u03EC\\u03EE\\u03F4\\u03F7\\u03F9-\\u03FA\\u03FD-\\u042F\\u0460\\u0462\\u0464\\u0466\\u0468\\u046A\\u046C\\u046E\\u0470\\u0472\\u0474\\u0476\\u0478\\u047A\\u047C\\u047E\\u0480\\u048A\\u048C\\u048E\\u0490\\u0492\\u0494\\u0496\\u0498\\u049A\\u049C\\u049E\\u04A0\\u04A2\\u04A4\\u04A6\\u04A8\\u04AA\\u04AC\\u04AE\\u04B0\\u04B2\\u04B4\\u04B6\\u04B8\\u04BA\\u04BC\\u04BE\\u04C0-\\u04C1\\u04C3\\u04C5\\u04C7\\u04C9\\u04CB\\u04CD\\u04D0\\u04D2\\u04D4\\u04D6\\u04D8\\u04DA\\u04DC\\u04DE\\u04E0\\u04E2\\u04E4\\u04E6\\u04E8\\u04EA\\u04EC\\u04EE\\u04F0\\u04F2\\u04F4\\u04F6\\u04F8\\u04FA\\u04FC\\u04FE\\u0500\\u0502\\u0504\\u0506\\u0508\\u050A\\u050C\\u050E\\u0510\\u0512\\u0514\\u0516\\u0518\\u051A\\u051C\\u051E\\u0520\\u0522\\u0524\\u0526\\u0528\\u052A\\u052C\\u052E\\u0531-\\u0556\\u10A0-\\u10C5\\u10C7\\u10CD\\u13A0-\\u13F5\\u1E00\\u1E02\\u1E04\\u1E06\\u1E08\\u1E0A\\u1E0C\\u1E0E\\u1E10\\u1E12\\u1E14\\u1E16\\u1E18\\u1E1A\\u1E1C\\u1E1E\\u1E20\\u1E22\\u1E24\\u1E26\\u1E28\\u1E2A\\u1E2C\\u1E2E\\u1E30\\u1E32\\u1E34\\u1E36\\u1E38\\u1E3A\\u1E3C\\u1E3E\\u1E40\\u1E42\\u1E44\\u1E46\\u1E48\\u1E4A\\u1E4C\\u1E4E\\u1E50\\u1E52\\u1E54\\u1E56\\u1E58\\u1E5A\\u1E5C\\u1E5E\\u1E60\\u1E62\\u1E64\\u1E66\\u1E68\\u1E6A\\u1E6C\\u1E6E\\u1E70\\u1E72\\u1E74\\u1E76\\u1E78\\u1E7A\\u1E7C\\u1E7E\\u1E80\\u1E82\\u1E84\\u1E86\\u1E88\\u1E8A\\u1E8C\\u1E8E\\u1E90\\u1E92\\u1E94\\u1E9E\\u1EA0\\u1EA2\\u1EA4\\u1EA6\\u1EA8\\u1EAA\\u1EAC\\u1EAE\\u1EB0\\u1EB2\\u1EB4\\u1EB6\\u1EB8\\u1EBA\\u1EBC\\u1EBE\\u1EC0\\u1EC2\\u1EC4\\u1EC6\\u1EC8\\u1ECA\\u1ECC\\u1ECE\\u1ED0\\u1ED2\\u1ED4\\u1ED6\\u1ED8\\u1EDA\\u1EDC\\u1EDE\\u1EE0\\u1EE2\\u1EE4\\u1EE6\\u1EE8\\u1EEA\\u1EEC\\u1EEE\\u1EF0\\u1EF2\\u1EF4\\u1EF6\\u1EF8\\u1EFA\\u1EFC\\u1EFE\\u1F08-\\u1F0F\\u1F18-\\u1F1D\\u1F28-\\u1F2F\\u1F38-\\u1F3F\\u1F48-\\u1F4D\\u1F59\\u1F5B\\u1F5D\\u1F5F\\u1F68-\\u1F6F\\u1FB8-\\u1FBB\\u1FC8-\\u1FCB\\u1FD8-\\u1FDB\\u1FE8-\\u1FEC\\u1FF8-\\u1FFB\\u2102\\u2107\\u210B-\\u210D\\u2110-\\u2112\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u2130-\\u2133\\u213E-\\u213F\\u2145\\u2183\\u2C00-\\u2C2E\\u2C60\\u2C62-\\u2C64\\u2C67\\u2C69\\u2C6B\\u2C6D-\\u2C70\\u2C72\\u2C75\\u2C7E-\\u2C80\\u2C82\\u2C84\\u2C86\\u2C88\\u2C8A\\u2C8C\\u2C8E\\u2C90\\u2C92\\u2C94\\u2C96\\u2C98\\u2C9A\\u2C9C\\u2C9E\\u2CA0\\u2CA2\\u2CA4\\u2CA6\\u2CA8\\u2CAA\\u2CAC\\u2CAE\\u2CB0\\u2CB2\\u2CB4\\u2CB6\\u2CB8\\u2CBA\\u2CBC\\u2CBE\\u2CC0\\u2CC2\\u2CC4\\u2CC6\\u2CC8\\u2CCA\\u2CCC\\u2CCE\\u2CD0\\u2CD2\\u2CD4\\u2CD6\\u2CD8\\u2CDA\\u2CDC\\u2CDE\\u2CE0\\u2CE2\\u2CEB\\u2CED\\u2CF2\\uA640\\uA642\\uA644\\uA646\\uA648\\uA64A\\uA64C\\uA64E\\uA650\\uA652\\uA654\\uA656\\uA658\\uA65A\\uA65C\\uA65E\\uA660\\uA662\\uA664\\uA666\\uA668\\uA66A\\uA66C\\uA680\\uA682\\uA684\\uA686\\uA688\\uA68A\\uA68C\\uA68E\\uA690\\uA692\\uA694\\uA696\\uA698\\uA69A\\uA722\\uA724\\uA726\\uA728\\uA72A\\uA72C\\uA72E\\uA732\\uA734\\uA736\\uA738\\uA73A\\uA73C\\uA73E\\uA740\\uA742\\uA744\\uA746\\uA748\\uA74A\\uA74C\\uA74E\\uA750\\uA752\\uA754\\uA756\\uA758\\uA75A\\uA75C\\uA75E\\uA760\\uA762\\uA764\\uA766\\uA768\\uA76A\\uA76C\\uA76E\\uA779\\uA77B\\uA77D-\\uA77E\\uA780\\uA782\\uA784\\uA786\\uA78B\\uA78D\\uA790\\uA792\\uA796\\uA798\\uA79A\\uA79C\\uA79E\\uA7A0\\uA7A2\\uA7A4\\uA7A6\\uA7A8\\uA7AA-\\uA7AD\\uA7B0-\\uA7B4\\uA7B6\\uFF21-\\uFF3A]/,\n      peg$c153 = peg$classExpectation([[\"A\", \"Z\"], [\"\\xC0\", \"\\xD6\"], [\"\\xD8\", \"\\xDE\"], \"\\u0100\", \"\\u0102\", \"\\u0104\", \"\\u0106\", \"\\u0108\", \"\\u010A\", \"\\u010C\", \"\\u010E\", \"\\u0110\", \"\\u0112\", \"\\u0114\", \"\\u0116\", \"\\u0118\", \"\\u011A\", \"\\u011C\", \"\\u011E\", \"\\u0120\", \"\\u0122\", \"\\u0124\", \"\\u0126\", \"\\u0128\", \"\\u012A\", \"\\u012C\", \"\\u012E\", \"\\u0130\", \"\\u0132\", \"\\u0134\", \"\\u0136\", \"\\u0139\", \"\\u013B\", \"\\u013D\", \"\\u013F\", \"\\u0141\", \"\\u0143\", \"\\u0145\", \"\\u0147\", \"\\u014A\", \"\\u014C\", \"\\u014E\", \"\\u0150\", \"\\u0152\", \"\\u0154\", \"\\u0156\", \"\\u0158\", \"\\u015A\", \"\\u015C\", \"\\u015E\", \"\\u0160\", \"\\u0162\", \"\\u0164\", \"\\u0166\", \"\\u0168\", \"\\u016A\", \"\\u016C\", \"\\u016E\", \"\\u0170\", \"\\u0172\", \"\\u0174\", \"\\u0176\", [\"\\u0178\", \"\\u0179\"], \"\\u017B\", \"\\u017D\", [\"\\u0181\", \"\\u0182\"], \"\\u0184\", [\"\\u0186\", \"\\u0187\"], [\"\\u0189\", \"\\u018B\"], [\"\\u018E\", \"\\u0191\"], [\"\\u0193\", \"\\u0194\"], [\"\\u0196\", \"\\u0198\"], [\"\\u019C\", \"\\u019D\"], [\"\\u019F\", \"\\u01A0\"], \"\\u01A2\", \"\\u01A4\", [\"\\u01A6\", \"\\u01A7\"], \"\\u01A9\", \"\\u01AC\", [\"\\u01AE\", \"\\u01AF\"], [\"\\u01B1\", \"\\u01B3\"], \"\\u01B5\", [\"\\u01B7\", \"\\u01B8\"], \"\\u01BC\", \"\\u01C4\", \"\\u01C7\", \"\\u01CA\", \"\\u01CD\", \"\\u01CF\", \"\\u01D1\", \"\\u01D3\", \"\\u01D5\", \"\\u01D7\", \"\\u01D9\", \"\\u01DB\", \"\\u01DE\", \"\\u01E0\", \"\\u01E2\", \"\\u01E4\", \"\\u01E6\", \"\\u01E8\", \"\\u01EA\", \"\\u01EC\", \"\\u01EE\", \"\\u01F1\", \"\\u01F4\", [\"\\u01F6\", \"\\u01F8\"], \"\\u01FA\", \"\\u01FC\", \"\\u01FE\", \"\\u0200\", \"\\u0202\", \"\\u0204\", \"\\u0206\", \"\\u0208\", \"\\u020A\", \"\\u020C\", \"\\u020E\", \"\\u0210\", \"\\u0212\", \"\\u0214\", \"\\u0216\", \"\\u0218\", \"\\u021A\", \"\\u021C\", \"\\u021E\", \"\\u0220\", \"\\u0222\", \"\\u0224\", \"\\u0226\", \"\\u0228\", \"\\u022A\", \"\\u022C\", \"\\u022E\", \"\\u0230\", \"\\u0232\", [\"\\u023A\", \"\\u023B\"], [\"\\u023D\", \"\\u023E\"], \"\\u0241\", [\"\\u0243\", \"\\u0246\"], \"\\u0248\", \"\\u024A\", \"\\u024C\", \"\\u024E\", \"\\u0370\", \"\\u0372\", \"\\u0376\", \"\\u037F\", \"\\u0386\", [\"\\u0388\", \"\\u038A\"], \"\\u038C\", [\"\\u038E\", \"\\u038F\"], [\"\\u0391\", \"\\u03A1\"], [\"\\u03A3\", \"\\u03AB\"], \"\\u03CF\", [\"\\u03D2\", \"\\u03D4\"], \"\\u03D8\", \"\\u03DA\", \"\\u03DC\", \"\\u03DE\", \"\\u03E0\", \"\\u03E2\", \"\\u03E4\", \"\\u03E6\", \"\\u03E8\", \"\\u03EA\", \"\\u03EC\", \"\\u03EE\", \"\\u03F4\", \"\\u03F7\", [\"\\u03F9\", \"\\u03FA\"], [\"\\u03FD\", \"\\u042F\"], \"\\u0460\", \"\\u0462\", \"\\u0464\", \"\\u0466\", \"\\u0468\", \"\\u046A\", \"\\u046C\", \"\\u046E\", \"\\u0470\", \"\\u0472\", \"\\u0474\", \"\\u0476\", \"\\u0478\", \"\\u047A\", \"\\u047C\", \"\\u047E\", \"\\u0480\", \"\\u048A\", \"\\u048C\", \"\\u048E\", \"\\u0490\", \"\\u0492\", \"\\u0494\", \"\\u0496\", \"\\u0498\", \"\\u049A\", \"\\u049C\", \"\\u049E\", \"\\u04A0\", \"\\u04A2\", \"\\u04A4\", \"\\u04A6\", \"\\u04A8\", \"\\u04AA\", \"\\u04AC\", \"\\u04AE\", \"\\u04B0\", \"\\u04B2\", \"\\u04B4\", \"\\u04B6\", \"\\u04B8\", \"\\u04BA\", \"\\u04BC\", \"\\u04BE\", [\"\\u04C0\", \"\\u04C1\"], \"\\u04C3\", \"\\u04C5\", \"\\u04C7\", \"\\u04C9\", \"\\u04CB\", \"\\u04CD\", \"\\u04D0\", \"\\u04D2\", \"\\u04D4\", \"\\u04D6\", \"\\u04D8\", \"\\u04DA\", \"\\u04DC\", \"\\u04DE\", \"\\u04E0\", \"\\u04E2\", \"\\u04E4\", \"\\u04E6\", \"\\u04E8\", \"\\u04EA\", \"\\u04EC\", \"\\u04EE\", \"\\u04F0\", \"\\u04F2\", \"\\u04F4\", \"\\u04F6\", \"\\u04F8\", \"\\u04FA\", \"\\u04FC\", \"\\u04FE\", \"\\u0500\", \"\\u0502\", \"\\u0504\", \"\\u0506\", \"\\u0508\", \"\\u050A\", \"\\u050C\", \"\\u050E\", \"\\u0510\", \"\\u0512\", \"\\u0514\", \"\\u0516\", \"\\u0518\", \"\\u051A\", \"\\u051C\", \"\\u051E\", \"\\u0520\", \"\\u0522\", \"\\u0524\", \"\\u0526\", \"\\u0528\", \"\\u052A\", \"\\u052C\", \"\\u052E\", [\"\\u0531\", \"\\u0556\"], [\"\\u10A0\", \"\\u10C5\"], \"\\u10C7\", \"\\u10CD\", [\"\\u13A0\", \"\\u13F5\"], \"\\u1E00\", \"\\u1E02\", \"\\u1E04\", \"\\u1E06\", \"\\u1E08\", \"\\u1E0A\", \"\\u1E0C\", \"\\u1E0E\", \"\\u1E10\", \"\\u1E12\", \"\\u1E14\", \"\\u1E16\", \"\\u1E18\", \"\\u1E1A\", \"\\u1E1C\", \"\\u1E1E\", \"\\u1E20\", \"\\u1E22\", \"\\u1E24\", \"\\u1E26\", \"\\u1E28\", \"\\u1E2A\", \"\\u1E2C\", \"\\u1E2E\", \"\\u1E30\", \"\\u1E32\", \"\\u1E34\", \"\\u1E36\", \"\\u1E38\", \"\\u1E3A\", \"\\u1E3C\", \"\\u1E3E\", \"\\u1E40\", \"\\u1E42\", \"\\u1E44\", \"\\u1E46\", \"\\u1E48\", \"\\u1E4A\", \"\\u1E4C\", \"\\u1E4E\", \"\\u1E50\", \"\\u1E52\", \"\\u1E54\", \"\\u1E56\", \"\\u1E58\", \"\\u1E5A\", \"\\u1E5C\", \"\\u1E5E\", \"\\u1E60\", \"\\u1E62\", \"\\u1E64\", \"\\u1E66\", \"\\u1E68\", \"\\u1E6A\", \"\\u1E6C\", \"\\u1E6E\", \"\\u1E70\", \"\\u1E72\", \"\\u1E74\", \"\\u1E76\", \"\\u1E78\", \"\\u1E7A\", \"\\u1E7C\", \"\\u1E7E\", \"\\u1E80\", \"\\u1E82\", \"\\u1E84\", \"\\u1E86\", \"\\u1E88\", \"\\u1E8A\", \"\\u1E8C\", \"\\u1E8E\", \"\\u1E90\", \"\\u1E92\", \"\\u1E94\", \"\\u1E9E\", \"\\u1EA0\", \"\\u1EA2\", \"\\u1EA4\", \"\\u1EA6\", \"\\u1EA8\", \"\\u1EAA\", \"\\u1EAC\", \"\\u1EAE\", \"\\u1EB0\", \"\\u1EB2\", \"\\u1EB4\", \"\\u1EB6\", \"\\u1EB8\", \"\\u1EBA\", \"\\u1EBC\", \"\\u1EBE\", \"\\u1EC0\", \"\\u1EC2\", \"\\u1EC4\", \"\\u1EC6\", \"\\u1EC8\", \"\\u1ECA\", \"\\u1ECC\", \"\\u1ECE\", \"\\u1ED0\", \"\\u1ED2\", \"\\u1ED4\", \"\\u1ED6\", \"\\u1ED8\", \"\\u1EDA\", \"\\u1EDC\", \"\\u1EDE\", \"\\u1EE0\", \"\\u1EE2\", \"\\u1EE4\", \"\\u1EE6\", \"\\u1EE8\", \"\\u1EEA\", \"\\u1EEC\", \"\\u1EEE\", \"\\u1EF0\", \"\\u1EF2\", \"\\u1EF4\", \"\\u1EF6\", \"\\u1EF8\", \"\\u1EFA\", \"\\u1EFC\", \"\\u1EFE\", [\"\\u1F08\", \"\\u1F0F\"], [\"\\u1F18\", \"\\u1F1D\"], [\"\\u1F28\", \"\\u1F2F\"], [\"\\u1F38\", \"\\u1F3F\"], [\"\\u1F48\", \"\\u1F4D\"], \"\\u1F59\", \"\\u1F5B\", \"\\u1F5D\", \"\\u1F5F\", [\"\\u1F68\", \"\\u1F6F\"], [\"\\u1FB8\", \"\\u1FBB\"], [\"\\u1FC8\", \"\\u1FCB\"], [\"\\u1FD8\", \"\\u1FDB\"], [\"\\u1FE8\", \"\\u1FEC\"], [\"\\u1FF8\", \"\\u1FFB\"], \"\\u2102\", \"\\u2107\", [\"\\u210B\", \"\\u210D\"], [\"\\u2110\", \"\\u2112\"], \"\\u2115\", [\"\\u2119\", \"\\u211D\"], \"\\u2124\", \"\\u2126\", \"\\u2128\", [\"\\u212A\", \"\\u212D\"], [\"\\u2130\", \"\\u2133\"], [\"\\u213E\", \"\\u213F\"], \"\\u2145\", \"\\u2183\", [\"\\u2C00\", \"\\u2C2E\"], \"\\u2C60\", [\"\\u2C62\", \"\\u2C64\"], \"\\u2C67\", \"\\u2C69\", \"\\u2C6B\", [\"\\u2C6D\", \"\\u2C70\"], \"\\u2C72\", \"\\u2C75\", [\"\\u2C7E\", \"\\u2C80\"], \"\\u2C82\", \"\\u2C84\", \"\\u2C86\", \"\\u2C88\", \"\\u2C8A\", \"\\u2C8C\", \"\\u2C8E\", \"\\u2C90\", \"\\u2C92\", \"\\u2C94\", \"\\u2C96\", \"\\u2C98\", \"\\u2C9A\", \"\\u2C9C\", \"\\u2C9E\", \"\\u2CA0\", \"\\u2CA2\", \"\\u2CA4\", \"\\u2CA6\", \"\\u2CA8\", \"\\u2CAA\", \"\\u2CAC\", \"\\u2CAE\", \"\\u2CB0\", \"\\u2CB2\", \"\\u2CB4\", \"\\u2CB6\", \"\\u2CB8\", \"\\u2CBA\", \"\\u2CBC\", \"\\u2CBE\", \"\\u2CC0\", \"\\u2CC2\", \"\\u2CC4\", \"\\u2CC6\", \"\\u2CC8\", \"\\u2CCA\", \"\\u2CCC\", \"\\u2CCE\", \"\\u2CD0\", \"\\u2CD2\", \"\\u2CD4\", \"\\u2CD6\", \"\\u2CD8\", \"\\u2CDA\", \"\\u2CDC\", \"\\u2CDE\", \"\\u2CE0\", \"\\u2CE2\", \"\\u2CEB\", \"\\u2CED\", \"\\u2CF2\", \"\\uA640\", \"\\uA642\", \"\\uA644\", \"\\uA646\", \"\\uA648\", \"\\uA64A\", \"\\uA64C\", \"\\uA64E\", \"\\uA650\", \"\\uA652\", \"\\uA654\", \"\\uA656\", \"\\uA658\", \"\\uA65A\", \"\\uA65C\", \"\\uA65E\", \"\\uA660\", \"\\uA662\", \"\\uA664\", \"\\uA666\", \"\\uA668\", \"\\uA66A\", \"\\uA66C\", \"\\uA680\", \"\\uA682\", \"\\uA684\", \"\\uA686\", \"\\uA688\", \"\\uA68A\", \"\\uA68C\", \"\\uA68E\", \"\\uA690\", \"\\uA692\", \"\\uA694\", \"\\uA696\", \"\\uA698\", \"\\uA69A\", \"\\uA722\", \"\\uA724\", \"\\uA726\", \"\\uA728\", \"\\uA72A\", \"\\uA72C\", \"\\uA72E\", \"\\uA732\", \"\\uA734\", \"\\uA736\", \"\\uA738\", \"\\uA73A\", \"\\uA73C\", \"\\uA73E\", \"\\uA740\", \"\\uA742\", \"\\uA744\", \"\\uA746\", \"\\uA748\", \"\\uA74A\", \"\\uA74C\", \"\\uA74E\", \"\\uA750\", \"\\uA752\", \"\\uA754\", \"\\uA756\", \"\\uA758\", \"\\uA75A\", \"\\uA75C\", \"\\uA75E\", \"\\uA760\", \"\\uA762\", \"\\uA764\", \"\\uA766\", \"\\uA768\", \"\\uA76A\", \"\\uA76C\", \"\\uA76E\", \"\\uA779\", \"\\uA77B\", [\"\\uA77D\", \"\\uA77E\"], \"\\uA780\", \"\\uA782\", \"\\uA784\", \"\\uA786\", \"\\uA78B\", \"\\uA78D\", \"\\uA790\", \"\\uA792\", \"\\uA796\", \"\\uA798\", \"\\uA79A\", \"\\uA79C\", \"\\uA79E\", \"\\uA7A0\", \"\\uA7A2\", \"\\uA7A4\", \"\\uA7A6\", \"\\uA7A8\", [\"\\uA7AA\", \"\\uA7AD\"], [\"\\uA7B0\", \"\\uA7B4\"], \"\\uA7B6\", [\"\\uFF21\", \"\\uFF3A\"]], false, false),\n      peg$c154 = /^[\\u0903\\u093B\\u093E-\\u0940\\u0949-\\u094C\\u094E-\\u094F\\u0982-\\u0983\\u09BE-\\u09C0\\u09C7-\\u09C8\\u09CB-\\u09CC\\u09D7\\u0A03\\u0A3E-\\u0A40\\u0A83\\u0ABE-\\u0AC0\\u0AC9\\u0ACB-\\u0ACC\\u0B02-\\u0B03\\u0B3E\\u0B40\\u0B47-\\u0B48\\u0B4B-\\u0B4C\\u0B57\\u0BBE-\\u0BBF\\u0BC1-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCC\\u0BD7\\u0C01-\\u0C03\\u0C41-\\u0C44\\u0C82-\\u0C83\\u0CBE\\u0CC0-\\u0CC4\\u0CC7-\\u0CC8\\u0CCA-\\u0CCB\\u0CD5-\\u0CD6\\u0D02-\\u0D03\\u0D3E-\\u0D40\\u0D46-\\u0D48\\u0D4A-\\u0D4C\\u0D57\\u0D82-\\u0D83\\u0DCF-\\u0DD1\\u0DD8-\\u0DDF\\u0DF2-\\u0DF3\\u0F3E-\\u0F3F\\u0F7F\\u102B-\\u102C\\u1031\\u1038\\u103B-\\u103C\\u1056-\\u1057\\u1062-\\u1064\\u1067-\\u106D\\u1083-\\u1084\\u1087-\\u108C\\u108F\\u109A-\\u109C\\u17B6\\u17BE-\\u17C5\\u17C7-\\u17C8\\u1923-\\u1926\\u1929-\\u192B\\u1930-\\u1931\\u1933-\\u1938\\u1A19-\\u1A1A\\u1A55\\u1A57\\u1A61\\u1A63-\\u1A64\\u1A6D-\\u1A72\\u1B04\\u1B35\\u1B3B\\u1B3D-\\u1B41\\u1B43-\\u1B44\\u1B82\\u1BA1\\u1BA6-\\u1BA7\\u1BAA\\u1BE7\\u1BEA-\\u1BEC\\u1BEE\\u1BF2-\\u1BF3\\u1C24-\\u1C2B\\u1C34-\\u1C35\\u1CE1\\u1CF2-\\u1CF3\\u302E-\\u302F\\uA823-\\uA824\\uA827\\uA880-\\uA881\\uA8B4-\\uA8C3\\uA952-\\uA953\\uA983\\uA9B4-\\uA9B5\\uA9BA-\\uA9BB\\uA9BD-\\uA9C0\\uAA2F-\\uAA30\\uAA33-\\uAA34\\uAA4D\\uAA7B\\uAA7D\\uAAEB\\uAAEE-\\uAAEF\\uAAF5\\uABE3-\\uABE4\\uABE6-\\uABE7\\uABE9-\\uABEA\\uABEC]/,\n      peg$c155 = peg$classExpectation([\"\\u0903\", \"\\u093B\", [\"\\u093E\", \"\\u0940\"], [\"\\u0949\", \"\\u094C\"], [\"\\u094E\", \"\\u094F\"], [\"\\u0982\", \"\\u0983\"], [\"\\u09BE\", \"\\u09C0\"], [\"\\u09C7\", \"\\u09C8\"], [\"\\u09CB\", \"\\u09CC\"], \"\\u09D7\", \"\\u0A03\", [\"\\u0A3E\", \"\\u0A40\"], \"\\u0A83\", [\"\\u0ABE\", \"\\u0AC0\"], \"\\u0AC9\", [\"\\u0ACB\", \"\\u0ACC\"], [\"\\u0B02\", \"\\u0B03\"], \"\\u0B3E\", \"\\u0B40\", [\"\\u0B47\", \"\\u0B48\"], [\"\\u0B4B\", \"\\u0B4C\"], \"\\u0B57\", [\"\\u0BBE\", \"\\u0BBF\"], [\"\\u0BC1\", \"\\u0BC2\"], [\"\\u0BC6\", \"\\u0BC8\"], [\"\\u0BCA\", \"\\u0BCC\"], \"\\u0BD7\", [\"\\u0C01\", \"\\u0C03\"], [\"\\u0C41\", \"\\u0C44\"], [\"\\u0C82\", \"\\u0C83\"], \"\\u0CBE\", [\"\\u0CC0\", \"\\u0CC4\"], [\"\\u0CC7\", \"\\u0CC8\"], [\"\\u0CCA\", \"\\u0CCB\"], [\"\\u0CD5\", \"\\u0CD6\"], [\"\\u0D02\", \"\\u0D03\"], [\"\\u0D3E\", \"\\u0D40\"], [\"\\u0D46\", \"\\u0D48\"], [\"\\u0D4A\", \"\\u0D4C\"], \"\\u0D57\", [\"\\u0D82\", \"\\u0D83\"], [\"\\u0DCF\", \"\\u0DD1\"], [\"\\u0DD8\", \"\\u0DDF\"], [\"\\u0DF2\", \"\\u0DF3\"], [\"\\u0F3E\", \"\\u0F3F\"], \"\\u0F7F\", [\"\\u102B\", \"\\u102C\"], \"\\u1031\", \"\\u1038\", [\"\\u103B\", \"\\u103C\"], [\"\\u1056\", \"\\u1057\"], [\"\\u1062\", \"\\u1064\"], [\"\\u1067\", \"\\u106D\"], [\"\\u1083\", \"\\u1084\"], [\"\\u1087\", \"\\u108C\"], \"\\u108F\", [\"\\u109A\", \"\\u109C\"], \"\\u17B6\", [\"\\u17BE\", \"\\u17C5\"], [\"\\u17C7\", \"\\u17C8\"], [\"\\u1923\", \"\\u1926\"], [\"\\u1929\", \"\\u192B\"], [\"\\u1930\", \"\\u1931\"], [\"\\u1933\", \"\\u1938\"], [\"\\u1A19\", \"\\u1A1A\"], \"\\u1A55\", \"\\u1A57\", \"\\u1A61\", [\"\\u1A63\", \"\\u1A64\"], [\"\\u1A6D\", \"\\u1A72\"], \"\\u1B04\", \"\\u1B35\", \"\\u1B3B\", [\"\\u1B3D\", \"\\u1B41\"], [\"\\u1B43\", \"\\u1B44\"], \"\\u1B82\", \"\\u1BA1\", [\"\\u1BA6\", \"\\u1BA7\"], \"\\u1BAA\", \"\\u1BE7\", [\"\\u1BEA\", \"\\u1BEC\"], \"\\u1BEE\", [\"\\u1BF2\", \"\\u1BF3\"], [\"\\u1C24\", \"\\u1C2B\"], [\"\\u1C34\", \"\\u1C35\"], \"\\u1CE1\", [\"\\u1CF2\", \"\\u1CF3\"], [\"\\u302E\", \"\\u302F\"], [\"\\uA823\", \"\\uA824\"], \"\\uA827\", [\"\\uA880\", \"\\uA881\"], [\"\\uA8B4\", \"\\uA8C3\"], [\"\\uA952\", \"\\uA953\"], \"\\uA983\", [\"\\uA9B4\", \"\\uA9B5\"], [\"\\uA9BA\", \"\\uA9BB\"], [\"\\uA9BD\", \"\\uA9C0\"], [\"\\uAA2F\", \"\\uAA30\"], [\"\\uAA33\", \"\\uAA34\"], \"\\uAA4D\", \"\\uAA7B\", \"\\uAA7D\", \"\\uAAEB\", [\"\\uAAEE\", \"\\uAAEF\"], \"\\uAAF5\", [\"\\uABE3\", \"\\uABE4\"], [\"\\uABE6\", \"\\uABE7\"], [\"\\uABE9\", \"\\uABEA\"], \"\\uABEC\"], false, false),\n      peg$c156 = /^[\\u0300-\\u036F\\u0483-\\u0487\\u0591-\\u05BD\\u05BF\\u05C1-\\u05C2\\u05C4-\\u05C5\\u05C7\\u0610-\\u061A\\u064B-\\u065F\\u0670\\u06D6-\\u06DC\\u06DF-\\u06E4\\u06E7-\\u06E8\\u06EA-\\u06ED\\u0711\\u0730-\\u074A\\u07A6-\\u07B0\\u07EB-\\u07F3\\u0816-\\u0819\\u081B-\\u0823\\u0825-\\u0827\\u0829-\\u082D\\u0859-\\u085B\\u08E3-\\u0902\\u093A\\u093C\\u0941-\\u0948\\u094D\\u0951-\\u0957\\u0962-\\u0963\\u0981\\u09BC\\u09C1-\\u09C4\\u09CD\\u09E2-\\u09E3\\u0A01-\\u0A02\\u0A3C\\u0A41-\\u0A42\\u0A47-\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A70-\\u0A71\\u0A75\\u0A81-\\u0A82\\u0ABC\\u0AC1-\\u0AC5\\u0AC7-\\u0AC8\\u0ACD\\u0AE2-\\u0AE3\\u0B01\\u0B3C\\u0B3F\\u0B41-\\u0B44\\u0B4D\\u0B56\\u0B62-\\u0B63\\u0B82\\u0BC0\\u0BCD\\u0C00\\u0C3E-\\u0C40\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55-\\u0C56\\u0C62-\\u0C63\\u0C81\\u0CBC\\u0CBF\\u0CC6\\u0CCC-\\u0CCD\\u0CE2-\\u0CE3\\u0D01\\u0D41-\\u0D44\\u0D4D\\u0D62-\\u0D63\\u0DCA\\u0DD2-\\u0DD4\\u0DD6\\u0E31\\u0E34-\\u0E3A\\u0E47-\\u0E4E\\u0EB1\\u0EB4-\\u0EB9\\u0EBB-\\u0EBC\\u0EC8-\\u0ECD\\u0F18-\\u0F19\\u0F35\\u0F37\\u0F39\\u0F71-\\u0F7E\\u0F80-\\u0F84\\u0F86-\\u0F87\\u0F8D-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u102D-\\u1030\\u1032-\\u1037\\u1039-\\u103A\\u103D-\\u103E\\u1058-\\u1059\\u105E-\\u1060\\u1071-\\u1074\\u1082\\u1085-\\u1086\\u108D\\u109D\\u135D-\\u135F\\u1712-\\u1714\\u1732-\\u1734\\u1752-\\u1753\\u1772-\\u1773\\u17B4-\\u17B5\\u17B7-\\u17BD\\u17C6\\u17C9-\\u17D3\\u17DD\\u180B-\\u180D\\u18A9\\u1920-\\u1922\\u1927-\\u1928\\u1932\\u1939-\\u193B\\u1A17-\\u1A18\\u1A1B\\u1A56\\u1A58-\\u1A5E\\u1A60\\u1A62\\u1A65-\\u1A6C\\u1A73-\\u1A7C\\u1A7F\\u1AB0-\\u1ABD\\u1B00-\\u1B03\\u1B34\\u1B36-\\u1B3A\\u1B3C\\u1B42\\u1B6B-\\u1B73\\u1B80-\\u1B81\\u1BA2-\\u1BA5\\u1BA8-\\u1BA9\\u1BAB-\\u1BAD\\u1BE6\\u1BE8-\\u1BE9\\u1BED\\u1BEF-\\u1BF1\\u1C2C-\\u1C33\\u1C36-\\u1C37\\u1CD0-\\u1CD2\\u1CD4-\\u1CE0\\u1CE2-\\u1CE8\\u1CED\\u1CF4\\u1CF8-\\u1CF9\\u1DC0-\\u1DF5\\u1DFC-\\u1DFF\\u20D0-\\u20DC\\u20E1\\u20E5-\\u20F0\\u2CEF-\\u2CF1\\u2D7F\\u2DE0-\\u2DFF\\u302A-\\u302D\\u3099-\\u309A\\uA66F\\uA674-\\uA67D\\uA69E-\\uA69F\\uA6F0-\\uA6F1\\uA802\\uA806\\uA80B\\uA825-\\uA826\\uA8C4\\uA8E0-\\uA8F1\\uA926-\\uA92D\\uA947-\\uA951\\uA980-\\uA982\\uA9B3\\uA9B6-\\uA9B9\\uA9BC\\uA9E5\\uAA29-\\uAA2E\\uAA31-\\uAA32\\uAA35-\\uAA36\\uAA43\\uAA4C\\uAA7C\\uAAB0\\uAAB2-\\uAAB4\\uAAB7-\\uAAB8\\uAABE-\\uAABF\\uAAC1\\uAAEC-\\uAAED\\uAAF6\\uABE5\\uABE8\\uABED\\uFB1E\\uFE00-\\uFE0F\\uFE20-\\uFE2F]/,\n      peg$c157 = peg$classExpectation([[\"\\u0300\", \"\\u036F\"], [\"\\u0483\", \"\\u0487\"], [\"\\u0591\", \"\\u05BD\"], \"\\u05BF\", [\"\\u05C1\", \"\\u05C2\"], [\"\\u05C4\", \"\\u05C5\"], \"\\u05C7\", [\"\\u0610\", \"\\u061A\"], [\"\\u064B\", \"\\u065F\"], \"\\u0670\", [\"\\u06D6\", \"\\u06DC\"], [\"\\u06DF\", \"\\u06E4\"], [\"\\u06E7\", \"\\u06E8\"], [\"\\u06EA\", \"\\u06ED\"], \"\\u0711\", [\"\\u0730\", \"\\u074A\"], [\"\\u07A6\", \"\\u07B0\"], [\"\\u07EB\", \"\\u07F3\"], [\"\\u0816\", \"\\u0819\"], [\"\\u081B\", \"\\u0823\"], [\"\\u0825\", \"\\u0827\"], [\"\\u0829\", \"\\u082D\"], [\"\\u0859\", \"\\u085B\"], [\"\\u08E3\", \"\\u0902\"], \"\\u093A\", \"\\u093C\", [\"\\u0941\", \"\\u0948\"], \"\\u094D\", [\"\\u0951\", \"\\u0957\"], [\"\\u0962\", \"\\u0963\"], \"\\u0981\", \"\\u09BC\", [\"\\u09C1\", \"\\u09C4\"], \"\\u09CD\", [\"\\u09E2\", \"\\u09E3\"], [\"\\u0A01\", \"\\u0A02\"], \"\\u0A3C\", [\"\\u0A41\", \"\\u0A42\"], [\"\\u0A47\", \"\\u0A48\"], [\"\\u0A4B\", \"\\u0A4D\"], \"\\u0A51\", [\"\\u0A70\", \"\\u0A71\"], \"\\u0A75\", [\"\\u0A81\", \"\\u0A82\"], \"\\u0ABC\", [\"\\u0AC1\", \"\\u0AC5\"], [\"\\u0AC7\", \"\\u0AC8\"], \"\\u0ACD\", [\"\\u0AE2\", \"\\u0AE3\"], \"\\u0B01\", \"\\u0B3C\", \"\\u0B3F\", [\"\\u0B41\", \"\\u0B44\"], \"\\u0B4D\", \"\\u0B56\", [\"\\u0B62\", \"\\u0B63\"], \"\\u0B82\", \"\\u0BC0\", \"\\u0BCD\", \"\\u0C00\", [\"\\u0C3E\", \"\\u0C40\"], [\"\\u0C46\", \"\\u0C48\"], [\"\\u0C4A\", \"\\u0C4D\"], [\"\\u0C55\", \"\\u0C56\"], [\"\\u0C62\", \"\\u0C63\"], \"\\u0C81\", \"\\u0CBC\", \"\\u0CBF\", \"\\u0CC6\", [\"\\u0CCC\", \"\\u0CCD\"], [\"\\u0CE2\", \"\\u0CE3\"], \"\\u0D01\", [\"\\u0D41\", \"\\u0D44\"], \"\\u0D4D\", [\"\\u0D62\", \"\\u0D63\"], \"\\u0DCA\", [\"\\u0DD2\", \"\\u0DD4\"], \"\\u0DD6\", \"\\u0E31\", [\"\\u0E34\", \"\\u0E3A\"], [\"\\u0E47\", \"\\u0E4E\"], \"\\u0EB1\", [\"\\u0EB4\", \"\\u0EB9\"], [\"\\u0EBB\", \"\\u0EBC\"], [\"\\u0EC8\", \"\\u0ECD\"], [\"\\u0F18\", \"\\u0F19\"], \"\\u0F35\", \"\\u0F37\", \"\\u0F39\", [\"\\u0F71\", \"\\u0F7E\"], [\"\\u0F80\", \"\\u0F84\"], [\"\\u0F86\", \"\\u0F87\"], [\"\\u0F8D\", \"\\u0F97\"], [\"\\u0F99\", \"\\u0FBC\"], \"\\u0FC6\", [\"\\u102D\", \"\\u1030\"], [\"\\u1032\", \"\\u1037\"], [\"\\u1039\", \"\\u103A\"], [\"\\u103D\", \"\\u103E\"], [\"\\u1058\", \"\\u1059\"], [\"\\u105E\", \"\\u1060\"], [\"\\u1071\", \"\\u1074\"], \"\\u1082\", [\"\\u1085\", \"\\u1086\"], \"\\u108D\", \"\\u109D\", [\"\\u135D\", \"\\u135F\"], [\"\\u1712\", \"\\u1714\"], [\"\\u1732\", \"\\u1734\"], [\"\\u1752\", \"\\u1753\"], [\"\\u1772\", \"\\u1773\"], [\"\\u17B4\", \"\\u17B5\"], [\"\\u17B7\", \"\\u17BD\"], \"\\u17C6\", [\"\\u17C9\", \"\\u17D3\"], \"\\u17DD\", [\"\\u180B\", \"\\u180D\"], \"\\u18A9\", [\"\\u1920\", \"\\u1922\"], [\"\\u1927\", \"\\u1928\"], \"\\u1932\", [\"\\u1939\", \"\\u193B\"], [\"\\u1A17\", \"\\u1A18\"], \"\\u1A1B\", \"\\u1A56\", [\"\\u1A58\", \"\\u1A5E\"], \"\\u1A60\", \"\\u1A62\", [\"\\u1A65\", \"\\u1A6C\"], [\"\\u1A73\", \"\\u1A7C\"], \"\\u1A7F\", [\"\\u1AB0\", \"\\u1ABD\"], [\"\\u1B00\", \"\\u1B03\"], \"\\u1B34\", [\"\\u1B36\", \"\\u1B3A\"], \"\\u1B3C\", \"\\u1B42\", [\"\\u1B6B\", \"\\u1B73\"], [\"\\u1B80\", \"\\u1B81\"], [\"\\u1BA2\", \"\\u1BA5\"], [\"\\u1BA8\", \"\\u1BA9\"], [\"\\u1BAB\", \"\\u1BAD\"], \"\\u1BE6\", [\"\\u1BE8\", \"\\u1BE9\"], \"\\u1BED\", [\"\\u1BEF\", \"\\u1BF1\"], [\"\\u1C2C\", \"\\u1C33\"], [\"\\u1C36\", \"\\u1C37\"], [\"\\u1CD0\", \"\\u1CD2\"], [\"\\u1CD4\", \"\\u1CE0\"], [\"\\u1CE2\", \"\\u1CE8\"], \"\\u1CED\", \"\\u1CF4\", [\"\\u1CF8\", \"\\u1CF9\"], [\"\\u1DC0\", \"\\u1DF5\"], [\"\\u1DFC\", \"\\u1DFF\"], [\"\\u20D0\", \"\\u20DC\"], \"\\u20E1\", [\"\\u20E5\", \"\\u20F0\"], [\"\\u2CEF\", \"\\u2CF1\"], \"\\u2D7F\", [\"\\u2DE0\", \"\\u2DFF\"], [\"\\u302A\", \"\\u302D\"], [\"\\u3099\", \"\\u309A\"], \"\\uA66F\", [\"\\uA674\", \"\\uA67D\"], [\"\\uA69E\", \"\\uA69F\"], [\"\\uA6F0\", \"\\uA6F1\"], \"\\uA802\", \"\\uA806\", \"\\uA80B\", [\"\\uA825\", \"\\uA826\"], \"\\uA8C4\", [\"\\uA8E0\", \"\\uA8F1\"], [\"\\uA926\", \"\\uA92D\"], [\"\\uA947\", \"\\uA951\"], [\"\\uA980\", \"\\uA982\"], \"\\uA9B3\", [\"\\uA9B6\", \"\\uA9B9\"], \"\\uA9BC\", \"\\uA9E5\", [\"\\uAA29\", \"\\uAA2E\"], [\"\\uAA31\", \"\\uAA32\"], [\"\\uAA35\", \"\\uAA36\"], \"\\uAA43\", \"\\uAA4C\", \"\\uAA7C\", \"\\uAAB0\", [\"\\uAAB2\", \"\\uAAB4\"], [\"\\uAAB7\", \"\\uAAB8\"], [\"\\uAABE\", \"\\uAABF\"], \"\\uAAC1\", [\"\\uAAEC\", \"\\uAAED\"], \"\\uAAF6\", \"\\uABE5\", \"\\uABE8\", \"\\uABED\", \"\\uFB1E\", [\"\\uFE00\", \"\\uFE0F\"], [\"\\uFE20\", \"\\uFE2F\"]], false, false),\n      peg$c158 = /^[0-9\\u0660-\\u0669\\u06F0-\\u06F9\\u07C0-\\u07C9\\u0966-\\u096F\\u09E6-\\u09EF\\u0A66-\\u0A6F\\u0AE6-\\u0AEF\\u0B66-\\u0B6F\\u0BE6-\\u0BEF\\u0C66-\\u0C6F\\u0CE6-\\u0CEF\\u0D66-\\u0D6F\\u0DE6-\\u0DEF\\u0E50-\\u0E59\\u0ED0-\\u0ED9\\u0F20-\\u0F29\\u1040-\\u1049\\u1090-\\u1099\\u17E0-\\u17E9\\u1810-\\u1819\\u1946-\\u194F\\u19D0-\\u19D9\\u1A80-\\u1A89\\u1A90-\\u1A99\\u1B50-\\u1B59\\u1BB0-\\u1BB9\\u1C40-\\u1C49\\u1C50-\\u1C59\\uA620-\\uA629\\uA8D0-\\uA8D9\\uA900-\\uA909\\uA9D0-\\uA9D9\\uA9F0-\\uA9F9\\uAA50-\\uAA59\\uABF0-\\uABF9\\uFF10-\\uFF19]/,\n      peg$c159 = peg$classExpectation([[\"0\", \"9\"], [\"\\u0660\", \"\\u0669\"], [\"\\u06F0\", \"\\u06F9\"], [\"\\u07C0\", \"\\u07C9\"], [\"\\u0966\", \"\\u096F\"], [\"\\u09E6\", \"\\u09EF\"], [\"\\u0A66\", \"\\u0A6F\"], [\"\\u0AE6\", \"\\u0AEF\"], [\"\\u0B66\", \"\\u0B6F\"], [\"\\u0BE6\", \"\\u0BEF\"], [\"\\u0C66\", \"\\u0C6F\"], [\"\\u0CE6\", \"\\u0CEF\"], [\"\\u0D66\", \"\\u0D6F\"], [\"\\u0DE6\", \"\\u0DEF\"], [\"\\u0E50\", \"\\u0E59\"], [\"\\u0ED0\", \"\\u0ED9\"], [\"\\u0F20\", \"\\u0F29\"], [\"\\u1040\", \"\\u1049\"], [\"\\u1090\", \"\\u1099\"], [\"\\u17E0\", \"\\u17E9\"], [\"\\u1810\", \"\\u1819\"], [\"\\u1946\", \"\\u194F\"], [\"\\u19D0\", \"\\u19D9\"], [\"\\u1A80\", \"\\u1A89\"], [\"\\u1A90\", \"\\u1A99\"], [\"\\u1B50\", \"\\u1B59\"], [\"\\u1BB0\", \"\\u1BB9\"], [\"\\u1C40\", \"\\u1C49\"], [\"\\u1C50\", \"\\u1C59\"], [\"\\uA620\", \"\\uA629\"], [\"\\uA8D0\", \"\\uA8D9\"], [\"\\uA900\", \"\\uA909\"], [\"\\uA9D0\", \"\\uA9D9\"], [\"\\uA9F0\", \"\\uA9F9\"], [\"\\uAA50\", \"\\uAA59\"], [\"\\uABF0\", \"\\uABF9\"], [\"\\uFF10\", \"\\uFF19\"]], false, false),\n      peg$c160 = /^[\\u16EE-\\u16F0\\u2160-\\u2182\\u2185-\\u2188\\u3007\\u3021-\\u3029\\u3038-\\u303A\\uA6E6-\\uA6EF]/,\n      peg$c161 = peg$classExpectation([[\"\\u16EE\", \"\\u16F0\"], [\"\\u2160\", \"\\u2182\"], [\"\\u2185\", \"\\u2188\"], \"\\u3007\", [\"\\u3021\", \"\\u3029\"], [\"\\u3038\", \"\\u303A\"], [\"\\uA6E6\", \"\\uA6EF\"]], false, false),\n      peg$c162 = /^[_\\u203F-\\u2040\\u2054\\uFE33-\\uFE34\\uFE4D-\\uFE4F\\uFF3F]/,\n      peg$c163 = peg$classExpectation([\"_\", [\"\\u203F\", \"\\u2040\"], \"\\u2054\", [\"\\uFE33\", \"\\uFE34\"], [\"\\uFE4D\", \"\\uFE4F\"], \"\\uFF3F\"], false, false),\n      peg$c164 = /^[ \\xA0\\u1680\\u2000-\\u200A\\u202F\\u205F\\u3000]/,\n      peg$c165 = peg$classExpectation([\" \", \"\\xA0\", \"\\u1680\", [\"\\u2000\", \"\\u200A\"], \"\\u202F\", \"\\u205F\", \"\\u3000\"], false, false),\n      peg$c166 = \"break\",\n      peg$c167 = peg$literalExpectation(\"break\", false),\n      peg$c168 = \"case\",\n      peg$c169 = peg$literalExpectation(\"case\", false),\n      peg$c170 = \"catch\",\n      peg$c171 = peg$literalExpectation(\"catch\", false),\n      peg$c172 = \"class\",\n      peg$c173 = peg$literalExpectation(\"class\", false),\n      peg$c174 = \"const\",\n      peg$c175 = peg$literalExpectation(\"const\", false),\n      peg$c176 = \"continue\",\n      peg$c177 = peg$literalExpectation(\"continue\", false),\n      peg$c178 = \"debugger\",\n      peg$c179 = peg$literalExpectation(\"debugger\", false),\n      peg$c180 = \"default\",\n      peg$c181 = peg$literalExpectation(\"default\", false),\n      peg$c182 = \"delete\",\n      peg$c183 = peg$literalExpectation(\"delete\", false),\n      peg$c184 = \"do\",\n      peg$c185 = peg$literalExpectation(\"do\", false),\n      peg$c186 = \"else\",\n      peg$c187 = peg$literalExpectation(\"else\", false),\n      peg$c188 = \"enum\",\n      peg$c189 = peg$literalExpectation(\"enum\", false),\n      peg$c190 = \"export\",\n      peg$c191 = peg$literalExpectation(\"export\", false),\n      peg$c192 = \"extends\",\n      peg$c193 = peg$literalExpectation(\"extends\", false),\n      peg$c194 = \"false\",\n      peg$c195 = peg$literalExpectation(\"false\", false),\n      peg$c196 = \"finally\",\n      peg$c197 = peg$literalExpectation(\"finally\", false),\n      peg$c198 = \"for\",\n      peg$c199 = peg$literalExpectation(\"for\", false),\n      peg$c200 = \"function\",\n      peg$c201 = peg$literalExpectation(\"function\", false),\n      peg$c202 = \"if\",\n      peg$c203 = peg$literalExpectation(\"if\", false),\n      peg$c204 = \"import\",\n      peg$c205 = peg$literalExpectation(\"import\", false),\n      peg$c206 = \"instanceof\",\n      peg$c207 = peg$literalExpectation(\"instanceof\", false),\n      peg$c208 = \"in\",\n      peg$c209 = peg$literalExpectation(\"in\", false),\n      peg$c210 = \"new\",\n      peg$c211 = peg$literalExpectation(\"new\", false),\n      peg$c212 = \"null\",\n      peg$c213 = peg$literalExpectation(\"null\", false),\n      peg$c214 = \"return\",\n      peg$c215 = peg$literalExpectation(\"return\", false),\n      peg$c216 = \"super\",\n      peg$c217 = peg$literalExpectation(\"super\", false),\n      peg$c218 = \"switch\",\n      peg$c219 = peg$literalExpectation(\"switch\", false),\n      peg$c220 = \"this\",\n      peg$c221 = peg$literalExpectation(\"this\", false),\n      peg$c222 = \"throw\",\n      peg$c223 = peg$literalExpectation(\"throw\", false),\n      peg$c224 = \"true\",\n      peg$c225 = peg$literalExpectation(\"true\", false),\n      peg$c226 = \"try\",\n      peg$c227 = peg$literalExpectation(\"try\", false),\n      peg$c228 = \"typeof\",\n      peg$c229 = peg$literalExpectation(\"typeof\", false),\n      peg$c230 = \"var\",\n      peg$c231 = peg$literalExpectation(\"var\", false),\n      peg$c232 = \"void\",\n      peg$c233 = peg$literalExpectation(\"void\", false),\n      peg$c234 = \"while\",\n      peg$c235 = peg$literalExpectation(\"while\", false),\n      peg$c236 = \"with\",\n      peg$c237 = peg$literalExpectation(\"with\", false),\n      peg$c238 = \";\",\n      peg$c239 = peg$literalExpectation(\";\", false),\n\n      peg$currPos          = 0,\n      peg$savedPos         = 0,\n      peg$posDetailsCache  = [{ line: 1, column: 1 }],\n      peg$maxFailPos       = 0,\n      peg$maxFailExpected  = [],\n      peg$silentFails      = 0,\n\n      peg$result;\n\n  if (\"startRule\" in options) {\n    if (!(options.startRule in peg$startRuleFunctions)) {\n      throw new Error(\"Can't start parsing from rule \\\"\" + options.startRule + \"\\\".\");\n    }\n\n    peg$startRuleFunction = peg$startRuleFunctions[options.startRule];\n  }\n\n  function text() {\n    return input.substring(peg$savedPos, peg$currPos);\n  }\n\n  function location() {\n    return peg$computeLocation(peg$savedPos, peg$currPos);\n  }\n\n  function expected(description, location) {\n    location = location !== void 0 ? location : peg$computeLocation(peg$savedPos, peg$currPos)\n\n    throw peg$buildStructuredError(\n      [peg$otherExpectation(description)],\n      input.substring(peg$savedPos, peg$currPos),\n      location\n    );\n  }\n\n  function error(message, location) {\n    location = location !== void 0 ? location : peg$computeLocation(peg$savedPos, peg$currPos)\n\n    throw peg$buildSimpleError(message, location);\n  }\n\n  function peg$literalExpectation(text, ignoreCase) {\n    return { type: \"literal\", text: text, ignoreCase: ignoreCase };\n  }\n\n  function peg$classExpectation(parts, inverted, ignoreCase) {\n    return { type: \"class\", parts: parts, inverted: inverted, ignoreCase: ignoreCase };\n  }\n\n  function peg$anyExpectation() {\n    return { type: \"any\" };\n  }\n\n  function peg$endExpectation() {\n    return { type: \"end\" };\n  }\n\n  function peg$otherExpectation(description) {\n    return { type: \"other\", description: description };\n  }\n\n  function peg$computePosDetails(pos) {\n    var details = peg$posDetailsCache[pos], p;\n\n    if (details) {\n      return details;\n    } else {\n      p = pos - 1;\n      while (!peg$posDetailsCache[p]) {\n        p--;\n      }\n\n      details = peg$posDetailsCache[p];\n      details = {\n        line:   details.line,\n        column: details.column\n      };\n\n      while (p < pos) {\n        if (input.charCodeAt(p) === 10) {\n          details.line++;\n          details.column = 1;\n        } else {\n          details.column++;\n        }\n\n        p++;\n      }\n\n      peg$posDetailsCache[pos] = details;\n      return details;\n    }\n  }\n\n  function peg$computeLocation(startPos, endPos) {\n    var startPosDetails = peg$computePosDetails(startPos),\n        endPosDetails   = peg$computePosDetails(endPos);\n\n    return {\n      start: {\n        offset: startPos,\n        line:   startPosDetails.line,\n        column: startPosDetails.column\n      },\n      end: {\n        offset: endPos,\n        line:   endPosDetails.line,\n        column: endPosDetails.column\n      }\n    };\n  }\n\n  function peg$fail(expected) {\n    if (peg$currPos < peg$maxFailPos) { return; }\n\n    if (peg$currPos > peg$maxFailPos) {\n      peg$maxFailPos = peg$currPos;\n      peg$maxFailExpected = [];\n    }\n\n    peg$maxFailExpected.push(expected);\n  }\n\n  function peg$buildSimpleError(message, location) {\n    return new peg$SyntaxError(message, null, null, location);\n  }\n\n  function peg$buildStructuredError(expected, found, location) {\n    return new peg$SyntaxError(\n      peg$SyntaxError.buildMessage(expected, found),\n      expected,\n      found,\n      location\n    );\n  }\n\n  function peg$parseGrammar() {\n    var s0, s1, s2, s3, s4, s5, s6;\n\n    s0 = peg$currPos;\n    s1 = peg$parse__();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$currPos;\n      s3 = peg$parseInitializer();\n      if (s3 !== peg$FAILED) {\n        s4 = peg$parse__();\n        if (s4 !== peg$FAILED) {\n          s3 = [s3, s4];\n          s2 = s3;\n        } else {\n          peg$currPos = s2;\n          s2 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s2;\n        s2 = peg$FAILED;\n      }\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = [];\n        s4 = peg$currPos;\n        s5 = peg$parseRule();\n        if (s5 !== peg$FAILED) {\n          s6 = peg$parse__();\n          if (s6 !== peg$FAILED) {\n            s5 = [s5, s6];\n            s4 = s5;\n          } else {\n            peg$currPos = s4;\n            s4 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s4;\n          s4 = peg$FAILED;\n        }\n        if (s4 !== peg$FAILED) {\n          while (s4 !== peg$FAILED) {\n            s3.push(s4);\n            s4 = peg$currPos;\n            s5 = peg$parseRule();\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parse__();\n              if (s6 !== peg$FAILED) {\n                s5 = [s5, s6];\n                s4 = s5;\n              } else {\n                peg$currPos = s4;\n                s4 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s4;\n              s4 = peg$FAILED;\n            }\n          }\n        } else {\n          s3 = peg$FAILED;\n        }\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c0(s2, s3);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseInitializer() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    s1 = peg$parseCodeBlock();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseEOS();\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c1(s1);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseRule() {\n    var s0, s1, s2, s3, s4, s5, s6, s7;\n\n    s0 = peg$currPos;\n    s1 = peg$parseIdentifierName();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parse__();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$currPos;\n        s4 = peg$parseStringLiteral();\n        if (s4 !== peg$FAILED) {\n          s5 = peg$parse__();\n          if (s5 !== peg$FAILED) {\n            s4 = [s4, s5];\n            s3 = s4;\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n        if (s3 === peg$FAILED) {\n          s3 = null;\n        }\n        if (s3 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 61) {\n            s4 = peg$c2;\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c3); }\n          }\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parse__();\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parseChoiceExpression();\n              if (s6 !== peg$FAILED) {\n                s7 = peg$parseEOS();\n                if (s7 !== peg$FAILED) {\n                  peg$savedPos = s0;\n                  s1 = peg$c4(s1, s3, s6);\n                  s0 = s1;\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseChoiceExpression() {\n    var s0, s1, s2, s3, s4, s5, s6, s7;\n\n    s0 = peg$currPos;\n    s1 = peg$parseActionExpression();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$currPos;\n      s4 = peg$parse__();\n      if (s4 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 47) {\n          s5 = peg$c5;\n          peg$currPos++;\n        } else {\n          s5 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c6); }\n        }\n        if (s5 !== peg$FAILED) {\n          s6 = peg$parse__();\n          if (s6 !== peg$FAILED) {\n            s7 = peg$parseActionExpression();\n            if (s7 !== peg$FAILED) {\n              s4 = [s4, s5, s6, s7];\n              s3 = s4;\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$currPos;\n        s4 = peg$parse__();\n        if (s4 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 47) {\n            s5 = peg$c5;\n            peg$currPos++;\n          } else {\n            s5 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c6); }\n          }\n          if (s5 !== peg$FAILED) {\n            s6 = peg$parse__();\n            if (s6 !== peg$FAILED) {\n              s7 = peg$parseActionExpression();\n              if (s7 !== peg$FAILED) {\n                s4 = [s4, s5, s6, s7];\n                s3 = s4;\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c7(s1, s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseActionExpression() {\n    var s0, s1, s2, s3, s4;\n\n    s0 = peg$currPos;\n    s1 = peg$parseSequenceExpression();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$currPos;\n      s3 = peg$parse__();\n      if (s3 !== peg$FAILED) {\n        s4 = peg$parseCodeBlock();\n        if (s4 !== peg$FAILED) {\n          s3 = [s3, s4];\n          s2 = s3;\n        } else {\n          peg$currPos = s2;\n          s2 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s2;\n        s2 = peg$FAILED;\n      }\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c8(s1, s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseSequenceExpression() {\n    var s0, s1, s2, s3, s4, s5;\n\n    s0 = peg$currPos;\n    s1 = peg$parseLabeledExpression();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$currPos;\n      s4 = peg$parse__();\n      if (s4 !== peg$FAILED) {\n        s5 = peg$parseLabeledExpression();\n        if (s5 !== peg$FAILED) {\n          s4 = [s4, s5];\n          s3 = s4;\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$currPos;\n        s4 = peg$parse__();\n        if (s4 !== peg$FAILED) {\n          s5 = peg$parseLabeledExpression();\n          if (s5 !== peg$FAILED) {\n            s4 = [s4, s5];\n            s3 = s4;\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c9(s1, s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseLabeledExpression() {\n    var s0, s1, s2, s3, s4, s5;\n\n    s0 = peg$currPos;\n    s1 = peg$parseIdentifier();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parse__();\n      if (s2 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 58) {\n          s3 = peg$c10;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c11); }\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parse__();\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parsePrefixedExpression();\n            if (s5 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c12(s1, s5);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$parsePrefixedExpression();\n    }\n\n    return s0;\n  }\n\n  function peg$parsePrefixedExpression() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = peg$parsePrefixedOperator();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parse__();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseSuffixedExpression();\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c13(s1, s3);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseSuffixedExpression();\n    }\n\n    return s0;\n  }\n\n  function peg$parsePrefixedOperator() {\n    var s0;\n\n    if (input.charCodeAt(peg$currPos) === 36) {\n      s0 = peg$c14;\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c15); }\n    }\n    if (s0 === peg$FAILED) {\n      if (input.charCodeAt(peg$currPos) === 38) {\n        s0 = peg$c16;\n        peg$currPos++;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c17); }\n      }\n      if (s0 === peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 33) {\n          s0 = peg$c18;\n          peg$currPos++;\n        } else {\n          s0 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c19); }\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseSuffixedExpression() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = peg$parsePrimaryExpression();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parse__();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseSuffixedOperator();\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c20(s1, s3);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$parsePrimaryExpression();\n    }\n\n    return s0;\n  }\n\n  function peg$parseSuffixedOperator() {\n    var s0;\n\n    if (input.charCodeAt(peg$currPos) === 63) {\n      s0 = peg$c21;\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c22); }\n    }\n    if (s0 === peg$FAILED) {\n      if (input.charCodeAt(peg$currPos) === 42) {\n        s0 = peg$c23;\n        peg$currPos++;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c24); }\n      }\n      if (s0 === peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 43) {\n          s0 = peg$c25;\n          peg$currPos++;\n        } else {\n          s0 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c26); }\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parsePrimaryExpression() {\n    var s0, s1, s2, s3, s4, s5;\n\n    s0 = peg$parseLiteralMatcher();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseCharacterClassMatcher();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseAnyMatcher();\n        if (s0 === peg$FAILED) {\n          s0 = peg$parseRuleReferenceExpression();\n          if (s0 === peg$FAILED) {\n            s0 = peg$parseSemanticPredicateExpression();\n            if (s0 === peg$FAILED) {\n              s0 = peg$currPos;\n              if (input.charCodeAt(peg$currPos) === 40) {\n                s1 = peg$c27;\n                peg$currPos++;\n              } else {\n                s1 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c28); }\n              }\n              if (s1 !== peg$FAILED) {\n                s2 = peg$parse__();\n                if (s2 !== peg$FAILED) {\n                  s3 = peg$parseChoiceExpression();\n                  if (s3 !== peg$FAILED) {\n                    s4 = peg$parse__();\n                    if (s4 !== peg$FAILED) {\n                      if (input.charCodeAt(peg$currPos) === 41) {\n                        s5 = peg$c29;\n                        peg$currPos++;\n                      } else {\n                        s5 = peg$FAILED;\n                        if (peg$silentFails === 0) { peg$fail(peg$c30); }\n                      }\n                      if (s5 !== peg$FAILED) {\n                        peg$savedPos = s0;\n                        s1 = peg$c31(s3);\n                        s0 = s1;\n                      } else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseRuleReferenceExpression() {\n    var s0, s1, s2, s3, s4, s5, s6, s7;\n\n    s0 = peg$currPos;\n    s1 = peg$parseIdentifierName();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$currPos;\n      peg$silentFails++;\n      s3 = peg$currPos;\n      s4 = peg$parse__();\n      if (s4 !== peg$FAILED) {\n        s5 = peg$currPos;\n        s6 = peg$parseStringLiteral();\n        if (s6 !== peg$FAILED) {\n          s7 = peg$parse__();\n          if (s7 !== peg$FAILED) {\n            s6 = [s6, s7];\n            s5 = s6;\n          } else {\n            peg$currPos = s5;\n            s5 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s5;\n          s5 = peg$FAILED;\n        }\n        if (s5 === peg$FAILED) {\n          s5 = null;\n        }\n        if (s5 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 61) {\n            s6 = peg$c2;\n            peg$currPos++;\n          } else {\n            s6 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c3); }\n          }\n          if (s6 !== peg$FAILED) {\n            s4 = [s4, s5, s6];\n            s3 = s4;\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n      peg$silentFails--;\n      if (s3 === peg$FAILED) {\n        s2 = void 0;\n      } else {\n        peg$currPos = s2;\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c32(s1);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseSemanticPredicateExpression() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = peg$parseSemanticPredicateOperator();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parse__();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseCodeBlock();\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c33(s1, s3);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseSemanticPredicateOperator() {\n    var s0;\n\n    if (input.charCodeAt(peg$currPos) === 38) {\n      s0 = peg$c16;\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c17); }\n    }\n    if (s0 === peg$FAILED) {\n      if (input.charCodeAt(peg$currPos) === 33) {\n        s0 = peg$c18;\n        peg$currPos++;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c19); }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseSourceCharacter() {\n    var s0;\n\n    if (input.length > peg$currPos) {\n      s0 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c34); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseWhiteSpace() {\n    var s0, s1;\n\n    peg$silentFails++;\n    if (input.charCodeAt(peg$currPos) === 9) {\n      s0 = peg$c36;\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c37); }\n    }\n    if (s0 === peg$FAILED) {\n      if (input.charCodeAt(peg$currPos) === 11) {\n        s0 = peg$c38;\n        peg$currPos++;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c39); }\n      }\n      if (s0 === peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 12) {\n          s0 = peg$c40;\n          peg$currPos++;\n        } else {\n          s0 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c41); }\n        }\n        if (s0 === peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 32) {\n            s0 = peg$c42;\n            peg$currPos++;\n          } else {\n            s0 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c43); }\n          }\n          if (s0 === peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 160) {\n              s0 = peg$c44;\n              peg$currPos++;\n            } else {\n              s0 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c45); }\n            }\n            if (s0 === peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 65279) {\n                s0 = peg$c46;\n                peg$currPos++;\n              } else {\n                s0 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c47); }\n              }\n              if (s0 === peg$FAILED) {\n                s0 = peg$parseZs();\n              }\n            }\n          }\n        }\n      }\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c35); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseLineTerminator() {\n    var s0;\n\n    if (peg$c48.test(input.charAt(peg$currPos))) {\n      s0 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c49); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseLineTerminatorSequence() {\n    var s0, s1;\n\n    peg$silentFails++;\n    if (input.charCodeAt(peg$currPos) === 10) {\n      s0 = peg$c51;\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c52); }\n    }\n    if (s0 === peg$FAILED) {\n      if (input.substr(peg$currPos, 2) === peg$c53) {\n        s0 = peg$c53;\n        peg$currPos += 2;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c54); }\n      }\n      if (s0 === peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 13) {\n          s0 = peg$c55;\n          peg$currPos++;\n        } else {\n          s0 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c56); }\n        }\n        if (s0 === peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 8232) {\n            s0 = peg$c57;\n            peg$currPos++;\n          } else {\n            s0 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c58); }\n          }\n          if (s0 === peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 8233) {\n              s0 = peg$c59;\n              peg$currPos++;\n            } else {\n              s0 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c60); }\n            }\n          }\n        }\n      }\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c50); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseComment() {\n    var s0, s1;\n\n    peg$silentFails++;\n    s0 = peg$parseMultiLineComment();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseSingleLineComment();\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c61); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseMultiLineComment() {\n    var s0, s1, s2, s3, s4, s5;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 2) === peg$c62) {\n      s1 = peg$c62;\n      peg$currPos += 2;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c63); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$currPos;\n      s4 = peg$currPos;\n      peg$silentFails++;\n      if (input.substr(peg$currPos, 2) === peg$c64) {\n        s5 = peg$c64;\n        peg$currPos += 2;\n      } else {\n        s5 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c65); }\n      }\n      peg$silentFails--;\n      if (s5 === peg$FAILED) {\n        s4 = void 0;\n      } else {\n        peg$currPos = s4;\n        s4 = peg$FAILED;\n      }\n      if (s4 !== peg$FAILED) {\n        s5 = peg$parseSourceCharacter();\n        if (s5 !== peg$FAILED) {\n          s4 = [s4, s5];\n          s3 = s4;\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$currPos;\n        s4 = peg$currPos;\n        peg$silentFails++;\n        if (input.substr(peg$currPos, 2) === peg$c64) {\n          s5 = peg$c64;\n          peg$currPos += 2;\n        } else {\n          s5 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c65); }\n        }\n        peg$silentFails--;\n        if (s5 === peg$FAILED) {\n          s4 = void 0;\n        } else {\n          peg$currPos = s4;\n          s4 = peg$FAILED;\n        }\n        if (s4 !== peg$FAILED) {\n          s5 = peg$parseSourceCharacter();\n          if (s5 !== peg$FAILED) {\n            s4 = [s4, s5];\n            s3 = s4;\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        if (input.substr(peg$currPos, 2) === peg$c64) {\n          s3 = peg$c64;\n          peg$currPos += 2;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c65); }\n        }\n        if (s3 !== peg$FAILED) {\n          s1 = [s1, s2, s3];\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseMultiLineCommentNoLineTerminator() {\n    var s0, s1, s2, s3, s4, s5;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 2) === peg$c62) {\n      s1 = peg$c62;\n      peg$currPos += 2;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c63); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$currPos;\n      s4 = peg$currPos;\n      peg$silentFails++;\n      if (input.substr(peg$currPos, 2) === peg$c64) {\n        s5 = peg$c64;\n        peg$currPos += 2;\n      } else {\n        s5 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c65); }\n      }\n      if (s5 === peg$FAILED) {\n        s5 = peg$parseLineTerminator();\n      }\n      peg$silentFails--;\n      if (s5 === peg$FAILED) {\n        s4 = void 0;\n      } else {\n        peg$currPos = s4;\n        s4 = peg$FAILED;\n      }\n      if (s4 !== peg$FAILED) {\n        s5 = peg$parseSourceCharacter();\n        if (s5 !== peg$FAILED) {\n          s4 = [s4, s5];\n          s3 = s4;\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$currPos;\n        s4 = peg$currPos;\n        peg$silentFails++;\n        if (input.substr(peg$currPos, 2) === peg$c64) {\n          s5 = peg$c64;\n          peg$currPos += 2;\n        } else {\n          s5 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c65); }\n        }\n        if (s5 === peg$FAILED) {\n          s5 = peg$parseLineTerminator();\n        }\n        peg$silentFails--;\n        if (s5 === peg$FAILED) {\n          s4 = void 0;\n        } else {\n          peg$currPos = s4;\n          s4 = peg$FAILED;\n        }\n        if (s4 !== peg$FAILED) {\n          s5 = peg$parseSourceCharacter();\n          if (s5 !== peg$FAILED) {\n            s4 = [s4, s5];\n            s3 = s4;\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        if (input.substr(peg$currPos, 2) === peg$c64) {\n          s3 = peg$c64;\n          peg$currPos += 2;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c65); }\n        }\n        if (s3 !== peg$FAILED) {\n          s1 = [s1, s2, s3];\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseSingleLineComment() {\n    var s0, s1, s2, s3, s4, s5;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 2) === peg$c66) {\n      s1 = peg$c66;\n      peg$currPos += 2;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c67); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$currPos;\n      s4 = peg$currPos;\n      peg$silentFails++;\n      s5 = peg$parseLineTerminator();\n      peg$silentFails--;\n      if (s5 === peg$FAILED) {\n        s4 = void 0;\n      } else {\n        peg$currPos = s4;\n        s4 = peg$FAILED;\n      }\n      if (s4 !== peg$FAILED) {\n        s5 = peg$parseSourceCharacter();\n        if (s5 !== peg$FAILED) {\n          s4 = [s4, s5];\n          s3 = s4;\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$currPos;\n        s4 = peg$currPos;\n        peg$silentFails++;\n        s5 = peg$parseLineTerminator();\n        peg$silentFails--;\n        if (s5 === peg$FAILED) {\n          s4 = void 0;\n        } else {\n          peg$currPos = s4;\n          s4 = peg$FAILED;\n        }\n        if (s4 !== peg$FAILED) {\n          s5 = peg$parseSourceCharacter();\n          if (s5 !== peg$FAILED) {\n            s4 = [s4, s5];\n            s3 = s4;\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        s1 = [s1, s2];\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseIdentifier() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    s1 = peg$currPos;\n    peg$silentFails++;\n    s2 = peg$parseReservedWord();\n    peg$silentFails--;\n    if (s2 === peg$FAILED) {\n      s1 = void 0;\n    } else {\n      peg$currPos = s1;\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseIdentifierName();\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c68(s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseIdentifierName() {\n    var s0, s1, s2, s3;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = peg$parseIdentifierStart();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$parseIdentifierPart();\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$parseIdentifierPart();\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c70(s1, s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c69); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseIdentifierStart() {\n    var s0, s1, s2;\n\n    s0 = peg$parseUnicodeLetter();\n    if (s0 === peg$FAILED) {\n      if (input.charCodeAt(peg$currPos) === 36) {\n        s0 = peg$c14;\n        peg$currPos++;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c15); }\n      }\n      if (s0 === peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 95) {\n          s0 = peg$c71;\n          peg$currPos++;\n        } else {\n          s0 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c72); }\n        }\n        if (s0 === peg$FAILED) {\n          s0 = peg$currPos;\n          if (input.charCodeAt(peg$currPos) === 92) {\n            s1 = peg$c73;\n            peg$currPos++;\n          } else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c74); }\n          }\n          if (s1 !== peg$FAILED) {\n            s2 = peg$parseUnicodeEscapeSequence();\n            if (s2 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c75(s2);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseIdentifierPart() {\n    var s0;\n\n    s0 = peg$parseIdentifierStart();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseUnicodeCombiningMark();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseNd();\n        if (s0 === peg$FAILED) {\n          s0 = peg$parsePc();\n          if (s0 === peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 8204) {\n              s0 = peg$c76;\n              peg$currPos++;\n            } else {\n              s0 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c77); }\n            }\n            if (s0 === peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 8205) {\n                s0 = peg$c78;\n                peg$currPos++;\n              } else {\n                s0 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c79); }\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseUnicodeLetter() {\n    var s0;\n\n    s0 = peg$parseLu();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseLl();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseLt();\n        if (s0 === peg$FAILED) {\n          s0 = peg$parseLm();\n          if (s0 === peg$FAILED) {\n            s0 = peg$parseLo();\n            if (s0 === peg$FAILED) {\n              s0 = peg$parseNl();\n            }\n          }\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseUnicodeCombiningMark() {\n    var s0;\n\n    s0 = peg$parseMn();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseMc();\n    }\n\n    return s0;\n  }\n\n  function peg$parseReservedWord() {\n    var s0;\n\n    s0 = peg$parseKeyword();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseFutureReservedWord();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseNullToken();\n        if (s0 === peg$FAILED) {\n          s0 = peg$parseBooleanLiteral();\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseKeyword() {\n    var s0;\n\n    s0 = peg$parseBreakToken();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseCaseToken();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseCatchToken();\n        if (s0 === peg$FAILED) {\n          s0 = peg$parseContinueToken();\n          if (s0 === peg$FAILED) {\n            s0 = peg$parseDebuggerToken();\n            if (s0 === peg$FAILED) {\n              s0 = peg$parseDefaultToken();\n              if (s0 === peg$FAILED) {\n                s0 = peg$parseDeleteToken();\n                if (s0 === peg$FAILED) {\n                  s0 = peg$parseDoToken();\n                  if (s0 === peg$FAILED) {\n                    s0 = peg$parseElseToken();\n                    if (s0 === peg$FAILED) {\n                      s0 = peg$parseFinallyToken();\n                      if (s0 === peg$FAILED) {\n                        s0 = peg$parseForToken();\n                        if (s0 === peg$FAILED) {\n                          s0 = peg$parseFunctionToken();\n                          if (s0 === peg$FAILED) {\n                            s0 = peg$parseIfToken();\n                            if (s0 === peg$FAILED) {\n                              s0 = peg$parseInstanceofToken();\n                              if (s0 === peg$FAILED) {\n                                s0 = peg$parseInToken();\n                                if (s0 === peg$FAILED) {\n                                  s0 = peg$parseNewToken();\n                                  if (s0 === peg$FAILED) {\n                                    s0 = peg$parseReturnToken();\n                                    if (s0 === peg$FAILED) {\n                                      s0 = peg$parseSwitchToken();\n                                      if (s0 === peg$FAILED) {\n                                        s0 = peg$parseThisToken();\n                                        if (s0 === peg$FAILED) {\n                                          s0 = peg$parseThrowToken();\n                                          if (s0 === peg$FAILED) {\n                                            s0 = peg$parseTryToken();\n                                            if (s0 === peg$FAILED) {\n                                              s0 = peg$parseTypeofToken();\n                                              if (s0 === peg$FAILED) {\n                                                s0 = peg$parseVarToken();\n                                                if (s0 === peg$FAILED) {\n                                                  s0 = peg$parseVoidToken();\n                                                  if (s0 === peg$FAILED) {\n                                                    s0 = peg$parseWhileToken();\n                                                    if (s0 === peg$FAILED) {\n                                                      s0 = peg$parseWithToken();\n                                                    }\n                                                  }\n                                                }\n                                              }\n                                            }\n                                          }\n                                        }\n                                      }\n                                    }\n                                  }\n                                }\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseFutureReservedWord() {\n    var s0;\n\n    s0 = peg$parseClassToken();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseConstToken();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseEnumToken();\n        if (s0 === peg$FAILED) {\n          s0 = peg$parseExportToken();\n          if (s0 === peg$FAILED) {\n            s0 = peg$parseExtendsToken();\n            if (s0 === peg$FAILED) {\n              s0 = peg$parseImportToken();\n              if (s0 === peg$FAILED) {\n                s0 = peg$parseSuperToken();\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseBooleanLiteral() {\n    var s0;\n\n    s0 = peg$parseTrueToken();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseFalseToken();\n    }\n\n    return s0;\n  }\n\n  function peg$parseLiteralMatcher() {\n    var s0, s1, s2;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = peg$parseStringLiteral();\n    if (s1 !== peg$FAILED) {\n      if (input.charCodeAt(peg$currPos) === 105) {\n        s2 = peg$c81;\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c82); }\n      }\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c83(s1, s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c80); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseStringLiteral() {\n    var s0, s1, s2, s3;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 34) {\n      s1 = peg$c85;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c86); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$parseDoubleStringCharacter();\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$parseDoubleStringCharacter();\n      }\n      if (s2 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 34) {\n          s3 = peg$c85;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c86); }\n        }\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c87(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 39) {\n        s1 = peg$c88;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c89); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        s3 = peg$parseSingleStringCharacter();\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$parseSingleStringCharacter();\n        }\n        if (s2 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 39) {\n            s3 = peg$c88;\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c89); }\n          }\n          if (s3 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c87(s2);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c84); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseDoubleStringCharacter() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    s1 = peg$currPos;\n    peg$silentFails++;\n    if (input.charCodeAt(peg$currPos) === 34) {\n      s2 = peg$c85;\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c86); }\n    }\n    if (s2 === peg$FAILED) {\n      if (input.charCodeAt(peg$currPos) === 92) {\n        s2 = peg$c73;\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c74); }\n      }\n      if (s2 === peg$FAILED) {\n        s2 = peg$parseLineTerminator();\n      }\n    }\n    peg$silentFails--;\n    if (s2 === peg$FAILED) {\n      s1 = void 0;\n    } else {\n      peg$currPos = s1;\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseSourceCharacter();\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c90();\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 92) {\n        s1 = peg$c73;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c74); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseEscapeSequence();\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c75(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseLineContinuation();\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseSingleStringCharacter() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    s1 = peg$currPos;\n    peg$silentFails++;\n    if (input.charCodeAt(peg$currPos) === 39) {\n      s2 = peg$c88;\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c89); }\n    }\n    if (s2 === peg$FAILED) {\n      if (input.charCodeAt(peg$currPos) === 92) {\n        s2 = peg$c73;\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c74); }\n      }\n      if (s2 === peg$FAILED) {\n        s2 = peg$parseLineTerminator();\n      }\n    }\n    peg$silentFails--;\n    if (s2 === peg$FAILED) {\n      s1 = void 0;\n    } else {\n      peg$currPos = s1;\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseSourceCharacter();\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c90();\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 92) {\n        s1 = peg$c73;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c74); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseEscapeSequence();\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c75(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseLineContinuation();\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseCharacterClassMatcher() {\n    var s0, s1, s2, s3, s4, s5;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 91) {\n      s1 = peg$c92;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c93); }\n    }\n    if (s1 !== peg$FAILED) {\n      if (input.charCodeAt(peg$currPos) === 94) {\n        s2 = peg$c94;\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c95); }\n      }\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = [];\n        s4 = peg$parseClassCharacterRange();\n        if (s4 === peg$FAILED) {\n          s4 = peg$parseClassCharacter();\n        }\n        while (s4 !== peg$FAILED) {\n          s3.push(s4);\n          s4 = peg$parseClassCharacterRange();\n          if (s4 === peg$FAILED) {\n            s4 = peg$parseClassCharacter();\n          }\n        }\n        if (s3 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 93) {\n            s4 = peg$c96;\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c97); }\n          }\n          if (s4 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 105) {\n              s5 = peg$c81;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c82); }\n            }\n            if (s5 === peg$FAILED) {\n              s5 = null;\n            }\n            if (s5 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c98(s2, s3, s5);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c91); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseClassCharacterRange() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = peg$parseClassCharacter();\n    if (s1 !== peg$FAILED) {\n      if (input.charCodeAt(peg$currPos) === 45) {\n        s2 = peg$c99;\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c100); }\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseClassCharacter();\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c101(s1, s3);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseClassCharacter() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    s1 = peg$currPos;\n    peg$silentFails++;\n    if (input.charCodeAt(peg$currPos) === 93) {\n      s2 = peg$c96;\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c97); }\n    }\n    if (s2 === peg$FAILED) {\n      if (input.charCodeAt(peg$currPos) === 92) {\n        s2 = peg$c73;\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c74); }\n      }\n      if (s2 === peg$FAILED) {\n        s2 = peg$parseLineTerminator();\n      }\n    }\n    peg$silentFails--;\n    if (s2 === peg$FAILED) {\n      s1 = void 0;\n    } else {\n      peg$currPos = s1;\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseSourceCharacter();\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c90();\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 92) {\n        s1 = peg$c73;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c74); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseEscapeSequence();\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c75(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseLineContinuation();\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseLineContinuation() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 92) {\n      s1 = peg$c73;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c74); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseLineTerminatorSequence();\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c102();\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseEscapeSequence() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$parseCharacterEscapeSequence();\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 48) {\n        s1 = peg$c103;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c104); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$currPos;\n        peg$silentFails++;\n        s3 = peg$parseDecimalDigit();\n        peg$silentFails--;\n        if (s3 === peg$FAILED) {\n          s2 = void 0;\n        } else {\n          peg$currPos = s2;\n          s2 = peg$FAILED;\n        }\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c105();\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseHexEscapeSequence();\n        if (s0 === peg$FAILED) {\n          s0 = peg$parseUnicodeEscapeSequence();\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseCharacterEscapeSequence() {\n    var s0;\n\n    s0 = peg$parseSingleEscapeCharacter();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseNonEscapeCharacter();\n    }\n\n    return s0;\n  }\n\n  function peg$parseSingleEscapeCharacter() {\n    var s0, s1;\n\n    if (input.charCodeAt(peg$currPos) === 39) {\n      s0 = peg$c88;\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c89); }\n    }\n    if (s0 === peg$FAILED) {\n      if (input.charCodeAt(peg$currPos) === 34) {\n        s0 = peg$c85;\n        peg$currPos++;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c86); }\n      }\n      if (s0 === peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 92) {\n          s0 = peg$c73;\n          peg$currPos++;\n        } else {\n          s0 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c74); }\n        }\n        if (s0 === peg$FAILED) {\n          s0 = peg$currPos;\n          if (input.charCodeAt(peg$currPos) === 98) {\n            s1 = peg$c106;\n            peg$currPos++;\n          } else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c107); }\n          }\n          if (s1 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c108();\n          }\n          s0 = s1;\n          if (s0 === peg$FAILED) {\n            s0 = peg$currPos;\n            if (input.charCodeAt(peg$currPos) === 102) {\n              s1 = peg$c109;\n              peg$currPos++;\n            } else {\n              s1 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c110); }\n            }\n            if (s1 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c111();\n            }\n            s0 = s1;\n            if (s0 === peg$FAILED) {\n              s0 = peg$currPos;\n              if (input.charCodeAt(peg$currPos) === 110) {\n                s1 = peg$c112;\n                peg$currPos++;\n              } else {\n                s1 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c113); }\n              }\n              if (s1 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c114();\n              }\n              s0 = s1;\n              if (s0 === peg$FAILED) {\n                s0 = peg$currPos;\n                if (input.charCodeAt(peg$currPos) === 114) {\n                  s1 = peg$c115;\n                  peg$currPos++;\n                } else {\n                  s1 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c116); }\n                }\n                if (s1 !== peg$FAILED) {\n                  peg$savedPos = s0;\n                  s1 = peg$c117();\n                }\n                s0 = s1;\n                if (s0 === peg$FAILED) {\n                  s0 = peg$currPos;\n                  if (input.charCodeAt(peg$currPos) === 116) {\n                    s1 = peg$c118;\n                    peg$currPos++;\n                  } else {\n                    s1 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c119); }\n                  }\n                  if (s1 !== peg$FAILED) {\n                    peg$savedPos = s0;\n                    s1 = peg$c120();\n                  }\n                  s0 = s1;\n                  if (s0 === peg$FAILED) {\n                    s0 = peg$currPos;\n                    if (input.charCodeAt(peg$currPos) === 118) {\n                      s1 = peg$c121;\n                      peg$currPos++;\n                    } else {\n                      s1 = peg$FAILED;\n                      if (peg$silentFails === 0) { peg$fail(peg$c122); }\n                    }\n                    if (s1 !== peg$FAILED) {\n                      peg$savedPos = s0;\n                      s1 = peg$c123();\n                    }\n                    s0 = s1;\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseNonEscapeCharacter() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    s1 = peg$currPos;\n    peg$silentFails++;\n    s2 = peg$parseEscapeCharacter();\n    if (s2 === peg$FAILED) {\n      s2 = peg$parseLineTerminator();\n    }\n    peg$silentFails--;\n    if (s2 === peg$FAILED) {\n      s1 = void 0;\n    } else {\n      peg$currPos = s1;\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseSourceCharacter();\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c90();\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseEscapeCharacter() {\n    var s0;\n\n    s0 = peg$parseSingleEscapeCharacter();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseDecimalDigit();\n      if (s0 === peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 120) {\n          s0 = peg$c124;\n          peg$currPos++;\n        } else {\n          s0 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c125); }\n        }\n        if (s0 === peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 117) {\n            s0 = peg$c126;\n            peg$currPos++;\n          } else {\n            s0 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c127); }\n          }\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseHexEscapeSequence() {\n    var s0, s1, s2, s3, s4, s5;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 120) {\n      s1 = peg$c124;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c125); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$currPos;\n      s3 = peg$currPos;\n      s4 = peg$parseHexDigit();\n      if (s4 !== peg$FAILED) {\n        s5 = peg$parseHexDigit();\n        if (s5 !== peg$FAILED) {\n          s4 = [s4, s5];\n          s3 = s4;\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n      if (s3 !== peg$FAILED) {\n        s2 = input.substring(s2, peg$currPos);\n      } else {\n        s2 = s3;\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c128(s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseUnicodeEscapeSequence() {\n    var s0, s1, s2, s3, s4, s5, s6, s7;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 117) {\n      s1 = peg$c126;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c127); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$currPos;\n      s3 = peg$currPos;\n      s4 = peg$parseHexDigit();\n      if (s4 !== peg$FAILED) {\n        s5 = peg$parseHexDigit();\n        if (s5 !== peg$FAILED) {\n          s6 = peg$parseHexDigit();\n          if (s6 !== peg$FAILED) {\n            s7 = peg$parseHexDigit();\n            if (s7 !== peg$FAILED) {\n              s4 = [s4, s5, s6, s7];\n              s3 = s4;\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n      if (s3 !== peg$FAILED) {\n        s2 = input.substring(s2, peg$currPos);\n      } else {\n        s2 = s3;\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c128(s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseDecimalDigit() {\n    var s0;\n\n    if (peg$c129.test(input.charAt(peg$currPos))) {\n      s0 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c130); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseHexDigit() {\n    var s0;\n\n    if (peg$c131.test(input.charAt(peg$currPos))) {\n      s0 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c132); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseAnyMatcher() {\n    var s0, s1;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 46) {\n      s1 = peg$c133;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c134); }\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c135();\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseCodeBlock() {\n    var s0, s1, s2, s3;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 123) {\n      s1 = peg$c137;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c138); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseCode();\n      if (s2 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 125) {\n          s3 = peg$c139;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c140); }\n        }\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c141(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c136); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseCode() {\n    var s0, s1, s2, s3, s4, s5;\n\n    s0 = peg$currPos;\n    s1 = [];\n    s2 = [];\n    s3 = peg$currPos;\n    s4 = peg$currPos;\n    peg$silentFails++;\n    if (peg$c142.test(input.charAt(peg$currPos))) {\n      s5 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s5 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c143); }\n    }\n    peg$silentFails--;\n    if (s5 === peg$FAILED) {\n      s4 = void 0;\n    } else {\n      peg$currPos = s4;\n      s4 = peg$FAILED;\n    }\n    if (s4 !== peg$FAILED) {\n      s5 = peg$parseSourceCharacter();\n      if (s5 !== peg$FAILED) {\n        s4 = [s4, s5];\n        s3 = s4;\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s3;\n      s3 = peg$FAILED;\n    }\n    if (s3 !== peg$FAILED) {\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$currPos;\n        s4 = peg$currPos;\n        peg$silentFails++;\n        if (peg$c142.test(input.charAt(peg$currPos))) {\n          s5 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s5 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c143); }\n        }\n        peg$silentFails--;\n        if (s5 === peg$FAILED) {\n          s4 = void 0;\n        } else {\n          peg$currPos = s4;\n          s4 = peg$FAILED;\n        }\n        if (s4 !== peg$FAILED) {\n          s5 = peg$parseSourceCharacter();\n          if (s5 !== peg$FAILED) {\n            s4 = [s4, s5];\n            s3 = s4;\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      }\n    } else {\n      s2 = peg$FAILED;\n    }\n    if (s2 === peg$FAILED) {\n      s2 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 123) {\n        s3 = peg$c137;\n        peg$currPos++;\n      } else {\n        s3 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c138); }\n      }\n      if (s3 !== peg$FAILED) {\n        s4 = peg$parseCode();\n        if (s4 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 125) {\n            s5 = peg$c139;\n            peg$currPos++;\n          } else {\n            s5 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c140); }\n          }\n          if (s5 !== peg$FAILED) {\n            s3 = [s3, s4, s5];\n            s2 = s3;\n          } else {\n            peg$currPos = s2;\n            s2 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s2;\n          s2 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s2;\n        s2 = peg$FAILED;\n      }\n    }\n    while (s2 !== peg$FAILED) {\n      s1.push(s2);\n      s2 = [];\n      s3 = peg$currPos;\n      s4 = peg$currPos;\n      peg$silentFails++;\n      if (peg$c142.test(input.charAt(peg$currPos))) {\n        s5 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s5 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c143); }\n      }\n      peg$silentFails--;\n      if (s5 === peg$FAILED) {\n        s4 = void 0;\n      } else {\n        peg$currPos = s4;\n        s4 = peg$FAILED;\n      }\n      if (s4 !== peg$FAILED) {\n        s5 = peg$parseSourceCharacter();\n        if (s5 !== peg$FAILED) {\n          s4 = [s4, s5];\n          s3 = s4;\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n      if (s3 !== peg$FAILED) {\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$currPos;\n          s4 = peg$currPos;\n          peg$silentFails++;\n          if (peg$c142.test(input.charAt(peg$currPos))) {\n            s5 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s5 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c143); }\n          }\n          peg$silentFails--;\n          if (s5 === peg$FAILED) {\n            s4 = void 0;\n          } else {\n            peg$currPos = s4;\n            s4 = peg$FAILED;\n          }\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parseSourceCharacter();\n            if (s5 !== peg$FAILED) {\n              s4 = [s4, s5];\n              s3 = s4;\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        }\n      } else {\n        s2 = peg$FAILED;\n      }\n      if (s2 === peg$FAILED) {\n        s2 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 123) {\n          s3 = peg$c137;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c138); }\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parseCode();\n          if (s4 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 125) {\n              s5 = peg$c139;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c140); }\n            }\n            if (s5 !== peg$FAILED) {\n              s3 = [s3, s4, s5];\n              s2 = s3;\n            } else {\n              peg$currPos = s2;\n              s2 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s2;\n            s2 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s2;\n          s2 = peg$FAILED;\n        }\n      }\n    }\n    if (s1 !== peg$FAILED) {\n      s0 = input.substring(s0, peg$currPos);\n    } else {\n      s0 = s1;\n    }\n\n    return s0;\n  }\n\n  function peg$parseLl() {\n    var s0;\n\n    if (peg$c144.test(input.charAt(peg$currPos))) {\n      s0 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c145); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseLm() {\n    var s0;\n\n    if (peg$c146.test(input.charAt(peg$currPos))) {\n      s0 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c147); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseLo() {\n    var s0;\n\n    if (peg$c148.test(input.charAt(peg$currPos))) {\n      s0 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c149); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseLt() {\n    var s0;\n\n    if (peg$c150.test(input.charAt(peg$currPos))) {\n      s0 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c151); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseLu() {\n    var s0;\n\n    if (peg$c152.test(input.charAt(peg$currPos))) {\n      s0 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c153); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseMc() {\n    var s0;\n\n    if (peg$c154.test(input.charAt(peg$currPos))) {\n      s0 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c155); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseMn() {\n    var s0;\n\n    if (peg$c156.test(input.charAt(peg$currPos))) {\n      s0 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c157); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseNd() {\n    var s0;\n\n    if (peg$c158.test(input.charAt(peg$currPos))) {\n      s0 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c159); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseNl() {\n    var s0;\n\n    if (peg$c160.test(input.charAt(peg$currPos))) {\n      s0 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c161); }\n    }\n\n    return s0;\n  }\n\n  function peg$parsePc() {\n    var s0;\n\n    if (peg$c162.test(input.charAt(peg$currPos))) {\n      s0 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c163); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseZs() {\n    var s0;\n\n    if (peg$c164.test(input.charAt(peg$currPos))) {\n      s0 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c165); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseBreakToken() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 5) === peg$c166) {\n      s1 = peg$c166;\n      peg$currPos += 5;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c167); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$currPos;\n      peg$silentFails++;\n      s3 = peg$parseIdentifierPart();\n      peg$silentFails--;\n      if (s3 === peg$FAILED) {\n        s2 = void 0;\n      } else {\n        peg$currPos = s2;\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        s1 = [s1, s2];\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseCaseToken() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 4) === peg$c168) {\n      s1 = peg$c168;\n      peg$currPos += 4;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c169); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$currPos;\n      peg$silentFails++;\n      s3 = peg$parseIdentifierPart();\n      peg$silentFails--;\n      if (s3 === peg$FAILED) {\n        s2 = void 0;\n      } else {\n        peg$currPos = s2;\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        s1 = [s1, s2];\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseCatchToken() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 5) === peg$c170) {\n      s1 = peg$c170;\n      peg$currPos += 5;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c171); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$currPos;\n      peg$silentFails++;\n      s3 = peg$parseIdentifierPart();\n      peg$silentFails--;\n      if (s3 === peg$FAILED) {\n        s2 = void 0;\n      } else {\n        peg$currPos = s2;\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        s1 = [s1, s2];\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseClassToken() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 5) === peg$c172) {\n      s1 = peg$c172;\n      peg$currPos += 5;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c173); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$currPos;\n      peg$silentFails++;\n      s3 = peg$parseIdentifierPart();\n      peg$silentFails--;\n      if (s3 === peg$FAILED) {\n        s2 = void 0;\n      } else {\n        peg$currPos = s2;\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        s1 = [s1, s2];\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseConstToken() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 5) === peg$c174) {\n      s1 = peg$c174;\n      peg$currPos += 5;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c175); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$currPos;\n      peg$silentFails++;\n      s3 = peg$parseIdentifierPart();\n      peg$silentFails--;\n      if (s3 === peg$FAILED) {\n        s2 = void 0;\n      } else {\n        peg$currPos = s2;\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        s1 = [s1, s2];\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseContinueToken() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 8) === peg$c176) {\n      s1 = peg$c176;\n      peg$currPos += 8;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c177); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$currPos;\n      peg$silentFails++;\n      s3 = peg$parseIdentifierPart();\n      peg$silentFails--;\n      if (s3 === peg$FAILED) {\n        s2 = void 0;\n      } else {\n        peg$currPos = s2;\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        s1 = [s1, s2];\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseDebuggerToken() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 8) === peg$c178) {\n      s1 = peg$c178;\n      peg$currPos += 8;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c179); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$currPos;\n      peg$silentFails++;\n      s3 = peg$parseIdentifierPart();\n      peg$silentFails--;\n      if (s3 === peg$FAILED) {\n        s2 = void 0;\n      } else {\n        peg$currPos = s2;\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        s1 = [s1, s2];\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseDefaultToken() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 7) === peg$c180) {\n      s1 = peg$c180;\n      peg$currPos += 7;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c181); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$currPos;\n      peg$silentFails++;\n      s3 = peg$parseIdentifierPart();\n      peg$silentFails--;\n      if (s3 === peg$FAILED) {\n        s2 = void 0;\n      } else {\n        peg$currPos = s2;\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        s1 = [s1, s2];\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseDeleteToken() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 6) === peg$c182) {\n      s1 = peg$c182;\n      peg$currPos += 6;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c183); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$currPos;\n      peg$silentFails++;\n      s3 = peg$parseIdentifierPart();\n      peg$silentFails--;\n      if (s3 === peg$FAILED) {\n        s2 = void 0;\n      } else {\n        peg$currPos = s2;\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        s1 = [s1, s2];\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseDoToken() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 2) === peg$c184) {\n      s1 = peg$c184;\n      peg$currPos += 2;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c185); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$currPos;\n      peg$silentFails++;\n      s3 = peg$parseIdentifierPart();\n      peg$silentFails--;\n      if (s3 === peg$FAILED) {\n        s2 = void 0;\n      } else {\n        peg$currPos = s2;\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        s1 = [s1, s2];\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseElseToken() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 4) === peg$c186) {\n      s1 = peg$c186;\n      peg$currPos += 4;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c187); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$currPos;\n      peg$silentFails++;\n      s3 = peg$parseIdentifierPart();\n      peg$silentFails--;\n      if (s3 === peg$FAILED) {\n        s2 = void 0;\n      } else {\n        peg$currPos = s2;\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        s1 = [s1, s2];\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseEnumToken() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 4) === peg$c188) {\n      s1 = peg$c188;\n      peg$currPos += 4;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c189); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$currPos;\n      peg$silentFails++;\n      s3 = peg$parseIdentifierPart();\n      peg$silentFails--;\n      if (s3 === peg$FAILED) {\n        s2 = void 0;\n      } else {\n        peg$currPos = s2;\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        s1 = [s1, s2];\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseExportToken() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 6) === peg$c190) {\n      s1 = peg$c190;\n      peg$currPos += 6;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c191); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$currPos;\n      peg$silentFails++;\n      s3 = peg$parseIdentifierPart();\n      peg$silentFails--;\n      if (s3 === peg$FAILED) {\n        s2 = void 0;\n      } else {\n        peg$currPos = s2;\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        s1 = [s1, s2];\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseExtendsToken() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 7) === peg$c192) {\n      s1 = peg$c192;\n      peg$currPos += 7;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c193); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$currPos;\n      peg$silentFails++;\n      s3 = peg$parseIdentifierPart();\n      peg$silentFails--;\n      if (s3 === peg$FAILED) {\n        s2 = void 0;\n      } else {\n        peg$currPos = s2;\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        s1 = [s1, s2];\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseFalseToken() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 5) === peg$c194) {\n      s1 = peg$c194;\n      peg$currPos += 5;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c195); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$currPos;\n      peg$silentFails++;\n      s3 = peg$parseIdentifierPart();\n      peg$silentFails--;\n      if (s3 === peg$FAILED) {\n        s2 = void 0;\n      } else {\n        peg$currPos = s2;\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        s1 = [s1, s2];\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseFinallyToken() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 7) === peg$c196) {\n      s1 = peg$c196;\n      peg$currPos += 7;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c197); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$currPos;\n      peg$silentFails++;\n      s3 = peg$parseIdentifierPart();\n      peg$silentFails--;\n      if (s3 === peg$FAILED) {\n        s2 = void 0;\n      } else {\n        peg$currPos = s2;\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        s1 = [s1, s2];\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseForToken() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 3) === peg$c198) {\n      s1 = peg$c198;\n      peg$currPos += 3;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c199); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$currPos;\n      peg$silentFails++;\n      s3 = peg$parseIdentifierPart();\n      peg$silentFails--;\n      if (s3 === peg$FAILED) {\n        s2 = void 0;\n      } else {\n        peg$currPos = s2;\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        s1 = [s1, s2];\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseFunctionToken() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 8) === peg$c200) {\n      s1 = peg$c200;\n      peg$currPos += 8;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c201); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$currPos;\n      peg$silentFails++;\n      s3 = peg$parseIdentifierPart();\n      peg$silentFails--;\n      if (s3 === peg$FAILED) {\n        s2 = void 0;\n      } else {\n        peg$currPos = s2;\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        s1 = [s1, s2];\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseIfToken() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 2) === peg$c202) {\n      s1 = peg$c202;\n      peg$currPos += 2;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c203); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$currPos;\n      peg$silentFails++;\n      s3 = peg$parseIdentifierPart();\n      peg$silentFails--;\n      if (s3 === peg$FAILED) {\n        s2 = void 0;\n      } else {\n        peg$currPos = s2;\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        s1 = [s1, s2];\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseImportToken() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 6) === peg$c204) {\n      s1 = peg$c204;\n      peg$currPos += 6;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c205); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$currPos;\n      peg$silentFails++;\n      s3 = peg$parseIdentifierPart();\n      peg$silentFails--;\n      if (s3 === peg$FAILED) {\n        s2 = void 0;\n      } else {\n        peg$currPos = s2;\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        s1 = [s1, s2];\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseInstanceofToken() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 10) === peg$c206) {\n      s1 = peg$c206;\n      peg$currPos += 10;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c207); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$currPos;\n      peg$silentFails++;\n      s3 = peg$parseIdentifierPart();\n      peg$silentFails--;\n      if (s3 === peg$FAILED) {\n        s2 = void 0;\n      } else {\n        peg$currPos = s2;\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        s1 = [s1, s2];\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseInToken() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 2) === peg$c208) {\n      s1 = peg$c208;\n      peg$currPos += 2;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c209); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$currPos;\n      peg$silentFails++;\n      s3 = peg$parseIdentifierPart();\n      peg$silentFails--;\n      if (s3 === peg$FAILED) {\n        s2 = void 0;\n      } else {\n        peg$currPos = s2;\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        s1 = [s1, s2];\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseNewToken() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 3) === peg$c210) {\n      s1 = peg$c210;\n      peg$currPos += 3;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c211); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$currPos;\n      peg$silentFails++;\n      s3 = peg$parseIdentifierPart();\n      peg$silentFails--;\n      if (s3 === peg$FAILED) {\n        s2 = void 0;\n      } else {\n        peg$currPos = s2;\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        s1 = [s1, s2];\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseNullToken() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 4) === peg$c212) {\n      s1 = peg$c212;\n      peg$currPos += 4;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c213); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$currPos;\n      peg$silentFails++;\n      s3 = peg$parseIdentifierPart();\n      peg$silentFails--;\n      if (s3 === peg$FAILED) {\n        s2 = void 0;\n      } else {\n        peg$currPos = s2;\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        s1 = [s1, s2];\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseReturnToken() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 6) === peg$c214) {\n      s1 = peg$c214;\n      peg$currPos += 6;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c215); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$currPos;\n      peg$silentFails++;\n      s3 = peg$parseIdentifierPart();\n      peg$silentFails--;\n      if (s3 === peg$FAILED) {\n        s2 = void 0;\n      } else {\n        peg$currPos = s2;\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        s1 = [s1, s2];\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseSuperToken() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 5) === peg$c216) {\n      s1 = peg$c216;\n      peg$currPos += 5;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c217); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$currPos;\n      peg$silentFails++;\n      s3 = peg$parseIdentifierPart();\n      peg$silentFails--;\n      if (s3 === peg$FAILED) {\n        s2 = void 0;\n      } else {\n        peg$currPos = s2;\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        s1 = [s1, s2];\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseSwitchToken() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 6) === peg$c218) {\n      s1 = peg$c218;\n      peg$currPos += 6;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c219); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$currPos;\n      peg$silentFails++;\n      s3 = peg$parseIdentifierPart();\n      peg$silentFails--;\n      if (s3 === peg$FAILED) {\n        s2 = void 0;\n      } else {\n        peg$currPos = s2;\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        s1 = [s1, s2];\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseThisToken() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 4) === peg$c220) {\n      s1 = peg$c220;\n      peg$currPos += 4;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c221); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$currPos;\n      peg$silentFails++;\n      s3 = peg$parseIdentifierPart();\n      peg$silentFails--;\n      if (s3 === peg$FAILED) {\n        s2 = void 0;\n      } else {\n        peg$currPos = s2;\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        s1 = [s1, s2];\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseThrowToken() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 5) === peg$c222) {\n      s1 = peg$c222;\n      peg$currPos += 5;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c223); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$currPos;\n      peg$silentFails++;\n      s3 = peg$parseIdentifierPart();\n      peg$silentFails--;\n      if (s3 === peg$FAILED) {\n        s2 = void 0;\n      } else {\n        peg$currPos = s2;\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        s1 = [s1, s2];\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseTrueToken() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 4) === peg$c224) {\n      s1 = peg$c224;\n      peg$currPos += 4;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c225); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$currPos;\n      peg$silentFails++;\n      s3 = peg$parseIdentifierPart();\n      peg$silentFails--;\n      if (s3 === peg$FAILED) {\n        s2 = void 0;\n      } else {\n        peg$currPos = s2;\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        s1 = [s1, s2];\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseTryToken() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 3) === peg$c226) {\n      s1 = peg$c226;\n      peg$currPos += 3;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c227); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$currPos;\n      peg$silentFails++;\n      s3 = peg$parseIdentifierPart();\n      peg$silentFails--;\n      if (s3 === peg$FAILED) {\n        s2 = void 0;\n      } else {\n        peg$currPos = s2;\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        s1 = [s1, s2];\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseTypeofToken() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 6) === peg$c228) {\n      s1 = peg$c228;\n      peg$currPos += 6;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c229); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$currPos;\n      peg$silentFails++;\n      s3 = peg$parseIdentifierPart();\n      peg$silentFails--;\n      if (s3 === peg$FAILED) {\n        s2 = void 0;\n      } else {\n        peg$currPos = s2;\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        s1 = [s1, s2];\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseVarToken() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 3) === peg$c230) {\n      s1 = peg$c230;\n      peg$currPos += 3;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c231); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$currPos;\n      peg$silentFails++;\n      s3 = peg$parseIdentifierPart();\n      peg$silentFails--;\n      if (s3 === peg$FAILED) {\n        s2 = void 0;\n      } else {\n        peg$currPos = s2;\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        s1 = [s1, s2];\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseVoidToken() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 4) === peg$c232) {\n      s1 = peg$c232;\n      peg$currPos += 4;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c233); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$currPos;\n      peg$silentFails++;\n      s3 = peg$parseIdentifierPart();\n      peg$silentFails--;\n      if (s3 === peg$FAILED) {\n        s2 = void 0;\n      } else {\n        peg$currPos = s2;\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        s1 = [s1, s2];\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseWhileToken() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 5) === peg$c234) {\n      s1 = peg$c234;\n      peg$currPos += 5;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c235); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$currPos;\n      peg$silentFails++;\n      s3 = peg$parseIdentifierPart();\n      peg$silentFails--;\n      if (s3 === peg$FAILED) {\n        s2 = void 0;\n      } else {\n        peg$currPos = s2;\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        s1 = [s1, s2];\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseWithToken() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 4) === peg$c236) {\n      s1 = peg$c236;\n      peg$currPos += 4;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c237); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$currPos;\n      peg$silentFails++;\n      s3 = peg$parseIdentifierPart();\n      peg$silentFails--;\n      if (s3 === peg$FAILED) {\n        s2 = void 0;\n      } else {\n        peg$currPos = s2;\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        s1 = [s1, s2];\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parse__() {\n    var s0, s1;\n\n    s0 = [];\n    s1 = peg$parseWhiteSpace();\n    if (s1 === peg$FAILED) {\n      s1 = peg$parseLineTerminatorSequence();\n      if (s1 === peg$FAILED) {\n        s1 = peg$parseComment();\n      }\n    }\n    while (s1 !== peg$FAILED) {\n      s0.push(s1);\n      s1 = peg$parseWhiteSpace();\n      if (s1 === peg$FAILED) {\n        s1 = peg$parseLineTerminatorSequence();\n        if (s1 === peg$FAILED) {\n          s1 = peg$parseComment();\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parse_() {\n    var s0, s1;\n\n    s0 = [];\n    s1 = peg$parseWhiteSpace();\n    if (s1 === peg$FAILED) {\n      s1 = peg$parseMultiLineCommentNoLineTerminator();\n    }\n    while (s1 !== peg$FAILED) {\n      s0.push(s1);\n      s1 = peg$parseWhiteSpace();\n      if (s1 === peg$FAILED) {\n        s1 = peg$parseMultiLineCommentNoLineTerminator();\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseEOS() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = peg$parse__();\n    if (s1 !== peg$FAILED) {\n      if (input.charCodeAt(peg$currPos) === 59) {\n        s2 = peg$c238;\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c239); }\n      }\n      if (s2 !== peg$FAILED) {\n        s1 = [s1, s2];\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$parse_();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseSingleLineComment();\n        if (s2 === peg$FAILED) {\n          s2 = null;\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseLineTerminatorSequence();\n          if (s3 !== peg$FAILED) {\n            s1 = [s1, s2, s3];\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = peg$parse__();\n        if (s1 !== peg$FAILED) {\n          s2 = peg$parseEOF();\n          if (s2 !== peg$FAILED) {\n            s1 = [s1, s2];\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseEOF() {\n    var s0, s1;\n\n    s0 = peg$currPos;\n    peg$silentFails++;\n    if (input.length > peg$currPos) {\n      s1 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c34); }\n    }\n    peg$silentFails--;\n    if (s1 === peg$FAILED) {\n      s0 = void 0;\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n\n    var OPS_TO_PREFIXED_TYPES = {\n      \"$\": \"text\",\n      \"&\": \"simple_and\",\n      \"!\": \"simple_not\"\n    };\n\n    var OPS_TO_SUFFIXED_TYPES = {\n      \"?\": \"optional\",\n      \"*\": \"zero_or_more\",\n      \"+\": \"one_or_more\"\n    };\n\n    var OPS_TO_SEMANTIC_PREDICATE_TYPES = {\n      \"&\": \"semantic_and\",\n      \"!\": \"semantic_not\"\n    };\n\n    function filterEmptyStrings(array) {\n      var result = [], i;\n\n      for (i = 0; i < array.length; i++) {\n        if (array[i] !== \"\") {\n          result.push(array[i]);\n        }\n      }\n\n      return result;\n    }\n\n    function extractOptional(optional, index) {\n      return optional ? optional[index] : null;\n    }\n\n    function extractList(list, index) {\n      var result = new Array(list.length), i;\n\n      for (i = 0; i < list.length; i++) {\n        result[i] = list[i][index];\n      }\n\n      return result;\n    }\n\n    function buildList(head, tail, index) {\n      return [head].concat(extractList(tail, index));\n    }\n\n\n  peg$result = peg$startRuleFunction();\n\n  if (peg$result !== peg$FAILED && peg$currPos === input.length) {\n    return peg$result;\n  } else {\n    if (peg$result !== peg$FAILED && peg$currPos < input.length) {\n      peg$fail(peg$endExpectation());\n    }\n\n    throw peg$buildStructuredError(\n      peg$maxFailExpected,\n      peg$maxFailPos < input.length ? input.charAt(peg$maxFailPos) : null,\n      peg$maxFailPos < input.length\n        ? peg$computeLocation(peg$maxFailPos, peg$maxFailPos + 1)\n        : peg$computeLocation(peg$maxFailPos, peg$maxFailPos)\n    );\n  }\n}\n\nmodule.exports = {\n  SyntaxError: peg$SyntaxError,\n  parse:       peg$parse\n};\n","\"use strict\";\n\nvar objects = require(\"../utils/objects\"),\n    arrays  = require(\"../utils/arrays\");\n\n/* Simple AST node visitor builder. */\nvar visitor = {\n  build: function(functions) {\n    function visit(node) {\n      return functions[node.type].apply(null, arguments);\n    }\n\n    function visitNop() { }\n\n    function visitExpression(node) {\n      var extraArgs = Array.prototype.slice.call(arguments, 1);\n\n      visit.apply(null, [node.expression].concat(extraArgs));\n    }\n\n    function visitChildren(property) {\n      return function(node) {\n        var extraArgs = Array.prototype.slice.call(arguments, 1);\n\n        arrays.each(node[property], function(child) {\n          visit.apply(null, [child].concat(extraArgs));\n        });\n      };\n    }\n\n    var DEFAULT_FUNCTIONS = {\n          grammar: function(node) {\n            var extraArgs = Array.prototype.slice.call(arguments, 1);\n\n            if (node.initializer) {\n              visit.apply(null, [node.initializer].concat(extraArgs));\n            }\n\n            arrays.each(node.rules, function(rule) {\n              visit.apply(null, [rule].concat(extraArgs));\n            });\n          },\n\n          initializer:  visitNop,\n          rule:         visitExpression,\n          named:        visitExpression,\n          choice:       visitChildren(\"alternatives\"),\n          action:       visitExpression,\n          sequence:     visitChildren(\"elements\"),\n          labeled:      visitExpression,\n          text:         visitExpression,\n          simple_and:   visitExpression,\n          simple_not:   visitExpression,\n          optional:     visitExpression,\n          zero_or_more: visitExpression,\n          one_or_more:  visitExpression,\n          group:        visitExpression,\n          semantic_and: visitNop,\n          semantic_not: visitNop,\n          rule_ref:     visitNop,\n          literal:      visitNop,\n          \"class\":      visitNop,\n          any:          visitNop\n        };\n\n    objects.defaults(functions, DEFAULT_FUNCTIONS);\n\n    return visit;\n  }\n};\n\nmodule.exports = visitor;\n","\"use strict\";\n\nvar arrays  = require(\"../utils/arrays\"),\n    visitor = require(\"./visitor\");\n\n/* AST utilities. */\nvar asts = {\n  findRule: function(ast, name) {\n    return arrays.find(ast.rules, function(r) { return r.name === name; });\n  },\n\n  indexOfRule: function(ast, name) {\n    return arrays.indexOf(ast.rules, function(r) { return r.name === name; });\n  },\n\n  alwaysConsumesOnSuccess: function(ast, node) {\n    function consumesTrue()  { return true;  }\n    function consumesFalse() { return false; }\n\n    function consumesExpression(node) {\n      return consumes(node.expression);\n    }\n\n    var consumes = visitor.build({\n      rule:  consumesExpression,\n      named: consumesExpression,\n\n      choice: function(node) {\n        return arrays.every(node.alternatives, consumes);\n      },\n\n      action: consumesExpression,\n\n      sequence: function(node) {\n        return arrays.some(node.elements, consumes);\n      },\n\n      labeled:      consumesExpression,\n      text:         consumesExpression,\n      simple_and:   consumesFalse,\n      simple_not:   consumesFalse,\n      optional:     consumesFalse,\n      zero_or_more: consumesFalse,\n      one_or_more:  consumesExpression,\n      group:        consumesExpression,\n      semantic_and: consumesFalse,\n      semantic_not: consumesFalse,\n\n      rule_ref: function(node) {\n        return consumes(asts.findRule(ast, node.name));\n      },\n\n      literal: function(node) {\n        return node.value !== \"\";\n      },\n\n      \"class\": consumesTrue,\n      any:     consumesTrue\n    });\n\n    return consumes(node);\n  }\n};\n\nmodule.exports = asts;\n","\"use strict\";\n\nvar GrammarError = require(\"../../grammar-error\"),\n    asts         = require(\"../asts\"),\n    visitor      = require(\"../visitor\");\n\n/* Checks that all referenced rules exist. */\nfunction reportUndefinedRules(ast) {\n  var check = visitor.build({\n    rule_ref: function(node) {\n      if (!asts.findRule(ast, node.name)) {\n        throw new GrammarError(\n          \"Rule \\\"\" + node.name + \"\\\" is not defined.\",\n          node.location\n        );\n      }\n    }\n  });\n\n  check(ast);\n}\n\nmodule.exports = reportUndefinedRules;\n","\"use strict\";\n\nvar GrammarError = require(\"../../grammar-error\"),\n    visitor      = require(\"../visitor\");\n\n/* Checks that each rule is defined only once. */\nfunction reportDuplicateRules(ast) {\n  var rules = {};\n\n  var check = visitor.build({\n    rule: function(node) {\n      if (rules.hasOwnProperty(node.name)) {\n        throw new GrammarError(\n          \"Rule \\\"\" + node.name + \"\\\" is already defined \"\n            + \"at line \" + rules[node.name].start.line + \", \"\n            + \"column \" + rules[node.name].start.column + \".\",\n          node.location\n        );\n      }\n\n      rules[node.name] = node.location;\n    }\n  });\n\n  check(ast);\n}\n\nmodule.exports = reportDuplicateRules;\n","\"use strict\";\n\nvar GrammarError = require(\"../../grammar-error\"),\n    arrays       = require(\"../../utils/arrays\"),\n    objects      = require(\"../../utils/objects\"),\n    visitor      = require(\"../visitor\");\n\n/* Checks that each label is defined only once within each scope. */\nfunction reportDuplicateLabels(ast) {\n  function checkExpressionWithClonedEnv(node, env) {\n    check(node.expression, objects.clone(env));\n  }\n\n  var check = visitor.build({\n    rule: function(node) {\n      check(node.expression, { });\n    },\n\n    choice: function(node, env) {\n      arrays.each(node.alternatives, function(alternative) {\n        check(alternative, objects.clone(env));\n      });\n    },\n\n    action: checkExpressionWithClonedEnv,\n\n    labeled: function(node, env) {\n      if (env.hasOwnProperty(node.label)) {\n        throw new GrammarError(\n          \"Label \\\"\" + node.label + \"\\\" is already defined \"\n            + \"at line \" + env[node.label].start.line + \", \"\n            + \"column \" + env[node.label].start.column + \".\",\n          node.location\n        );\n      }\n\n      check(node.expression, env);\n\n      env[node.label] = node.location;\n    },\n\n    text:         checkExpressionWithClonedEnv,\n    simple_and:   checkExpressionWithClonedEnv,\n    simple_not:   checkExpressionWithClonedEnv,\n    optional:     checkExpressionWithClonedEnv,\n    zero_or_more: checkExpressionWithClonedEnv,\n    one_or_more:  checkExpressionWithClonedEnv,\n    group:        checkExpressionWithClonedEnv\n  });\n\n  check(ast);\n}\n\nmodule.exports = reportDuplicateLabels;\n","\"use strict\";\n\nvar arrays       = require(\"../../utils/arrays\"),\n    GrammarError = require(\"../../grammar-error\"),\n    asts         = require(\"../asts\"),\n    visitor      = require(\"../visitor\");\n\n/*\n * Reports left recursion in the grammar, which prevents infinite recursion in\n * the generated parser.\n *\n * Both direct and indirect recursion is detected. The pass also correctly\n * reports cases like this:\n *\n *   start = \"a\"? start\n *\n * In general, if a rule reference can be reached without consuming any input,\n * it can lead to left recursion.\n */\nfunction reportInfiniteRecursion(ast) {\n  var visitedRules = [];\n\n  var check = visitor.build({\n    rule: function(node) {\n      visitedRules.push(node.name);\n      check(node.expression);\n      visitedRules.pop(node.name);\n    },\n\n    sequence: function(node) {\n      arrays.every(node.elements, function(element) {\n        check(element);\n\n        return !asts.alwaysConsumesOnSuccess(ast, element);\n      });\n    },\n\n    rule_ref: function(node) {\n      if (arrays.contains(visitedRules, node.name)) {\n        visitedRules.push(node.name);\n\n        throw new GrammarError(\n          \"Possible infinite loop when parsing (left recursion: \"\n            + visitedRules.join(\" -> \")\n            + \").\",\n          node.location\n        );\n      }\n\n      check(asts.findRule(ast, node.name));\n    }\n  });\n\n  check(ast);\n}\n\nmodule.exports = reportInfiniteRecursion;\n","\"use strict\";\n\nvar GrammarError = require(\"../../grammar-error\"),\n    asts         = require(\"../asts\"),\n    visitor      = require(\"../visitor\");\n\n/*\n * Reports expressions that don't consume any input inside |*| or |+| in the\n * grammar, which prevents infinite loops in the generated parser.\n */\nfunction reportInfiniteRepetition(ast) {\n  var check = visitor.build({\n    zero_or_more: function(node) {\n      if (!asts.alwaysConsumesOnSuccess(ast, node.expression)) {\n        throw new GrammarError(\n          \"Possible infinite loop when parsing (repetition used with an expression that may not consume any input).\",\n          node.location\n        );\n      }\n    },\n\n    one_or_more: function(node) {\n      if (!asts.alwaysConsumesOnSuccess(ast, node.expression)) {\n        throw new GrammarError(\n          \"Possible infinite loop when parsing (repetition used with an expression that may not consume any input).\",\n          node.location\n        );\n      }\n    }\n  });\n\n  check(ast);\n}\n\nmodule.exports = reportInfiniteRepetition;\n","\"use strict\";\n\nvar arrays  = require(\"../../utils/arrays\"),\n    visitor = require(\"../visitor\");\n\n/*\n * Removes proxy rules -- that is, rules that only delegate to other rule.\n */\nfunction removeProxyRules(ast, options) {\n  function isProxyRule(node) {\n    return node.type === \"rule\" && node.expression.type === \"rule_ref\";\n  }\n\n  function replaceRuleRefs(ast, from, to) {\n    var replace = visitor.build({\n      rule_ref: function(node) {\n        if (node.name === from) {\n          node.name = to;\n        }\n      }\n    });\n\n    replace(ast);\n  }\n\n  var indices = [];\n\n  arrays.each(ast.rules, function(rule, i) {\n    if (isProxyRule(rule)) {\n      replaceRuleRefs(ast, rule.name, rule.expression.name);\n      if (!arrays.contains(options.allowedStartRules, rule.name)) {\n        indices.push(i);\n      }\n    }\n  });\n\n  indices.reverse();\n\n  arrays.each(indices, function(i) { ast.rules.splice(i, 1); });\n}\n\nmodule.exports = removeProxyRules;\n","\"use strict\";\n\n/* Bytecode instruction opcodes. */\nvar opcodes = {\n  /* Stack Manipulation */\n\n  PUSH:             0,    // PUSH c\n  PUSH_UNDEFINED:   1,    // PUSH_UNDEFINED\n  PUSH_NULL:        2,    // PUSH_NULL\n  PUSH_FAILED:      3,    // PUSH_FAILED\n  PUSH_EMPTY_ARRAY: 4,    // PUSH_EMPTY_ARRAY\n  PUSH_CURR_POS:    5,    // PUSH_CURR_POS\n  POP:              6,    // POP\n  POP_CURR_POS:     7,    // POP_CURR_POS\n  POP_N:            8,    // POP_N n\n  NIP:              9,    // NIP\n  APPEND:           10,   // APPEND\n  WRAP:             11,   // WRAP n\n  TEXT:             12,   // TEXT\n\n  /* Conditions and Loops */\n\n  IF:               13,   // IF t, f\n  IF_ERROR:         14,   // IF_ERROR t, f\n  IF_NOT_ERROR:     15,   // IF_NOT_ERROR t, f\n  WHILE_NOT_ERROR:  16,   // WHILE_NOT_ERROR b\n\n  /* Matching */\n\n  MATCH_ANY:        17,   // MATCH_ANY a, f, ...\n  MATCH_STRING:     18,   // MATCH_STRING s, a, f, ...\n  MATCH_STRING_IC:  19,   // MATCH_STRING_IC s, a, f, ...\n  MATCH_REGEXP:     20,   // MATCH_REGEXP r, a, f, ...\n  ACCEPT_N:         21,   // ACCEPT_N n\n  ACCEPT_STRING:    22,   // ACCEPT_STRING s\n  FAIL:             23,   // FAIL e\n\n  /* Calls */\n\n  LOAD_SAVED_POS:   24,   // LOAD_SAVED_POS p\n  UPDATE_SAVED_POS: 25,   // UPDATE_SAVED_POS\n  CALL:             26,   // CALL f, n, pc, p1, p2, ..., pN\n\n  /* Rules */\n\n  RULE:             27,   // RULE r\n\n  /* Failure Reporting */\n\n  SILENT_FAILS_ON:  28,   // SILENT_FAILS_ON\n  SILENT_FAILS_OFF: 29    // SILENT_FAILS_OFF\n};\n\nmodule.exports = opcodes;\n","\"use strict\";\n\nfunction hex(ch) { return ch.charCodeAt(0).toString(16).toUpperCase(); }\n\n/* JavaScript code generation helpers. */\nvar js = {\n  stringEscape: function(s) {\n    /*\n     * ECMA-262, 5th ed., 7.8.4: All characters may appear literally in a string\n     * literal except for the closing quote character, backslash, carriage\n     * return, line separator, paragraph separator, and line feed. Any character\n     * may appear in the form of an escape sequence.\n     *\n     * For portability, we also escape all control and non-ASCII characters.\n     * Note that the \"\\v\" escape sequence is not used because IE does not like\n     * it.\n     */\n    return s\n      .replace(/\\\\/g,   '\\\\\\\\')   // backslash\n      .replace(/\"/g,    '\\\\\"')    // closing double quote\n      .replace(/\\0/g,   '\\\\0')    // null\n      .replace(/\\x08/g, '\\\\b')    // backspace\n      .replace(/\\t/g,   '\\\\t')    // horizontal tab\n      .replace(/\\n/g,   '\\\\n')    // line feed\n      .replace(/\\f/g,   '\\\\f')    // form feed\n      .replace(/\\r/g,   '\\\\r')    // carriage return\n      .replace(/[\\x00-\\x0F]/g,          function(ch) { return '\\\\x0' + hex(ch); })\n      .replace(/[\\x10-\\x1F\\x7F-\\xFF]/g, function(ch) { return '\\\\x'  + hex(ch); })\n      .replace(/[\\u0100-\\u0FFF]/g,      function(ch) { return '\\\\u0' + hex(ch); })\n      .replace(/[\\u1000-\\uFFFF]/g,      function(ch) { return '\\\\u'  + hex(ch); });\n  },\n\n  regexpClassEscape: function(s) {\n    /*\n     * Based on ECMA-262, 5th ed., 7.8.5 & 15.10.1.\n     *\n     * For portability, we also escape all control and non-ASCII characters.\n     */\n    return s\n      .replace(/\\\\/g, '\\\\\\\\')    // backslash\n      .replace(/\\//g, '\\\\/')     // closing slash\n      .replace(/\\]/g, '\\\\]')     // closing bracket\n      .replace(/\\^/g, '\\\\^')     // caret\n      .replace(/-/g,  '\\\\-')     // dash\n      .replace(/\\0/g, '\\\\0')     // null\n      .replace(/\\t/g, '\\\\t')     // horizontal tab\n      .replace(/\\n/g, '\\\\n')     // line feed\n      .replace(/\\v/g, '\\\\x0B')   // vertical tab\n      .replace(/\\f/g, '\\\\f')     // form feed\n      .replace(/\\r/g, '\\\\r')     // carriage return\n      .replace(/[\\x00-\\x0F]/g,          function(ch) { return '\\\\x0' + hex(ch); })\n      .replace(/[\\x10-\\x1F\\x7F-\\xFF]/g, function(ch) { return '\\\\x'  + hex(ch); })\n      .replace(/[\\u0100-\\u0FFF]/g,      function(ch) { return '\\\\u0' + hex(ch); })\n      .replace(/[\\u1000-\\uFFFF]/g,      function(ch) { return '\\\\u'  + hex(ch); });\n  }\n};\n\nmodule.exports = js;\n","\"use strict\";\n\nvar arrays  = require(\"../../utils/arrays\"),\n    objects = require(\"../../utils/objects\"),\n    asts    = require(\"../asts\"),\n    visitor = require(\"../visitor\"),\n    op      = require(\"../opcodes\"),\n    js      = require(\"../js\");\n\n/* Generates bytecode.\n *\n * Instructions\n * ============\n *\n * Stack Manipulation\n * ------------------\n *\n *  [0] PUSH c\n *\n *        stack.push(consts[c]);\n *\n *  [1] PUSH_UNDEFINED\n *\n *        stack.push(undefined);\n *\n *  [2] PUSH_NULL\n *\n *        stack.push(null);\n *\n *  [3] PUSH_FAILED\n *\n *        stack.push(FAILED);\n *\n *  [4] PUSH_EMPTY_ARRAY\n *\n *        stack.push([]);\n *\n *  [5] PUSH_CURR_POS\n *\n *        stack.push(currPos);\n *\n *  [6] POP\n *\n *        stack.pop();\n *\n *  [7] POP_CURR_POS\n *\n *        currPos = stack.pop();\n *\n *  [8] POP_N n\n *\n *        stack.pop(n);\n *\n *  [9] NIP\n *\n *        value = stack.pop();\n *        stack.pop();\n *        stack.push(value);\n *\n * [10] APPEND\n *\n *        value = stack.pop();\n *        array = stack.pop();\n *        array.push(value);\n *        stack.push(array);\n *\n * [11] WRAP n\n *\n *        stack.push(stack.pop(n));\n *\n * [12] TEXT\n *\n *        stack.push(input.substring(stack.pop(), currPos));\n *\n * Conditions and Loops\n * --------------------\n *\n * [13] IF t, f\n *\n *        if (stack.top()) {\n *          interpret(ip + 3, ip + 3 + t);\n *        } else {\n *          interpret(ip + 3 + t, ip + 3 + t + f);\n *        }\n *\n * [14] IF_ERROR t, f\n *\n *        if (stack.top() === FAILED) {\n *          interpret(ip + 3, ip + 3 + t);\n *        } else {\n *          interpret(ip + 3 + t, ip + 3 + t + f);\n *        }\n *\n * [15] IF_NOT_ERROR t, f\n *\n *        if (stack.top() !== FAILED) {\n *          interpret(ip + 3, ip + 3 + t);\n *        } else {\n *          interpret(ip + 3 + t, ip + 3 + t + f);\n *        }\n *\n * [16] WHILE_NOT_ERROR b\n *\n *        while(stack.top() !== FAILED) {\n *          interpret(ip + 2, ip + 2 + b);\n *        }\n *\n * Matching\n * --------\n *\n * [17] MATCH_ANY a, f, ...\n *\n *        if (input.length > currPos) {\n *          interpret(ip + 3, ip + 3 + a);\n *        } else {\n *          interpret(ip + 3 + a, ip + 3 + a + f);\n *        }\n *\n * [18] MATCH_STRING s, a, f, ...\n *\n *        if (input.substr(currPos, consts[s].length) === consts[s]) {\n *          interpret(ip + 4, ip + 4 + a);\n *        } else {\n *          interpret(ip + 4 + a, ip + 4 + a + f);\n *        }\n *\n * [19] MATCH_STRING_IC s, a, f, ...\n *\n *        if (input.substr(currPos, consts[s].length).toLowerCase() === consts[s]) {\n *          interpret(ip + 4, ip + 4 + a);\n *        } else {\n *          interpret(ip + 4 + a, ip + 4 + a + f);\n *        }\n *\n * [20] MATCH_REGEXP r, a, f, ...\n *\n *        if (consts[r].test(input.charAt(currPos))) {\n *          interpret(ip + 4, ip + 4 + a);\n *        } else {\n *          interpret(ip + 4 + a, ip + 4 + a + f);\n *        }\n *\n * [21] ACCEPT_N n\n *\n *        stack.push(input.substring(currPos, n));\n *        currPos += n;\n *\n * [22] ACCEPT_STRING s\n *\n *        stack.push(consts[s]);\n *        currPos += consts[s].length;\n *\n * [23] FAIL e\n *\n *        stack.push(FAILED);\n *        fail(consts[e]);\n *\n * Calls\n * -----\n *\n * [24] LOAD_SAVED_POS p\n *\n *        savedPos = stack[p];\n *\n * [25] UPDATE_SAVED_POS\n *\n *        savedPos = currPos;\n *\n * [26] CALL f, n, pc, p1, p2, ..., pN\n *\n *        value = consts[f](stack[p1], ..., stack[pN]);\n *        stack.pop(n);\n *        stack.push(value);\n *\n * Rules\n * -----\n *\n * [27] RULE r\n *\n *        stack.push(parseRule(r));\n *\n * Failure Reporting\n * -----------------\n *\n * [28] SILENT_FAILS_ON\n *\n *        silentFails++;\n *\n * [29] SILENT_FAILS_OFF\n *\n *        silentFails--;\n */\nfunction generateBytecode(ast) {\n  var consts = [];\n\n  function addConst(value) {\n    var index = arrays.indexOf(consts, value);\n\n    return index === -1 ? consts.push(value) - 1 : index;\n  }\n\n  function addFunctionConst(params, code) {\n    return addConst(\n      \"function(\" + params.join(\", \") + \") {\" + code + \"}\"\n    );\n  }\n\n  function buildSequence() {\n    return Array.prototype.concat.apply([], arguments);\n  }\n\n  function buildCondition(condCode, thenCode, elseCode) {\n    return condCode.concat(\n      [thenCode.length, elseCode.length],\n      thenCode,\n      elseCode\n    );\n  }\n\n  function buildLoop(condCode, bodyCode) {\n    return condCode.concat([bodyCode.length], bodyCode);\n  }\n\n  function buildCall(functionIndex, delta, env, sp) {\n    var params = arrays.map(objects.values(env), function(p) { return sp - p; });\n\n    return [op.CALL, functionIndex, delta, params.length].concat(params);\n  }\n\n  function buildSimplePredicate(expression, negative, context) {\n    return buildSequence(\n      [op.PUSH_CURR_POS],\n      [op.SILENT_FAILS_ON],\n      generate(expression, {\n        sp:     context.sp + 1,\n        env:    objects.clone(context.env),\n        action: null\n      }),\n      [op.SILENT_FAILS_OFF],\n      buildCondition(\n        [negative ? op.IF_ERROR : op.IF_NOT_ERROR],\n        buildSequence(\n          [op.POP],\n          [negative ? op.POP : op.POP_CURR_POS],\n          [op.PUSH_UNDEFINED]\n        ),\n        buildSequence(\n          [op.POP],\n          [negative ? op.POP_CURR_POS : op.POP],\n          [op.PUSH_FAILED]\n        )\n      )\n    );\n  }\n\n  function buildSemanticPredicate(code, negative, context) {\n    var functionIndex = addFunctionConst(objects.keys(context.env), code);\n\n    return buildSequence(\n      [op.UPDATE_SAVED_POS],\n      buildCall(functionIndex, 0, context.env, context.sp),\n      buildCondition(\n        [op.IF],\n        buildSequence(\n          [op.POP],\n          negative ? [op.PUSH_FAILED] : [op.PUSH_UNDEFINED]\n        ),\n        buildSequence(\n          [op.POP],\n          negative ? [op.PUSH_UNDEFINED] : [op.PUSH_FAILED]\n        )\n      )\n    );\n  }\n\n  function buildAppendLoop(expressionCode) {\n    return buildLoop(\n      [op.WHILE_NOT_ERROR],\n      buildSequence([op.APPEND], expressionCode)\n    );\n  }\n\n  var generate = visitor.build({\n    grammar: function(node) {\n      arrays.each(node.rules, generate);\n\n      node.consts = consts;\n    },\n\n    rule: function(node) {\n      node.bytecode = generate(node.expression, {\n        sp:     -1,    // stack pointer\n        env:    { },   // mapping of label names to stack positions\n        action: null   // action nodes pass themselves to children here\n      });\n    },\n\n    named: function(node, context) {\n      var nameIndex = addConst(\n        'peg$otherExpectation(\"' + js.stringEscape(node.name) + '\")'\n      );\n\n      /*\n       * The code generated below is slightly suboptimal because |FAIL| pushes\n       * to the stack, so we need to stick a |POP| in front of it. We lack a\n       * dedicated instruction that would just report the failure and not touch\n       * the stack.\n       */\n      return buildSequence(\n        [op.SILENT_FAILS_ON],\n        generate(node.expression, context),\n        [op.SILENT_FAILS_OFF],\n        buildCondition([op.IF_ERROR], [op.FAIL, nameIndex], [])\n      );\n    },\n\n    choice: function(node, context) {\n      function buildAlternativesCode(alternatives, context) {\n        return buildSequence(\n          generate(alternatives[0], {\n            sp:     context.sp,\n            env:    objects.clone(context.env),\n            action: null\n          }),\n          alternatives.length > 1\n            ? buildCondition(\n                [op.IF_ERROR],\n                buildSequence(\n                  [op.POP],\n                  buildAlternativesCode(alternatives.slice(1), context)\n                ),\n                []\n              )\n            : []\n        );\n      }\n\n      return buildAlternativesCode(node.alternatives, context);\n    },\n\n    action: function(node, context) {\n      var env            = objects.clone(context.env),\n          emitCall       = node.expression.type !== \"sequence\"\n                        || node.expression.elements.length === 0,\n          expressionCode = generate(node.expression, {\n            sp:     context.sp + (emitCall ? 1 : 0),\n            env:    env,\n            action: node\n          }),\n          functionIndex  = addFunctionConst(objects.keys(env), node.code);\n\n      return emitCall\n        ? buildSequence(\n            [op.PUSH_CURR_POS],\n            expressionCode,\n            buildCondition(\n              [op.IF_NOT_ERROR],\n              buildSequence(\n                [op.LOAD_SAVED_POS, 1],\n                buildCall(functionIndex, 1, env, context.sp + 2)\n              ),\n              []\n            ),\n            [op.NIP]\n          )\n        : expressionCode;\n    },\n\n    sequence: function(node, context) {\n      function buildElementsCode(elements, context) {\n        var processedCount, functionIndex;\n\n        if (elements.length > 0) {\n          processedCount = node.elements.length - elements.slice(1).length;\n\n          return buildSequence(\n            generate(elements[0], {\n              sp:     context.sp,\n              env:    context.env,\n              action: null\n            }),\n            buildCondition(\n              [op.IF_NOT_ERROR],\n              buildElementsCode(elements.slice(1), {\n                sp:     context.sp + 1,\n                env:    context.env,\n                action: context.action\n              }),\n              buildSequence(\n                processedCount > 1 ? [op.POP_N, processedCount] : [op.POP],\n                [op.POP_CURR_POS],\n                [op.PUSH_FAILED]\n              )\n            )\n          );\n        } else {\n          if (context.action) {\n            functionIndex = addFunctionConst(\n              objects.keys(context.env),\n              context.action.code\n            );\n\n            return buildSequence(\n              [op.LOAD_SAVED_POS, node.elements.length],\n              buildCall(\n                functionIndex,\n                node.elements.length,\n                context.env,\n                context.sp\n              ),\n              [op.NIP]\n            );\n          } else {\n            return buildSequence([op.WRAP, node.elements.length], [op.NIP]);\n          }\n        }\n      }\n\n      return buildSequence(\n        [op.PUSH_CURR_POS],\n        buildElementsCode(node.elements, {\n          sp:     context.sp + 1,\n          env:    context.env,\n          action: context.action\n        })\n      );\n    },\n\n    labeled: function(node, context) {\n      var env = objects.clone(context.env);\n\n      context.env[node.label] = context.sp + 1;\n\n      return generate(node.expression, {\n        sp:     context.sp,\n        env:    env,\n        action: null\n      });\n    },\n\n    text: function(node, context) {\n      return buildSequence(\n        [op.PUSH_CURR_POS],\n        generate(node.expression, {\n          sp:     context.sp + 1,\n          env:    objects.clone(context.env),\n          action: null\n        }),\n        buildCondition(\n          [op.IF_NOT_ERROR],\n          buildSequence([op.POP], [op.TEXT]),\n          [op.NIP]\n        )\n      );\n    },\n\n    simple_and: function(node, context) {\n      return buildSimplePredicate(node.expression, false, context);\n    },\n\n    simple_not: function(node, context) {\n      return buildSimplePredicate(node.expression, true, context);\n    },\n\n    optional: function(node, context) {\n      return buildSequence(\n        generate(node.expression, {\n          sp:     context.sp,\n          env:    objects.clone(context.env),\n          action: null\n        }),\n        buildCondition(\n          [op.IF_ERROR],\n          buildSequence([op.POP], [op.PUSH_NULL]),\n          []\n        )\n      );\n    },\n\n    zero_or_more: function(node, context) {\n      var expressionCode = generate(node.expression, {\n            sp:     context.sp + 1,\n            env:    objects.clone(context.env),\n            action: null\n          });\n\n      return buildSequence(\n        [op.PUSH_EMPTY_ARRAY],\n        expressionCode,\n        buildAppendLoop(expressionCode),\n        [op.POP]\n      );\n    },\n\n    one_or_more: function(node, context) {\n      var expressionCode = generate(node.expression, {\n            sp:     context.sp + 1,\n            env:    objects.clone(context.env),\n            action: null\n          });\n\n      return buildSequence(\n        [op.PUSH_EMPTY_ARRAY],\n        expressionCode,\n        buildCondition(\n          [op.IF_NOT_ERROR],\n          buildSequence(buildAppendLoop(expressionCode), [op.POP]),\n          buildSequence([op.POP], [op.POP], [op.PUSH_FAILED])\n        )\n      );\n    },\n\n    group: function(node, context) {\n      return generate(node.expression, {\n        sp:     context.sp,\n        env:    objects.clone(context.env),\n        action: null\n      });\n    },\n\n    semantic_and: function(node, context) {\n      return buildSemanticPredicate(node.code, false, context);\n    },\n\n    semantic_not: function(node, context) {\n      return buildSemanticPredicate(node.code, true, context);\n    },\n\n    rule_ref: function(node) {\n      return [op.RULE, asts.indexOfRule(ast, node.name)];\n    },\n\n    literal: function(node) {\n      var stringIndex, expectedIndex;\n\n      if (node.value.length > 0) {\n        stringIndex = addConst('\"'\n          + js.stringEscape(\n              node.ignoreCase ? node.value.toLowerCase() : node.value\n            )\n          + '\"'\n        );\n        expectedIndex = addConst(\n          'peg$literalExpectation('\n            + '\"' + js.stringEscape(node.value) + '\", '\n            + node.ignoreCase\n            + ')'\n        );\n\n        /*\n         * For case-sensitive strings the value must match the beginning of the\n         * remaining input exactly. As a result, we can use |ACCEPT_STRING| and\n         * save one |substr| call that would be needed if we used |ACCEPT_N|.\n         */\n        return buildCondition(\n          node.ignoreCase\n            ? [op.MATCH_STRING_IC, stringIndex]\n            : [op.MATCH_STRING, stringIndex],\n          node.ignoreCase\n            ? [op.ACCEPT_N, node.value.length]\n            : [op.ACCEPT_STRING, stringIndex],\n          [op.FAIL, expectedIndex]\n        );\n      } else {\n        stringIndex = addConst('\"\"');\n\n        return [op.PUSH, stringIndex];\n      }\n    },\n\n    \"class\": function(node) {\n      var regexp, parts, regexpIndex, expectedIndex;\n\n      if (node.parts.length > 0) {\n        regexp = '/^['\n          + (node.inverted ? '^' : '')\n          + arrays.map(node.parts, function(part) {\n              return part instanceof Array\n                ? js.regexpClassEscape(part[0])\n                  + '-'\n                  + js.regexpClassEscape(part[1])\n                : js.regexpClassEscape(part);\n            }).join('')\n          + ']/' + (node.ignoreCase ? 'i' : '');\n      } else {\n        /*\n         * IE considers regexps /[]/ and /[^]/ as syntactically invalid, so we\n         * translate them into equivalents it can handle.\n         */\n        regexp = node.inverted ? '/^[\\\\S\\\\s]/' : '/^(?!)/';\n      }\n\n      parts = '['\n        + arrays.map(node.parts, function(part) {\n            return part instanceof Array\n              ? '[\"' + js.stringEscape(part[0]) + '\", \"' + js.stringEscape(part[1]) + '\"]'\n              : '\"' + js.stringEscape(part) + '\"';\n          }).join(', ')\n        + ']';\n\n      regexpIndex   = addConst(regexp);\n      expectedIndex = addConst(\n        'peg$classExpectation('\n          + parts + ', '\n          + node.inverted + ', '\n          + node.ignoreCase\n          + ')'\n      );\n\n      return buildCondition(\n        [op.MATCH_REGEXP, regexpIndex],\n        [op.ACCEPT_N, 1],\n        [op.FAIL, expectedIndex]\n      );\n    },\n\n    any: function() {\n      var expectedIndex = addConst('peg$anyExpectation()');\n\n      return buildCondition(\n        [op.MATCH_ANY],\n        [op.ACCEPT_N, 1],\n        [op.FAIL, expectedIndex]\n      );\n    }\n  });\n\n  generate(ast);\n}\n\nmodule.exports = generateBytecode;\n","\"use strict\";\n\nvar arrays  = require(\"../../utils/arrays\"),\n    objects = require(\"../../utils/objects\"),\n    asts    = require(\"../asts\"),\n    op      = require(\"../opcodes\"),\n    js      = require(\"../js\");\n\n/* Generates parser JavaScript code. */\nfunction generateJS(ast, options) {\n  /* These only indent non-empty lines to avoid trailing whitespace. */\n  function indent2(code)  { return code.replace(/^(.+)$/gm, '  $1');         }\n  function indent6(code)  { return code.replace(/^(.+)$/gm, '      $1');     }\n  function indent10(code) { return code.replace(/^(.+)$/gm, '          $1'); }\n\n  function generateTables() {\n    if (options.optimize === \"size\") {\n      return [\n        'peg$consts = [',\n           indent2(ast.consts.join(',\\n')),\n        '],',\n        '',\n        'peg$bytecode = [',\n           indent2(arrays.map(ast.rules, function(rule) {\n             return 'peg$decode(\"'\n                   + js.stringEscape(arrays.map(\n                       rule.bytecode,\n                       function(b) { return String.fromCharCode(b + 32); }\n                     ).join(''))\n                   + '\")';\n           }).join(',\\n')),\n        '],'\n      ].join('\\n');\n    } else {\n      return arrays.map(\n        ast.consts,\n        function(c, i) { return 'peg$c' + i + ' = ' + c + ','; }\n      ).join('\\n');\n    }\n  }\n\n  function generateRuleHeader(ruleNameCode, ruleIndexCode) {\n    var parts = [];\n\n    parts.push('');\n\n    if (options.trace) {\n      parts.push([\n        'peg$tracer.trace({',\n        '  type:     \"rule.enter\",',\n        '  rule:     ' + ruleNameCode + ',',\n        '  location: peg$computeLocation(startPos, startPos)',\n        '});',\n        ''\n      ].join('\\n'));\n    }\n\n    if (options.cache) {\n      parts.push([\n        'var key    = peg$currPos * ' + ast.rules.length + ' + ' + ruleIndexCode + ',',\n        '    cached = peg$resultsCache[key];',\n        '',\n        'if (cached) {',\n        '  peg$currPos = cached.nextPos;',\n        ''\n      ].join('\\n'));\n\n      if (options.trace) {\n        parts.push([\n          'if (cached.result !== peg$FAILED) {',\n          '  peg$tracer.trace({',\n          '    type:   \"rule.match\",',\n          '    rule:   ' + ruleNameCode + ',',\n          '    result: cached.result,',\n          '    location: peg$computeLocation(startPos, peg$currPos)',\n          '  });',\n          '} else {',\n          '  peg$tracer.trace({',\n          '    type: \"rule.fail\",',\n          '    rule: ' + ruleNameCode + ',',\n          '    location: peg$computeLocation(startPos, startPos)',\n          '  });',\n          '}',\n          ''\n        ].join('\\n'));\n      }\n\n      parts.push([\n        '  return cached.result;',\n        '}',\n        ''\n      ].join('\\n'));\n    }\n\n    return parts.join('\\n');\n  }\n\n  function generateRuleFooter(ruleNameCode, resultCode) {\n    var parts = [];\n\n    if (options.cache) {\n      parts.push([\n        '',\n        'peg$resultsCache[key] = { nextPos: peg$currPos, result: ' + resultCode + ' };'\n      ].join('\\n'));\n    }\n\n    if (options.trace) {\n      parts.push([\n          '',\n          'if (' + resultCode + ' !== peg$FAILED) {',\n          '  peg$tracer.trace({',\n          '    type:   \"rule.match\",',\n          '    rule:   ' + ruleNameCode + ',',\n          '    result: ' + resultCode + ',',\n          '    location: peg$computeLocation(startPos, peg$currPos)',\n          '  });',\n          '} else {',\n          '  peg$tracer.trace({',\n          '    type: \"rule.fail\",',\n          '    rule: ' + ruleNameCode + ',',\n          '    location: peg$computeLocation(startPos, startPos)',\n          '  });',\n          '}'\n      ].join('\\n'));\n    }\n\n    parts.push([\n      '',\n      'return ' + resultCode + ';'\n    ].join('\\n'));\n\n    return parts.join('\\n');\n  }\n\n  function generateInterpreter() {\n    var parts = [];\n\n    function generateCondition(cond, argsLength) {\n      var baseLength      = argsLength + 3,\n          thenLengthCode = 'bc[ip + ' + (baseLength - 2) + ']',\n          elseLengthCode = 'bc[ip + ' + (baseLength - 1) + ']';\n\n      return [\n        'ends.push(end);',\n        'ips.push(ip + ' + baseLength + ' + ' + thenLengthCode + ' + ' + elseLengthCode + ');',\n        '',\n        'if (' + cond + ') {',\n        '  end = ip + ' + baseLength + ' + ' + thenLengthCode + ';',\n        '  ip += ' + baseLength + ';',\n        '} else {',\n        '  end = ip + ' + baseLength + ' + ' + thenLengthCode + ' + ' + elseLengthCode + ';',\n        '  ip += ' + baseLength + ' + ' + thenLengthCode + ';',\n        '}',\n        '',\n        'break;'\n      ].join('\\n');\n    }\n\n    function generateLoop(cond) {\n      var baseLength     = 2,\n          bodyLengthCode = 'bc[ip + ' + (baseLength - 1) + ']';\n\n      return [\n        'if (' + cond + ') {',\n        '  ends.push(end);',\n        '  ips.push(ip);',\n        '',\n        '  end = ip + ' + baseLength + ' + ' + bodyLengthCode + ';',\n        '  ip += ' + baseLength + ';',\n        '} else {',\n        '  ip += ' + baseLength + ' + ' + bodyLengthCode + ';',\n        '}',\n        '',\n        'break;'\n      ].join('\\n');\n    }\n\n    function generateCall() {\n      var baseLength       = 4,\n          paramsLengthCode = 'bc[ip + ' + (baseLength - 1) + ']';\n\n      return [\n        'params = bc.slice(ip + ' + baseLength + ', ip + ' + baseLength + ' + ' + paramsLengthCode + ');',\n        'for (i = 0; i < ' + paramsLengthCode + '; i++) {',\n        '  params[i] = stack[stack.length - 1 - params[i]];',\n        '}',\n        '',\n        'stack.splice(',\n        '  stack.length - bc[ip + 2],',\n        '  bc[ip + 2],',\n        '  peg$consts[bc[ip + 1]].apply(null, params)',\n        ');',\n        '',\n        'ip += ' + baseLength + ' + ' + paramsLengthCode + ';',\n        'break;'\n      ].join('\\n');\n    }\n\n    parts.push([\n      'function peg$decode(s) {',\n      '  var bc = new Array(s.length), i;',\n      '',\n      '  for (i = 0; i < s.length; i++) {',\n      '    bc[i] = s.charCodeAt(i) - 32;',\n      '  }',\n      '',\n      '  return bc;',\n      '}',\n      '',\n      'function peg$parseRule(index) {'\n    ].join('\\n'));\n\n    if (options.trace) {\n      parts.push([\n        '  var bc       = peg$bytecode[index],',\n        '      ip       = 0,',\n        '      ips      = [],',\n        '      end      = bc.length,',\n        '      ends     = [],',\n        '      stack    = [],',\n        '      startPos = peg$currPos,',\n        '      params, i;'\n      ].join('\\n'));\n    } else {\n      parts.push([\n        '  var bc    = peg$bytecode[index],',\n        '      ip    = 0,',\n        '      ips   = [],',\n        '      end   = bc.length,',\n        '      ends  = [],',\n        '      stack = [],',\n        '      params, i;'\n      ].join('\\n'));\n    }\n\n    parts.push(indent2(generateRuleHeader('peg$ruleNames[index]', 'index')));\n\n    parts.push([\n      /*\n       * The point of the outer loop and the |ips| & |ends| stacks is to avoid\n       * recursive calls for interpreting parts of bytecode. In other words, we\n       * implement the |interpret| operation of the abstract machine without\n       * function calls. Such calls would likely slow the parser down and more\n       * importantly cause stack overflows for complex grammars.\n       */\n      '  while (true) {',\n      '    while (ip < end) {',\n      '      switch (bc[ip]) {',\n      '        case ' + op.PUSH + ':',               // PUSH c\n      '          stack.push(peg$consts[bc[ip + 1]]);',\n      '          ip += 2;',\n      '          break;',\n      '',\n      '        case ' + op.PUSH_UNDEFINED + ':',     // PUSH_UNDEFINED\n      '          stack.push(void 0);',\n      '          ip++;',\n      '          break;',\n      '',\n      '        case ' + op.PUSH_NULL + ':',          // PUSH_NULL\n      '          stack.push(null);',\n      '          ip++;',\n      '          break;',\n      '',\n      '        case ' + op.PUSH_FAILED + ':',        // PUSH_FAILED\n      '          stack.push(peg$FAILED);',\n      '          ip++;',\n      '          break;',\n      '',\n      '        case ' + op.PUSH_EMPTY_ARRAY + ':',   // PUSH_EMPTY_ARRAY\n      '          stack.push([]);',\n      '          ip++;',\n      '          break;',\n      '',\n      '        case ' + op.PUSH_CURR_POS + ':',      // PUSH_CURR_POS\n      '          stack.push(peg$currPos);',\n      '          ip++;',\n      '          break;',\n      '',\n      '        case ' + op.POP + ':',                // POP\n      '          stack.pop();',\n      '          ip++;',\n      '          break;',\n      '',\n      '        case ' + op.POP_CURR_POS + ':',       // POP_CURR_POS\n      '          peg$currPos = stack.pop();',\n      '          ip++;',\n      '          break;',\n      '',\n      '        case ' + op.POP_N + ':',              // POP_N n\n      '          stack.length -= bc[ip + 1];',\n      '          ip += 2;',\n      '          break;',\n      '',\n      '        case ' + op.NIP + ':',                // NIP\n      '          stack.splice(-2, 1);',\n      '          ip++;',\n      '          break;',\n      '',\n      '        case ' + op.APPEND + ':',             // APPEND\n      '          stack[stack.length - 2].push(stack.pop());',\n      '          ip++;',\n      '          break;',\n      '',\n      '        case ' + op.WRAP + ':',               // WRAP n\n      '          stack.push(stack.splice(stack.length - bc[ip + 1], bc[ip + 1]));',\n      '          ip += 2;',\n      '          break;',\n      '',\n      '        case ' + op.TEXT + ':',               // TEXT\n      '          stack.push(input.substring(stack.pop(), peg$currPos));',\n      '          ip++;',\n      '          break;',\n      '',\n      '        case ' + op.IF + ':',                 // IF t, f\n                 indent10(generateCondition('stack[stack.length - 1]', 0)),\n      '',\n      '        case ' + op.IF_ERROR + ':',           // IF_ERROR t, f\n                 indent10(generateCondition(\n                   'stack[stack.length - 1] === peg$FAILED',\n                   0\n                 )),\n      '',\n      '        case ' + op.IF_NOT_ERROR + ':',       // IF_NOT_ERROR t, f\n                 indent10(\n                   generateCondition('stack[stack.length - 1] !== peg$FAILED',\n                   0\n                 )),\n      '',\n      '        case ' + op.WHILE_NOT_ERROR + ':',    // WHILE_NOT_ERROR b\n                 indent10(generateLoop('stack[stack.length - 1] !== peg$FAILED')),\n      '',\n      '        case ' + op.MATCH_ANY + ':',          // MATCH_ANY a, f, ...\n                 indent10(generateCondition('input.length > peg$currPos', 0)),\n      '',\n      '        case ' + op.MATCH_STRING + ':',       // MATCH_STRING s, a, f, ...\n                 indent10(generateCondition(\n                   'input.substr(peg$currPos, peg$consts[bc[ip + 1]].length) === peg$consts[bc[ip + 1]]',\n                   1\n                 )),\n      '',\n      '        case ' + op.MATCH_STRING_IC + ':',    // MATCH_STRING_IC s, a, f, ...\n                 indent10(generateCondition(\n                   'input.substr(peg$currPos, peg$consts[bc[ip + 1]].length).toLowerCase() === peg$consts[bc[ip + 1]]',\n                   1\n                 )),\n      '',\n      '        case ' + op.MATCH_REGEXP + ':',       // MATCH_REGEXP r, a, f, ...\n                 indent10(generateCondition(\n                   'peg$consts[bc[ip + 1]].test(input.charAt(peg$currPos))',\n                   1\n                 )),\n      '',\n      '        case ' + op.ACCEPT_N + ':',           // ACCEPT_N n\n      '          stack.push(input.substr(peg$currPos, bc[ip + 1]));',\n      '          peg$currPos += bc[ip + 1];',\n      '          ip += 2;',\n      '          break;',\n      '',\n      '        case ' + op.ACCEPT_STRING + ':',      // ACCEPT_STRING s\n      '          stack.push(peg$consts[bc[ip + 1]]);',\n      '          peg$currPos += peg$consts[bc[ip + 1]].length;',\n      '          ip += 2;',\n      '          break;',\n      '',\n      '        case ' + op.FAIL + ':',               // FAIL e\n      '          stack.push(peg$FAILED);',\n      '          if (peg$silentFails === 0) {',\n      '            peg$fail(peg$consts[bc[ip + 1]]);',\n      '          }',\n      '          ip += 2;',\n      '          break;',\n      '',\n      '        case ' + op.LOAD_SAVED_POS + ':',     // LOAD_SAVED_POS p\n      '          peg$savedPos = stack[stack.length - 1 - bc[ip + 1]];',\n      '          ip += 2;',\n      '          break;',\n      '',\n      '        case ' + op.UPDATE_SAVED_POS + ':',   // UPDATE_SAVED_POS\n      '          peg$savedPos = peg$currPos;',\n      '          ip++;',\n      '          break;',\n      '',\n      '        case ' + op.CALL + ':',               // CALL f, n, pc, p1, p2, ..., pN\n                 indent10(generateCall()),\n      '',\n      '        case ' + op.RULE + ':',               // RULE r\n      '          stack.push(peg$parseRule(bc[ip + 1]));',\n      '          ip += 2;',\n      '          break;',\n      '',\n      '        case ' + op.SILENT_FAILS_ON + ':',    // SILENT_FAILS_ON\n      '          peg$silentFails++;',\n      '          ip++;',\n      '          break;',\n      '',\n      '        case ' + op.SILENT_FAILS_OFF + ':',   // SILENT_FAILS_OFF\n      '          peg$silentFails--;',\n      '          ip++;',\n      '          break;',\n      '',\n      '        default:',\n      '          throw new Error(\"Invalid opcode: \" + bc[ip] + \".\");',\n      '      }',\n      '    }',\n      '',\n      '    if (ends.length > 0) {',\n      '      end = ends.pop();',\n      '      ip = ips.pop();',\n      '    } else {',\n      '      break;',\n      '    }',\n      '  }'\n    ].join('\\n'));\n\n    parts.push(indent2(generateRuleFooter('peg$ruleNames[index]', 'stack[0]')));\n    parts.push('}');\n\n    return parts.join('\\n');\n  }\n\n  function generateRuleFunction(rule) {\n    var parts = [], code;\n\n    function c(i) { return \"peg$c\" + i; } // |consts[i]| of the abstract machine\n    function s(i) { return \"s\"     + i; } // |stack[i]| of the abstract machine\n\n    var stack = {\n          sp:    -1,\n          maxSp: -1,\n\n          push: function(exprCode) {\n            var code = s(++this.sp) + ' = ' + exprCode + ';';\n\n            if (this.sp > this.maxSp) { this.maxSp = this.sp; }\n\n            return code;\n          },\n\n          pop: function(n) {\n            var values;\n\n            if (n === void 0) {\n              return s(this.sp--);\n            } else {\n              values = arrays.map(arrays.range(this.sp - n + 1, this.sp + 1), s);\n              this.sp -= n;\n\n              return values;\n            }\n          },\n\n          top: function() {\n            return s(this.sp);\n          },\n\n          index: function(i) {\n            return s(this.sp - i);\n          }\n        };\n\n    function compile(bc) {\n      var ip    = 0,\n          end   = bc.length,\n          parts = [],\n          value;\n\n      function compileCondition(cond, argCount) {\n        var baseLength = argCount + 3,\n            thenLength = bc[ip + baseLength - 2],\n            elseLength = bc[ip + baseLength - 1],\n            baseSp     = stack.sp,\n            thenCode, elseCode, thenSp, elseSp;\n\n        ip += baseLength;\n        thenCode = compile(bc.slice(ip, ip + thenLength));\n        thenSp = stack.sp;\n        ip += thenLength;\n\n        if (elseLength > 0) {\n          stack.sp = baseSp;\n          elseCode = compile(bc.slice(ip, ip + elseLength));\n          elseSp = stack.sp;\n          ip += elseLength;\n\n          if (thenSp !== elseSp) {\n            throw new Error(\n              \"Branches of a condition must move the stack pointer in the same way.\"\n            );\n          }\n        }\n\n        parts.push('if (' + cond + ') {');\n        parts.push(indent2(thenCode));\n        if (elseLength > 0) {\n          parts.push('} else {');\n          parts.push(indent2(elseCode));\n        }\n        parts.push('}');\n      }\n\n      function compileLoop(cond) {\n        var baseLength = 2,\n            bodyLength = bc[ip + baseLength - 1],\n            baseSp     = stack.sp,\n            bodyCode, bodySp;\n\n        ip += baseLength;\n        bodyCode = compile(bc.slice(ip, ip + bodyLength));\n        bodySp = stack.sp;\n        ip += bodyLength;\n\n        if (bodySp !== baseSp) {\n          throw new Error(\"Body of a loop can't move the stack pointer.\");\n        }\n\n        parts.push('while (' + cond + ') {');\n        parts.push(indent2(bodyCode));\n        parts.push('}');\n      }\n\n      function compileCall() {\n        var baseLength   = 4,\n            paramsLength = bc[ip + baseLength - 1];\n\n        var value = c(bc[ip + 1]) + '('\n              + arrays.map(\n                  bc.slice(ip + baseLength, ip + baseLength + paramsLength),\n                  function(p) { return stack.index(p); }\n                ).join(', ')\n              + ')';\n        stack.pop(bc[ip + 2]);\n        parts.push(stack.push(value));\n        ip += baseLength + paramsLength;\n      }\n\n      while (ip < end) {\n        switch (bc[ip]) {\n          case op.PUSH:               // PUSH c\n            parts.push(stack.push(c(bc[ip + 1])));\n            ip += 2;\n            break;\n\n          case op.PUSH_CURR_POS:      // PUSH_CURR_POS\n            parts.push(stack.push('peg$currPos'));\n            ip++;\n            break;\n\n          case op.PUSH_UNDEFINED:      // PUSH_UNDEFINED\n            parts.push(stack.push('void 0'));\n            ip++;\n            break;\n\n          case op.PUSH_NULL:          // PUSH_NULL\n            parts.push(stack.push('null'));\n            ip++;\n            break;\n\n          case op.PUSH_FAILED:        // PUSH_FAILED\n            parts.push(stack.push('peg$FAILED'));\n            ip++;\n            break;\n\n          case op.PUSH_EMPTY_ARRAY:   // PUSH_EMPTY_ARRAY\n            parts.push(stack.push('[]'));\n            ip++;\n            break;\n\n          case op.POP:                // POP\n            stack.pop();\n            ip++;\n            break;\n\n          case op.POP_CURR_POS:       // POP_CURR_POS\n            parts.push('peg$currPos = ' + stack.pop() + ';');\n            ip++;\n            break;\n\n          case op.POP_N:              // POP_N n\n            stack.pop(bc[ip + 1]);\n            ip += 2;\n            break;\n\n          case op.NIP:                // NIP\n            value = stack.pop();\n            stack.pop();\n            parts.push(stack.push(value));\n            ip++;\n            break;\n\n          case op.APPEND:             // APPEND\n            value = stack.pop();\n            parts.push(stack.top() + '.push(' + value + ');');\n            ip++;\n            break;\n\n          case op.WRAP:               // WRAP n\n            parts.push(\n              stack.push('[' + stack.pop(bc[ip + 1]).join(', ') + ']')\n            );\n            ip += 2;\n            break;\n\n          case op.TEXT:               // TEXT\n            parts.push(\n              stack.push('input.substring(' + stack.pop() + ', peg$currPos)')\n            );\n            ip++;\n            break;\n\n          case op.IF:                 // IF t, f\n            compileCondition(stack.top(), 0);\n            break;\n\n          case op.IF_ERROR:           // IF_ERROR t, f\n            compileCondition(stack.top() + ' === peg$FAILED', 0);\n            break;\n\n          case op.IF_NOT_ERROR:       // IF_NOT_ERROR t, f\n            compileCondition(stack.top() + ' !== peg$FAILED', 0);\n            break;\n\n          case op.WHILE_NOT_ERROR:    // WHILE_NOT_ERROR b\n            compileLoop(stack.top() + ' !== peg$FAILED', 0);\n            break;\n\n          case op.MATCH_ANY:          // MATCH_ANY a, f, ...\n            compileCondition('input.length > peg$currPos', 0);\n            break;\n\n          case op.MATCH_STRING:       // MATCH_STRING s, a, f, ...\n            compileCondition(\n              eval(ast.consts[bc[ip + 1]]).length > 1\n                ? 'input.substr(peg$currPos, '\n                    + eval(ast.consts[bc[ip + 1]]).length\n                    + ') === '\n                    + c(bc[ip + 1])\n                : 'input.charCodeAt(peg$currPos) === '\n                    + eval(ast.consts[bc[ip + 1]]).charCodeAt(0),\n              1\n            );\n            break;\n\n          case op.MATCH_STRING_IC:    // MATCH_STRING_IC s, a, f, ...\n            compileCondition(\n              'input.substr(peg$currPos, '\n                + eval(ast.consts[bc[ip + 1]]).length\n                + ').toLowerCase() === '\n                + c(bc[ip + 1]),\n              1\n            );\n            break;\n\n          case op.MATCH_REGEXP:       // MATCH_REGEXP r, a, f, ...\n            compileCondition(\n              c(bc[ip + 1]) + '.test(input.charAt(peg$currPos))',\n              1\n            );\n            break;\n\n          case op.ACCEPT_N:           // ACCEPT_N n\n            parts.push(stack.push(\n              bc[ip + 1] > 1\n                ? 'input.substr(peg$currPos, ' + bc[ip + 1] + ')'\n                : 'input.charAt(peg$currPos)'\n            ));\n            parts.push(\n              bc[ip + 1] > 1\n                ? 'peg$currPos += ' + bc[ip + 1] + ';'\n                : 'peg$currPos++;'\n            );\n            ip += 2;\n            break;\n\n          case op.ACCEPT_STRING:      // ACCEPT_STRING s\n            parts.push(stack.push(c(bc[ip + 1])));\n            parts.push(\n              eval(ast.consts[bc[ip + 1]]).length > 1\n                ? 'peg$currPos += ' + eval(ast.consts[bc[ip + 1]]).length + ';'\n                : 'peg$currPos++;'\n            );\n            ip += 2;\n            break;\n\n          case op.FAIL:               // FAIL e\n            parts.push(stack.push('peg$FAILED'));\n            parts.push('if (peg$silentFails === 0) { peg$fail(' + c(bc[ip + 1]) + '); }');\n            ip += 2;\n            break;\n\n          case op.LOAD_SAVED_POS:     // LOAD_SAVED_POS p\n            parts.push('peg$savedPos = ' + stack.index(bc[ip + 1]) + ';');\n            ip += 2;\n            break;\n\n          case op.UPDATE_SAVED_POS:   // UPDATE_SAVED_POS\n            parts.push('peg$savedPos = peg$currPos;');\n            ip++;\n            break;\n\n          case op.CALL:               // CALL f, n, pc, p1, p2, ..., pN\n            compileCall();\n            break;\n\n          case op.RULE:               // RULE r\n            parts.push(stack.push(\"peg$parse\" + ast.rules[bc[ip + 1]].name + \"()\"));\n            ip += 2;\n            break;\n\n          case op.SILENT_FAILS_ON:    // SILENT_FAILS_ON\n            parts.push('peg$silentFails++;');\n            ip++;\n            break;\n\n          case op.SILENT_FAILS_OFF:   // SILENT_FAILS_OFF\n            parts.push('peg$silentFails--;');\n            ip++;\n            break;\n\n          default:\n            throw new Error(\"Invalid opcode: \" + bc[ip] + \".\");\n        }\n      }\n\n      return parts.join('\\n');\n    }\n\n    code = compile(rule.bytecode);\n\n    parts.push('function peg$parse' + rule.name + '() {');\n\n    if (options.trace) {\n      parts.push([\n        '  var ' + arrays.map(arrays.range(0, stack.maxSp + 1), s).join(', ') + ',',\n        '      startPos = peg$currPos;'\n      ].join('\\n'));\n    } else {\n      parts.push(\n        '  var ' + arrays.map(arrays.range(0, stack.maxSp + 1), s).join(', ') + ';'\n      );\n    }\n\n    parts.push(indent2(generateRuleHeader(\n      '\"' + js.stringEscape(rule.name) + '\"',\n      asts.indexOfRule(ast, rule.name)\n    )));\n    parts.push(indent2(code));\n    parts.push(indent2(generateRuleFooter(\n      '\"' + js.stringEscape(rule.name) + '\"',\n      s(0)\n    )));\n\n    parts.push('}');\n\n    return parts.join('\\n');\n  }\n\n  function generateToplevel() {\n    var parts = [],\n        startRuleIndices,   startRuleIndex,\n        startRuleFunctions, startRuleFunction,\n        ruleNames;\n\n    parts.push([\n      'function peg$subclass(child, parent) {',\n      '  function ctor() { this.constructor = child; }',\n      '  ctor.prototype = parent.prototype;',\n      '  child.prototype = new ctor();',\n      '}',\n      '',\n      'function peg$SyntaxError(message, expected, found, location) {',\n      '  this.message  = message;',\n      '  this.expected = expected;',\n      '  this.found    = found;',\n      '  this.location = location;',\n      '  this.name     = \"SyntaxError\";',\n      '',\n      '  if (typeof Error.captureStackTrace === \"function\") {',\n      '    Error.captureStackTrace(this, peg$SyntaxError);',\n      '  }',\n      '}',\n      '',\n      'peg$subclass(peg$SyntaxError, Error);',\n      '',\n      'peg$SyntaxError.buildMessage = function(expected, found) {',\n      '  var DESCRIBE_EXPECTATION_FNS = {',\n      '        literal: function(expectation) {',\n      '          return \"\\\\\\\"\" + literalEscape(expectation.text) + \"\\\\\\\"\";',\n      '        },',\n      '',\n      '        \"class\": function(expectation) {',\n      '          var escapedParts = \"\",',\n      '              i;',\n      '',\n      '          for (i = 0; i < expectation.parts.length; i++) {',\n      '            escapedParts += expectation.parts[i] instanceof Array',\n      '              ? classEscape(expectation.parts[i][0]) + \"-\" + classEscape(expectation.parts[i][1])',\n      '              : classEscape(expectation.parts[i]);',\n      '          }',\n      '',\n      '          return \"[\" + (expectation.inverted ? \"^\" : \"\") + escapedParts + \"]\";',\n      '        },',\n      '',\n      '        any: function(expectation) {',\n      '          return \"any character\";',\n      '        },',\n      '',\n      '        end: function(expectation) {',\n      '          return \"end of input\";',\n      '        },',\n      '',\n      '        other: function(expectation) {',\n      '          return expectation.description;',\n      '        }',\n      '      };',\n      '',\n      '  function hex(ch) {',\n      '    return ch.charCodeAt(0).toString(16).toUpperCase();',\n      '  }',\n      '',\n      '  function literalEscape(s) {',\n      '    return s',\n      '      .replace(/\\\\\\\\/g, \\'\\\\\\\\\\\\\\\\\\')',   // backslash\n      '      .replace(/\"/g,  \\'\\\\\\\\\"\\')',        // closing double quote\n      '      .replace(/\\\\0/g, \\'\\\\\\\\0\\')',       // null\n      '      .replace(/\\\\t/g, \\'\\\\\\\\t\\')',       // horizontal tab\n      '      .replace(/\\\\n/g, \\'\\\\\\\\n\\')',       // line feed\n      '      .replace(/\\\\r/g, \\'\\\\\\\\r\\')',       // carriage return\n      '      .replace(/[\\\\x00-\\\\x0F]/g,          function(ch) { return \\'\\\\\\\\x0\\' + hex(ch); })',\n      '      .replace(/[\\\\x10-\\\\x1F\\\\x7F-\\\\x9F]/g, function(ch) { return \\'\\\\\\\\x\\'  + hex(ch); });',\n      '  }',\n      '',\n      '  function classEscape(s) {',\n      '    return s',\n      '      .replace(/\\\\\\\\/g, \\'\\\\\\\\\\\\\\\\\\')',   // backslash\n      '      .replace(/\\\\]/g, \\'\\\\\\\\]\\')',       // closing bracket\n      '      .replace(/\\\\^/g, \\'\\\\\\\\^\\')',       // caret\n      '      .replace(/-/g,  \\'\\\\\\\\-\\')',        // dash\n      '      .replace(/\\\\0/g, \\'\\\\\\\\0\\')',       // null\n      '      .replace(/\\\\t/g, \\'\\\\\\\\t\\')',       // horizontal tab\n      '      .replace(/\\\\n/g, \\'\\\\\\\\n\\')',       // line feed\n      '      .replace(/\\\\r/g, \\'\\\\\\\\r\\')',       // carriage return\n      '      .replace(/[\\\\x00-\\\\x0F]/g,          function(ch) { return \\'\\\\\\\\x0\\' + hex(ch); })',\n      '      .replace(/[\\\\x10-\\\\x1F\\\\x7F-\\\\x9F]/g, function(ch) { return \\'\\\\\\\\x\\'  + hex(ch); });',\n      '  }',\n      '',\n      '  function describeExpectation(expectation) {',\n      '    return DESCRIBE_EXPECTATION_FNS[expectation.type](expectation);',\n      '  }',\n      '',\n      '  function describeExpected(expected) {',\n      '    var descriptions = new Array(expected.length),',\n      '        i, j;',\n      '',\n      '    for (i = 0; i < expected.length; i++) {',\n      '      descriptions[i] = describeExpectation(expected[i]);',\n      '    }',\n      '',\n      '    descriptions.sort();',\n      '',\n      '    if (descriptions.length > 0) {',\n      '      for (i = 1, j = 1; i < descriptions.length; i++) {',\n      '        if (descriptions[i - 1] !== descriptions[i]) {',\n      '          descriptions[j] = descriptions[i];',\n      '          j++;',\n      '        }',\n      '      }',\n      '      descriptions.length = j;',\n      '    }',\n      '',\n      '    switch (descriptions.length) {',\n      '      case 1:',\n      '        return descriptions[0];',\n      '',\n      '      case 2:',\n      '        return descriptions[0] + \" or \" + descriptions[1];',\n      '',\n      '      default:',\n      '        return descriptions.slice(0, -1).join(\", \")',\n      '          + \", or \"',\n      '          + descriptions[descriptions.length - 1];',\n      '    }',\n      '  }',\n      '',\n      '  function describeFound(found) {',\n      '    return found ? \"\\\\\"\" + literalEscape(found) + \"\\\\\"\" : \"end of input\";',\n      '  }',\n      '',\n      '  return \"Expected \" + describeExpected(expected) + \" but \" + describeFound(found) + \" found.\";',\n      '};',\n      ''\n    ].join('\\n'));\n\n    if (options.trace) {\n      parts.push([\n        'function peg$DefaultTracer() {',\n        '  this.indentLevel = 0;',\n        '}',\n        '',\n        'peg$DefaultTracer.prototype.trace = function(event) {',\n        '  var that = this;',\n        '',\n        '  function log(event) {',\n        '    function repeat(string, n) {',\n        '       var result = \"\", i;',\n        '',\n        '       for (i = 0; i < n; i++) {',\n        '         result += string;',\n        '       }',\n        '',\n        '       return result;',\n        '    }',\n        '',\n        '    function pad(string, length) {',\n        '      return string + repeat(\" \", length - string.length);',\n        '    }',\n        '',\n        '    if (typeof console === \"object\") {',   // IE 8-10\n        '      console.log(',\n        '        event.location.start.line + \":\" + event.location.start.column + \"-\"',\n        '          + event.location.end.line + \":\" + event.location.end.column + \" \"',\n        '          + pad(event.type, 10) + \" \"',\n        '          + repeat(\"  \", that.indentLevel) + event.rule',\n        '      );',\n        '    }',\n        '  }',\n        '',\n        '  switch (event.type) {',\n        '    case \"rule.enter\":',\n        '      log(event);',\n        '      this.indentLevel++;',\n        '      break;',\n        '',\n        '    case \"rule.match\":',\n        '      this.indentLevel--;',\n        '      log(event);',\n        '      break;',\n        '',\n        '    case \"rule.fail\":',\n        '      this.indentLevel--;',\n        '      log(event);',\n        '      break;',\n        '',\n        '    default:',\n        '      throw new Error(\"Invalid event type: \" + event.type + \".\");',\n        '  }',\n        '};',\n        ''\n      ].join('\\n'));\n    }\n\n    parts.push([\n      'function peg$parse(input, options) {',\n      '  options = options !== void 0 ? options : {};',\n      '',\n      '  var peg$FAILED = {},',\n      ''\n    ].join('\\n'));\n\n    if (options.optimize === \"size\") {\n      startRuleIndices = '{ '\n                       + arrays.map(\n                           options.allowedStartRules,\n                           function(r) { return r + ': ' + asts.indexOfRule(ast, r); }\n                         ).join(', ')\n                       + ' }';\n      startRuleIndex = asts.indexOfRule(ast, options.allowedStartRules[0]);\n\n      parts.push([\n        '      peg$startRuleIndices = ' + startRuleIndices + ',',\n        '      peg$startRuleIndex   = ' + startRuleIndex + ','\n      ].join('\\n'));\n    } else {\n      startRuleFunctions = '{ '\n                       + arrays.map(\n                           options.allowedStartRules,\n                           function(r) { return r + ': peg$parse' + r; }\n                         ).join(', ')\n                       + ' }';\n      startRuleFunction = 'peg$parse' + options.allowedStartRules[0];\n\n      parts.push([\n        '      peg$startRuleFunctions = ' + startRuleFunctions + ',',\n        '      peg$startRuleFunction  = ' + startRuleFunction + ','\n      ].join('\\n'));\n    }\n\n    parts.push('');\n\n    parts.push(indent6(generateTables()));\n\n    parts.push([\n      '',\n      '      peg$currPos          = 0,',\n      '      peg$savedPos         = 0,',\n      '      peg$posDetailsCache  = [{ line: 1, column: 1 }],',\n      '      peg$maxFailPos       = 0,',\n      '      peg$maxFailExpected  = [],',\n      '      peg$silentFails      = 0,',   // 0 = report failures, > 0 = silence failures\n      ''\n    ].join('\\n'));\n\n    if (options.cache) {\n      parts.push([\n        '      peg$resultsCache = {},',\n        ''\n      ].join('\\n'));\n    }\n\n    if (options.trace) {\n      if (options.optimize === \"size\") {\n        ruleNames = '['\n                  + arrays.map(\n                      ast.rules,\n                      function(r) { return '\"' + js.stringEscape(r.name) + '\"'; }\n                    ).join(', ')\n                  + ']';\n\n        parts.push([\n          '      peg$ruleNames = ' + ruleNames + ',',\n          ''\n        ].join('\\n'));\n      }\n\n      parts.push([\n        '      peg$tracer = \"tracer\" in options ? options.tracer : new peg$DefaultTracer(),',\n        ''\n      ].join('\\n'));\n    }\n\n    parts.push([\n      '      peg$result;',\n      ''\n    ].join('\\n'));\n\n    if (options.optimize === \"size\") {\n      parts.push([\n        '  if (\"startRule\" in options) {',\n        '    if (!(options.startRule in peg$startRuleIndices)) {',\n        '      throw new Error(\"Can\\'t start parsing from rule \\\\\"\" + options.startRule + \"\\\\\".\");',\n        '    }',\n        '',\n        '    peg$startRuleIndex = peg$startRuleIndices[options.startRule];',\n        '  }'\n      ].join('\\n'));\n    } else {\n      parts.push([\n        '  if (\"startRule\" in options) {',\n        '    if (!(options.startRule in peg$startRuleFunctions)) {',\n        '      throw new Error(\"Can\\'t start parsing from rule \\\\\"\" + options.startRule + \"\\\\\".\");',\n        '    }',\n        '',\n        '    peg$startRuleFunction = peg$startRuleFunctions[options.startRule];',\n        '  }'\n      ].join('\\n'));\n    }\n\n    parts.push([\n      '',\n      '  function text() {',\n      '    return input.substring(peg$savedPos, peg$currPos);',\n      '  }',\n      '',\n      '  function location() {',\n      '    return peg$computeLocation(peg$savedPos, peg$currPos);',\n      '  }',\n      '',\n      '  function expected(description, location) {',\n      '    location = location !== void 0 ? location : peg$computeLocation(peg$savedPos, peg$currPos)',\n      '',\n      '    throw peg$buildStructuredError(',\n      '      [peg$otherExpectation(description)],',\n      '      input.substring(peg$savedPos, peg$currPos),',\n      '      location',\n      '    );',\n      '  }',\n      '',\n      '  function error(message, location) {',\n      '    location = location !== void 0 ? location : peg$computeLocation(peg$savedPos, peg$currPos)',\n      '',\n      '    throw peg$buildSimpleError(message, location);',\n      '  }',\n      '',\n      '  function peg$literalExpectation(text, ignoreCase) {',\n      '    return { type: \"literal\", text: text, ignoreCase: ignoreCase };',\n      '  }',\n      '',\n      '  function peg$classExpectation(parts, inverted, ignoreCase) {',\n      '    return { type: \"class\", parts: parts, inverted: inverted, ignoreCase: ignoreCase };',\n      '  }',\n      '',\n      '  function peg$anyExpectation() {',\n      '    return { type: \"any\" };',\n      '  }',\n      '',\n      '  function peg$endExpectation() {',\n      '    return { type: \"end\" };',\n      '  }',\n      '',\n      '  function peg$otherExpectation(description) {',\n      '    return { type: \"other\", description: description };',\n      '  }',\n      '',\n      '  function peg$computePosDetails(pos) {',\n      '    var details = peg$posDetailsCache[pos], p;',\n      '',\n      '    if (details) {',\n      '      return details;',\n      '    } else {',\n      '      p = pos - 1;',\n      '      while (!peg$posDetailsCache[p]) {',\n      '        p--;',\n      '      }',\n      '',\n      '      details = peg$posDetailsCache[p];',\n      '      details = {',\n      '        line:   details.line,',\n      '        column: details.column',\n      '      };',\n      '',\n      '      while (p < pos) {',\n      '        if (input.charCodeAt(p) === 10) {',\n      '          details.line++;',\n      '          details.column = 1;',\n      '        } else {',\n      '          details.column++;',\n      '        }',\n      '',\n      '        p++;',\n      '      }',\n      '',\n      '      peg$posDetailsCache[pos] = details;',\n      '      return details;',\n      '    }',\n      '  }',\n      '',\n      '  function peg$computeLocation(startPos, endPos) {',\n      '    var startPosDetails = peg$computePosDetails(startPos),',\n      '        endPosDetails   = peg$computePosDetails(endPos);',\n      '',\n      '    return {',\n      '      start: {',\n      '        offset: startPos,',\n      '        line:   startPosDetails.line,',\n      '        column: startPosDetails.column',\n      '      },',\n      '      end: {',\n      '        offset: endPos,',\n      '        line:   endPosDetails.line,',\n      '        column: endPosDetails.column',\n      '      }',\n      '    };',\n      '  }',\n      '',\n      '  function peg$fail(expected) {',\n      '    if (peg$currPos < peg$maxFailPos) { return; }',\n      '',\n      '    if (peg$currPos > peg$maxFailPos) {',\n      '      peg$maxFailPos = peg$currPos;',\n      '      peg$maxFailExpected = [];',\n      '    }',\n      '',\n      '    peg$maxFailExpected.push(expected);',\n      '  }',\n      '',\n      '  function peg$buildSimpleError(message, location) {',\n      '    return new peg$SyntaxError(message, null, null, location);',\n      '  }',\n      '',\n      '  function peg$buildStructuredError(expected, found, location) {',\n      '    return new peg$SyntaxError(',\n      '      peg$SyntaxError.buildMessage(expected, found),',\n      '      expected,',\n      '      found,',\n      '      location',\n      '    );',\n      '  }',\n      ''\n    ].join('\\n'));\n\n    if (options.optimize === \"size\") {\n      parts.push(indent2(generateInterpreter()));\n      parts.push('');\n    } else {\n      arrays.each(ast.rules, function(rule) {\n        parts.push(indent2(generateRuleFunction(rule)));\n        parts.push('');\n      });\n    }\n\n    if (ast.initializer) {\n      parts.push(indent2(ast.initializer.code));\n      parts.push('');\n    }\n\n    if (options.optimize === \"size\") {\n      parts.push('  peg$result = peg$parseRule(peg$startRuleIndex);');\n    } else {\n      parts.push('  peg$result = peg$startRuleFunction();');\n    }\n\n    parts.push([\n      '',\n      '  if (peg$result !== peg$FAILED && peg$currPos === input.length) {',\n      '    return peg$result;',\n      '  } else {',\n      '    if (peg$result !== peg$FAILED && peg$currPos < input.length) {',\n      '      peg$fail(peg$endExpectation());',\n      '    }',\n      '',\n      '    throw peg$buildStructuredError(',\n      '      peg$maxFailExpected,',\n      '      peg$maxFailPos < input.length ? input.charAt(peg$maxFailPos) : null,',\n      '      peg$maxFailPos < input.length',\n      '        ? peg$computeLocation(peg$maxFailPos, peg$maxFailPos + 1)',\n      '        : peg$computeLocation(peg$maxFailPos, peg$maxFailPos)',\n      '    );',\n      '  }',\n      '}'\n    ].join('\\n'));\n\n    return parts.join('\\n');\n  }\n\n  function generateWrapper(toplevelCode) {\n    function generateGeneratedByComment() {\n      return [\n        '/*',\n        ' * Generated by PEG.js 0.10.0.',\n        ' *',\n        ' * http://pegjs.org/',\n        ' */'\n      ].join('\\n');\n    }\n\n    function generateParserObject() {\n      return options.trace\n        ? [\n            '{',\n            '  SyntaxError:   peg$SyntaxError,',\n            '  DefaultTracer: peg$DefaultTracer,',\n            '  parse:         peg$parse',\n            '}'\n          ].join('\\n')\n        : [\n            '{',\n            '  SyntaxError: peg$SyntaxError,',\n            '  parse:       peg$parse',\n            '}'\n          ].join('\\n');\n    }\n\n    var generators = {\n      bare: function() {\n        return [\n          generateGeneratedByComment(),\n          '(function() {',\n          '  \"use strict\";',\n          '',\n             indent2(toplevelCode),\n          '',\n             indent2('return ' + generateParserObject() + ';'),\n          '})()'\n        ].join('\\n');\n      },\n\n      commonjs: function() {\n        var parts          = [],\n            dependencyVars = objects.keys(options.dependencies),\n            requires       = arrays.map(\n              dependencyVars,\n              function(variable) {\n                return variable\n                  + ' = require(\"'\n                  + js.stringEscape(options.dependencies[variable])\n                  + '\")';\n              }\n            );\n\n        parts.push([\n          generateGeneratedByComment(),\n          '',\n          '\"use strict\";',\n          ''\n        ].join('\\n'));\n\n        if (requires.length > 0) {\n          parts.push('var ' + requires.join(', ') + ';');\n          parts.push('');\n        }\n\n        parts.push([\n          toplevelCode,\n          '',\n          'module.exports = ' + generateParserObject() + ';',\n          ''\n        ].join('\\n'));\n\n        return parts.join('\\n');\n      },\n\n      amd: function() {\n        var dependencyIds  = objects.values(options.dependencies),\n            dependencyVars = objects.keys(options.dependencies),\n            dependencies   = '['\n              + arrays.map(\n                  dependencyIds,\n                  function(id) { return '\"' + js.stringEscape(id) + '\"'; }\n                ).join(', ')\n              + ']',\n            params         = dependencyVars.join(', ');\n\n        return [\n          generateGeneratedByComment(),\n          'define(' + dependencies + ', function(' + params + ') {',\n          '  \"use strict\";',\n          '',\n             indent2(toplevelCode),\n          '',\n             indent2('return ' + generateParserObject() + ';'),\n          '});',\n          ''\n        ].join('\\n');\n      },\n\n      globals: function() {\n        return [\n          generateGeneratedByComment(),\n          '(function(root) {',\n          '  \"use strict\";',\n          '',\n             indent2(toplevelCode),\n          '',\n             indent2('root.' + options.exportVar + ' = ' + generateParserObject() + ';'),\n          '})(this);',\n          ''\n        ].join('\\n');\n      },\n\n      umd: function() {\n        var parts          = [],\n            dependencyIds  = objects.values(options.dependencies),\n            dependencyVars = objects.keys(options.dependencies),\n            dependencies   = '['\n              + arrays.map(\n                  dependencyIds,\n                  function(id) { return '\"' + js.stringEscape(id) + '\"'; }\n                ).join(', ')\n              + ']',\n            requires       = arrays.map(\n              dependencyIds,\n              function(id) { return 'require(\"' + js.stringEscape(id) + '\")'; }\n            ).join(', '),\n            params         = dependencyVars.join(', ');\n\n        parts.push([\n          generateGeneratedByComment(),\n          '(function(root, factory) {',\n          '  if (typeof define === \"function\" && define.amd) {',\n          '    define(' + dependencies + ', factory);',\n          '  } else if (typeof module === \"object\" && module.exports) {',\n          '    module.exports = factory(' + requires + ');'\n        ].join('\\n'));\n\n        if (options.exportVar !== null) {\n          parts.push([\n            '  } else {',\n            '    root.' + options.exportVar + ' = factory();'\n          ].join('\\n'));\n        }\n\n        parts.push([\n          '  }',\n          '})(this, function(' + params + ') {',\n          '  \"use strict\";',\n          '',\n             indent2(toplevelCode),\n          '',\n             indent2('return ' + generateParserObject() + ';'),\n          '});',\n          ''\n        ].join('\\n'));\n\n        return parts.join('\\n');\n      }\n    };\n\n    return generators[options.format]();\n  }\n\n  ast.code = generateWrapper(generateToplevel());\n}\n\nmodule.exports = generateJS;\n","\"use strict\";\n\nvar arrays  = require(\"../utils/arrays\"),\n    objects = require(\"../utils/objects\");\n\nvar compiler = {\n  /*\n   * AST node visitor builder. Useful mainly for plugins which manipulate the\n   * AST.\n   */\n  visitor: require(\"./visitor\"),\n\n  /*\n   * Compiler passes.\n   *\n   * Each pass is a function that is passed the AST. It can perform checks on it\n   * or modify it as needed. If the pass encounters a semantic error, it throws\n   * |peg.GrammarError|.\n   */\n  passes: {\n    check: {\n      reportUndefinedRules:     require(\"./passes/report-undefined-rules\"),\n      reportDuplicateRules:     require(\"./passes/report-duplicate-rules\"),\n      reportDuplicateLabels:    require(\"./passes/report-duplicate-labels\"),\n      reportInfiniteRecursion:  require(\"./passes/report-infinite-recursion\"),\n      reportInfiniteRepetition: require(\"./passes/report-infinite-repetition\")\n    },\n    transform: {\n      removeProxyRules:         require(\"./passes/remove-proxy-rules\")\n    },\n    generate: {\n      generateBytecode:         require(\"./passes/generate-bytecode\"),\n      generateJS:               require(\"./passes/generate-js\")\n    }\n  },\n\n  /*\n   * Generates a parser from a specified grammar AST. Throws |peg.GrammarError|\n   * if the AST contains a semantic error. Note that not all errors are detected\n   * during the generation and some may protrude to the generated parser and\n   * cause its malfunction.\n   */\n  compile: function(ast, passes, options) {\n    options = options !== void 0 ? options : {};\n\n    var stage;\n\n    options = objects.clone(options);\n    objects.defaults(options, {\n      allowedStartRules: [ast.rules[0].name],\n      cache:             false,\n      dependencies:      {},\n      exportVar:         null,\n      format:            \"bare\",\n      optimize:          \"speed\",\n      output:            \"parser\",\n      trace:             false\n    });\n\n    for (stage in passes) {\n      if (passes.hasOwnProperty(stage)) {\n        arrays.each(passes[stage], function(p) { p(ast, options); });\n      }\n    }\n\n    switch (options.output) {\n      case \"parser\": return eval(ast.code);\n      case \"source\": return ast.code;\n    }\n  }\n};\n\nmodule.exports = compiler;\n","\"use strict\";\n\nvar arrays  = require(\"./utils/arrays\"),\n    objects = require(\"./utils/objects\");\n\nvar peg = {\n  /* PEG.js version (uses semantic versioning). */\n  VERSION: \"0.10.0\",\n\n  GrammarError: require(\"./grammar-error\"),\n  parser:       require(\"./parser\"),\n  compiler:     require(\"./compiler\"),\n\n  /*\n   * Generates a parser from a specified grammar and returns it.\n   *\n   * The grammar must be a string in the format described by the metagramar in\n   * the parser.pegjs file.\n   *\n   * Throws |peg.parser.SyntaxError| if the grammar contains a syntax error or\n   * |peg.GrammarError| if it contains a semantic error. Note that not all\n   * errors are detected during the generation and some may protrude to the\n   * generated parser and cause its malfunction.\n   */\n  generate: function(grammar, options) {\n    options = options !== void 0 ? options : {};\n\n    function convertPasses(passes) {\n      var converted = {}, stage;\n\n      for (stage in passes) {\n        if (passes.hasOwnProperty(stage)) {\n          converted[stage] = objects.values(passes[stage]);\n        }\n      }\n\n      return converted;\n    }\n\n    options = objects.clone(options);\n\n    var plugins = \"plugins\" in options ? options.plugins : [],\n        config  = {\n          parser: peg.parser,\n          passes: convertPasses(peg.compiler.passes)\n        };\n\n    arrays.each(plugins, function(p) { p.use(config, options); });\n\n    return peg.compiler.compile(\n      config.parser.parse(grammar),\n      config.passes,\n      options\n    );\n  }\n};\n\nmodule.exports = peg;\n","/*\n * Copyright (c) 2016, Jeff Hlywa (jhlywa@gmail.com)\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n *    this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n *----------------------------------------------------------------------------*/\n\n/* minified license below  */\n\n/* @license\n * Copyright (c) 2016, Jeff Hlywa (jhlywa@gmail.com)\n * Released under the BSD license\n * https://github.com/jhlywa/chess.js/blob/master/LICENSE\n */\n\nvar Chess = function(fen) {\n\n  /* jshint indent: false */\n\n  var BLACK = 'b';\n  var WHITE = 'w';\n\n  var EMPTY = -1;\n\n  var PAWN = 'p';\n  var KNIGHT = 'n';\n  var BISHOP = 'b';\n  var ROOK = 'r';\n  var QUEEN = 'q';\n  var KING = 'k';\n\n  var SYMBOLS = 'pnbrqkPNBRQK';\n\n  var DEFAULT_POSITION = 'rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1';\n\n  var POSSIBLE_RESULTS = ['1-0', '0-1', '1/2-1/2', '*'];\n\n  var PAWN_OFFSETS = {\n    b: [16, 32, 17, 15],\n    w: [-16, -32, -17, -15]\n  };\n\n  var PIECE_OFFSETS = {\n    n: [-18, -33, -31, -14,  18, 33, 31,  14],\n    b: [-17, -15,  17,  15],\n    r: [-16,   1,  16,  -1],\n    q: [-17, -16, -15,   1,  17, 16, 15,  -1],\n    k: [-17, -16, -15,   1,  17, 16, 15,  -1]\n  };\n\n  var ATTACKS = [\n    20, 0, 0, 0, 0, 0, 0, 24,  0, 0, 0, 0, 0, 0,20, 0,\n     0,20, 0, 0, 0, 0, 0, 24,  0, 0, 0, 0, 0,20, 0, 0,\n     0, 0,20, 0, 0, 0, 0, 24,  0, 0, 0, 0,20, 0, 0, 0,\n     0, 0, 0,20, 0, 0, 0, 24,  0, 0, 0,20, 0, 0, 0, 0,\n     0, 0, 0, 0,20, 0, 0, 24,  0, 0,20, 0, 0, 0, 0, 0,\n     0, 0, 0, 0, 0,20, 2, 24,  2,20, 0, 0, 0, 0, 0, 0,\n     0, 0, 0, 0, 0, 2,53, 56, 53, 2, 0, 0, 0, 0, 0, 0,\n    24,24,24,24,24,24,56,  0, 56,24,24,24,24,24,24, 0,\n     0, 0, 0, 0, 0, 2,53, 56, 53, 2, 0, 0, 0, 0, 0, 0,\n     0, 0, 0, 0, 0,20, 2, 24,  2,20, 0, 0, 0, 0, 0, 0,\n     0, 0, 0, 0,20, 0, 0, 24,  0, 0,20, 0, 0, 0, 0, 0,\n     0, 0, 0,20, 0, 0, 0, 24,  0, 0, 0,20, 0, 0, 0, 0,\n     0, 0,20, 0, 0, 0, 0, 24,  0, 0, 0, 0,20, 0, 0, 0,\n     0,20, 0, 0, 0, 0, 0, 24,  0, 0, 0, 0, 0,20, 0, 0,\n    20, 0, 0, 0, 0, 0, 0, 24,  0, 0, 0, 0, 0, 0,20\n  ];\n\n  var RAYS = [\n     17,  0,  0,  0,  0,  0,  0, 16,  0,  0,  0,  0,  0,  0, 15, 0,\n      0, 17,  0,  0,  0,  0,  0, 16,  0,  0,  0,  0,  0, 15,  0, 0,\n      0,  0, 17,  0,  0,  0,  0, 16,  0,  0,  0,  0, 15,  0,  0, 0,\n      0,  0,  0, 17,  0,  0,  0, 16,  0,  0,  0, 15,  0,  0,  0, 0,\n      0,  0,  0,  0, 17,  0,  0, 16,  0,  0, 15,  0,  0,  0,  0, 0,\n      0,  0,  0,  0,  0, 17,  0, 16,  0, 15,  0,  0,  0,  0,  0, 0,\n      0,  0,  0,  0,  0,  0, 17, 16, 15,  0,  0,  0,  0,  0,  0, 0,\n      1,  1,  1,  1,  1,  1,  1,  0, -1, -1,  -1,-1, -1, -1, -1, 0,\n      0,  0,  0,  0,  0,  0,-15,-16,-17,  0,  0,  0,  0,  0,  0, 0,\n      0,  0,  0,  0,  0,-15,  0,-16,  0,-17,  0,  0,  0,  0,  0, 0,\n      0,  0,  0,  0,-15,  0,  0,-16,  0,  0,-17,  0,  0,  0,  0, 0,\n      0,  0,  0,-15,  0,  0,  0,-16,  0,  0,  0,-17,  0,  0,  0, 0,\n      0,  0,-15,  0,  0,  0,  0,-16,  0,  0,  0,  0,-17,  0,  0, 0,\n      0,-15,  0,  0,  0,  0,  0,-16,  0,  0,  0,  0,  0,-17,  0, 0,\n    -15,  0,  0,  0,  0,  0,  0,-16,  0,  0,  0,  0,  0,  0,-17\n  ];\n\n  var SHIFTS = { p: 0, n: 1, b: 2, r: 3, q: 4, k: 5 };\n\n  var FLAGS = {\n    NORMAL: 'n',\n    CAPTURE: 'c',\n    BIG_PAWN: 'b',\n    EP_CAPTURE: 'e',\n    PROMOTION: 'p',\n    KSIDE_CASTLE: 'k',\n    QSIDE_CASTLE: 'q'\n  };\n\n  var BITS = {\n    NORMAL: 1,\n    CAPTURE: 2,\n    BIG_PAWN: 4,\n    EP_CAPTURE: 8,\n    PROMOTION: 16,\n    KSIDE_CASTLE: 32,\n    QSIDE_CASTLE: 64\n  };\n\n  var RANK_1 = 7;\n  var RANK_2 = 6;\n  var RANK_3 = 5;\n  var RANK_4 = 4;\n  var RANK_5 = 3;\n  var RANK_6 = 2;\n  var RANK_7 = 1;\n  var RANK_8 = 0;\n\n  var SQUARES = {\n    a8:   0, b8:   1, c8:   2, d8:   3, e8:   4, f8:   5, g8:   6, h8:   7,\n    a7:  16, b7:  17, c7:  18, d7:  19, e7:  20, f7:  21, g7:  22, h7:  23,\n    a6:  32, b6:  33, c6:  34, d6:  35, e6:  36, f6:  37, g6:  38, h6:  39,\n    a5:  48, b5:  49, c5:  50, d5:  51, e5:  52, f5:  53, g5:  54, h5:  55,\n    a4:  64, b4:  65, c4:  66, d4:  67, e4:  68, f4:  69, g4:  70, h4:  71,\n    a3:  80, b3:  81, c3:  82, d3:  83, e3:  84, f3:  85, g3:  86, h3:  87,\n    a2:  96, b2:  97, c2:  98, d2:  99, e2: 100, f2: 101, g2: 102, h2: 103,\n    a1: 112, b1: 113, c1: 114, d1: 115, e1: 116, f1: 117, g1: 118, h1: 119\n  };\n\n  var ROOKS = {\n    w: [{square: SQUARES.a1, flag: BITS.QSIDE_CASTLE},\n        {square: SQUARES.h1, flag: BITS.KSIDE_CASTLE}],\n    b: [{square: SQUARES.a8, flag: BITS.QSIDE_CASTLE},\n        {square: SQUARES.h8, flag: BITS.KSIDE_CASTLE}]\n  };\n\n  var board = new Array(128);\n  var kings = {w: EMPTY, b: EMPTY};\n  var turn = WHITE;\n  var castling = {w: 0, b: 0};\n  var ep_square = EMPTY;\n  var half_moves = 0;\n  var move_number = 1;\n  var history = [];\n  var header = {};\n\n  /* if the user passes in a fen string, load it, else default to\n   * starting position\n   */\n  if (typeof fen === 'undefined') {\n    load(DEFAULT_POSITION);\n  } else {\n    load(fen);\n  }\n\n  function clear() {\n    board = new Array(128);\n    kings = {w: EMPTY, b: EMPTY};\n    turn = WHITE;\n    castling = {w: 0, b: 0};\n    ep_square = EMPTY;\n    half_moves = 0;\n    move_number = 1;\n    history = [];\n    header = {};\n    update_setup(generate_fen());\n  }\n\n  function reset() {\n    load(DEFAULT_POSITION);\n  }\n\n  function load(fen) {\n    var tokens = fen.split(/\\s+/);\n    var position = tokens[0];\n    var square = 0;\n\n    if (!validate_fen(fen).valid) {\n      return false;\n    }\n\n    clear();\n\n    for (var i = 0; i < position.length; i++) {\n      var piece = position.charAt(i);\n\n      if (piece === '/') {\n        square += 8;\n      } else if (is_digit(piece)) {\n        square += parseInt(piece, 10);\n      } else {\n        var color = (piece < 'a') ? WHITE : BLACK;\n        put({type: piece.toLowerCase(), color: color}, algebraic(square));\n        square++;\n      }\n    }\n\n    turn = tokens[1];\n\n    if (tokens[2].indexOf('K') > -1) {\n      castling.w |= BITS.KSIDE_CASTLE;\n    }\n    if (tokens[2].indexOf('Q') > -1) {\n      castling.w |= BITS.QSIDE_CASTLE;\n    }\n    if (tokens[2].indexOf('k') > -1) {\n      castling.b |= BITS.KSIDE_CASTLE;\n    }\n    if (tokens[2].indexOf('q') > -1) {\n      castling.b |= BITS.QSIDE_CASTLE;\n    }\n\n    ep_square = (tokens[3] === '-') ? EMPTY : SQUARES[tokens[3]];\n    half_moves = parseInt(tokens[4], 10);\n    move_number = parseInt(tokens[5], 10);\n\n    update_setup(generate_fen());\n\n    return true;\n  }\n\n  /* TODO: this function is pretty much crap - it validates structure but\n   * completely ignores content (e.g. doesn't verify that each side has a king)\n   * ... we should rewrite this, and ditch the silly error_number field while\n   * we're at it\n   */\n  function validate_fen(fen) {\n    var errors = {\n       0: 'No errors.',\n       1: 'FEN string must contain six space-delimited fields.',\n       2: '6th field (move number) must be a positive integer.',\n       3: '5th field (half move counter) must be a non-negative integer.',\n       4: '4th field (en-passant square) is invalid.',\n       5: '3rd field (castling availability) is invalid.',\n       6: '2nd field (side to move) is invalid.',\n       7: '1st field (piece positions) does not contain 8 \\'/\\'-delimited rows.',\n       8: '1st field (piece positions) is invalid [consecutive numbers].',\n       9: '1st field (piece positions) is invalid [invalid piece].',\n      10: '1st field (piece positions) is invalid [row too large].',\n      11: 'Illegal en-passant square',\n    };\n\n    /* 1st criterion: 6 space-seperated fields? */\n    var tokens = fen.split(/\\s+/);\n    if (tokens.length !== 6) {\n      return {valid: false, error_number: 1, error: errors[1]};\n    }\n\n    /* 2nd criterion: move number field is a integer value > 0? */\n    if (isNaN(tokens[5]) || (parseInt(tokens[5], 10) <= 0)) {\n      return {valid: false, error_number: 2, error: errors[2]};\n    }\n\n    /* 3rd criterion: half move counter is an integer >= 0? */\n    if (isNaN(tokens[4]) || (parseInt(tokens[4], 10) < 0)) {\n      return {valid: false, error_number: 3, error: errors[3]};\n    }\n\n    /* 4th criterion: 4th field is a valid e.p.-string? */\n    if (!/^(-|[abcdefgh][36])$/.test(tokens[3])) {\n      return {valid: false, error_number: 4, error: errors[4]};\n    }\n\n    /* 5th criterion: 3th field is a valid castle-string? */\n    if( !/^(KQ?k?q?|Qk?q?|kq?|q|-)$/.test(tokens[2])) {\n      return {valid: false, error_number: 5, error: errors[5]};\n    }\n\n    /* 6th criterion: 2nd field is \"w\" (white) or \"b\" (black)? */\n    if (!/^(w|b)$/.test(tokens[1])) {\n      return {valid: false, error_number: 6, error: errors[6]};\n    }\n\n    /* 7th criterion: 1st field contains 8 rows? */\n    var rows = tokens[0].split('/');\n    if (rows.length !== 8) {\n      return {valid: false, error_number: 7, error: errors[7]};\n    }\n\n    /* 8th criterion: every row is valid? */\n    for (var i = 0; i < rows.length; i++) {\n      /* check for right sum of fields AND not two numbers in succession */\n      var sum_fields = 0;\n      var previous_was_number = false;\n\n      for (var k = 0; k < rows[i].length; k++) {\n        if (!isNaN(rows[i][k])) {\n          if (previous_was_number) {\n            return {valid: false, error_number: 8, error: errors[8]};\n          }\n          sum_fields += parseInt(rows[i][k], 10);\n          previous_was_number = true;\n        } else {\n          if (!/^[prnbqkPRNBQK]$/.test(rows[i][k])) {\n            return {valid: false, error_number: 9, error: errors[9]};\n          }\n          sum_fields += 1;\n          previous_was_number = false;\n        }\n      }\n      if (sum_fields !== 8) {\n        return {valid: false, error_number: 10, error: errors[10]};\n      }\n    }\n\n    if ((tokens[3][1] == '3' && tokens[1] == 'w') ||\n        (tokens[3][1] == '6' && tokens[1] == 'b')) {\n          return {valid: false, error_number: 11, error: errors[11]};\n    }\n\n    /* everything's okay! */\n    return {valid: true, error_number: 0, error: errors[0]};\n  }\n\n  function generate_fen() {\n    var empty = 0;\n    var fen = '';\n\n    for (var i = SQUARES.a8; i <= SQUARES.h1; i++) {\n      if (board[i] == null) {\n        empty++;\n      } else {\n        if (empty > 0) {\n          fen += empty;\n          empty = 0;\n        }\n        var color = board[i].color;\n        var piece = board[i].type;\n\n        fen += (color === WHITE) ?\n                 piece.toUpperCase() : piece.toLowerCase();\n      }\n\n      if ((i + 1) & 0x88) {\n        if (empty > 0) {\n          fen += empty;\n        }\n\n        if (i !== SQUARES.h1) {\n          fen += '/';\n        }\n\n        empty = 0;\n        i += 8;\n      }\n    }\n\n    var cflags = '';\n    if (castling[WHITE] & BITS.KSIDE_CASTLE) { cflags += 'K'; }\n    if (castling[WHITE] & BITS.QSIDE_CASTLE) { cflags += 'Q'; }\n    if (castling[BLACK] & BITS.KSIDE_CASTLE) { cflags += 'k'; }\n    if (castling[BLACK] & BITS.QSIDE_CASTLE) { cflags += 'q'; }\n\n    /* do we have an empty castling flag? */\n    cflags = cflags || '-';\n    var epflags = (ep_square === EMPTY) ? '-' : algebraic(ep_square);\n\n    return [fen, turn, cflags, epflags, half_moves, move_number].join(' ');\n  }\n\n  function set_header(args) {\n    for (var i = 0; i < args.length; i += 2) {\n      if (typeof args[i] === 'string' &&\n          typeof args[i + 1] === 'string') {\n        header[args[i]] = args[i + 1];\n      }\n    }\n    return header;\n  }\n\n  /* called when the initial board setup is changed with put() or remove().\n   * modifies the SetUp and FEN properties of the header object.  if the FEN is\n   * equal to the default position, the SetUp and FEN are deleted\n   * the setup is only updated if history.length is zero, ie moves haven't been\n   * made.\n   */\n  function update_setup(fen) {\n    if (history.length > 0) return;\n\n    if (fen !== DEFAULT_POSITION) {\n      header['SetUp'] = '1';\n      header['FEN'] = fen;\n    } else {\n      delete header['SetUp'];\n      delete header['FEN'];\n    }\n  }\n\n  function get(square) {\n    var piece = board[SQUARES[square]];\n    return (piece) ? {type: piece.type, color: piece.color} : null;\n  }\n\n  function put(piece, square) {\n    /* check for valid piece object */\n    if (!('type' in piece && 'color' in piece)) {\n      return false;\n    }\n\n    /* check for piece */\n    if (SYMBOLS.indexOf(piece.type.toLowerCase()) === -1) {\n      return false;\n    }\n\n    /* check for valid square */\n    if (!(square in SQUARES)) {\n      return false;\n    }\n\n    var sq = SQUARES[square];\n\n    /* don't let the user place more than one king */\n    if (piece.type == KING &&\n        !(kings[piece.color] == EMPTY || kings[piece.color] == sq)) {\n      return false;\n    }\n\n    board[sq] = {type: piece.type, color: piece.color};\n    if (piece.type === KING) {\n      kings[piece.color] = sq;\n    }\n\n    update_setup(generate_fen());\n\n    return true;\n  }\n\n  function remove(square) {\n    var piece = get(square);\n    board[SQUARES[square]] = null;\n    if (piece && piece.type === KING) {\n      kings[piece.color] = EMPTY;\n    }\n\n    update_setup(generate_fen());\n\n    return piece;\n  }\n\n  function build_move(board, from, to, flags, promotion) {\n    var move = {\n      color: turn,\n      from: from,\n      to: to,\n      flags: flags,\n      piece: board[from].type\n    };\n\n    if (promotion) {\n      move.flags |= BITS.PROMOTION;\n      move.promotion = promotion;\n    }\n\n    if (board[to]) {\n      move.captured = board[to].type;\n    } else if (flags & BITS.EP_CAPTURE) {\n        move.captured = PAWN;\n    }\n    return move;\n  }\n\n  function generate_moves(options) {\n    function add_move(board, moves, from, to, flags) {\n      /* if pawn promotion */\n      if (board[from].type === PAWN &&\n         (rank(to) === RANK_8 || rank(to) === RANK_1)) {\n          var pieces = [QUEEN, ROOK, BISHOP, KNIGHT];\n          for (var i = 0, len = pieces.length; i < len; i++) {\n            moves.push(build_move(board, from, to, flags, pieces[i]));\n          }\n      } else {\n       moves.push(build_move(board, from, to, flags));\n      }\n    }\n\n    var moves = [];\n    var us = turn;\n    var them = swap_color(us);\n    var second_rank = {b: RANK_7, w: RANK_2};\n\n    var first_sq = SQUARES.a8;\n    var last_sq = SQUARES.h1;\n    var single_square = false;\n\n    /* do we want legal moves? */\n    var legal = (typeof options !== 'undefined' && 'legal' in options) ?\n                options.legal : true;\n\n    /* are we generating moves for a single square? */\n    if (typeof options !== 'undefined' && 'square' in options) {\n      if (options.square in SQUARES) {\n        first_sq = last_sq = SQUARES[options.square];\n        single_square = true;\n      } else {\n        /* invalid square */\n        return [];\n      }\n    }\n\n    for (var i = first_sq; i <= last_sq; i++) {\n      /* did we run off the end of the board */\n      if (i & 0x88) { i += 7; continue; }\n\n      var piece = board[i];\n      if (piece == null || piece.color !== us) {\n        continue;\n      }\n\n      if (piece.type === PAWN) {\n        /* single square, non-capturing */\n        var square = i + PAWN_OFFSETS[us][0];\n        if (board[square] == null) {\n            add_move(board, moves, i, square, BITS.NORMAL);\n\n          /* double square */\n          var square = i + PAWN_OFFSETS[us][1];\n          if (second_rank[us] === rank(i) && board[square] == null) {\n            add_move(board, moves, i, square, BITS.BIG_PAWN);\n          }\n        }\n\n        /* pawn captures */\n        for (j = 2; j < 4; j++) {\n          var square = i + PAWN_OFFSETS[us][j];\n          if (square & 0x88) continue;\n\n          if (board[square] != null &&\n              board[square].color === them) {\n              add_move(board, moves, i, square, BITS.CAPTURE);\n          } else if (square === ep_square) {\n              add_move(board, moves, i, ep_square, BITS.EP_CAPTURE);\n          }\n        }\n      } else {\n        for (var j = 0, len = PIECE_OFFSETS[piece.type].length; j < len; j++) {\n          var offset = PIECE_OFFSETS[piece.type][j];\n          var square = i;\n\n          while (true) {\n            square += offset;\n            if (square & 0x88) break;\n\n            if (board[square] == null) {\n              add_move(board, moves, i, square, BITS.NORMAL);\n            } else {\n              if (board[square].color === us) break;\n              add_move(board, moves, i, square, BITS.CAPTURE);\n              break;\n            }\n\n            /* break, if knight or king */\n            if (piece.type === 'n' || piece.type === 'k') break;\n          }\n        }\n      }\n    }\n\n    /* check for castling if: a) we're generating all moves, or b) we're doing\n     * single square move generation on the king's square\n     */\n    if ((!single_square) || last_sq === kings[us]) {\n      /* king-side castling */\n      if (castling[us] & BITS.KSIDE_CASTLE) {\n        var castling_from = kings[us];\n        var castling_to = castling_from + 2;\n\n        if (board[castling_from + 1] == null &&\n            board[castling_to]       == null &&\n            !attacked(them, kings[us]) &&\n            !attacked(them, castling_from + 1) &&\n            !attacked(them, castling_to)) {\n          add_move(board, moves, kings[us] , castling_to,\n                   BITS.KSIDE_CASTLE);\n        }\n      }\n\n      /* queen-side castling */\n      if (castling[us] & BITS.QSIDE_CASTLE) {\n        var castling_from = kings[us];\n        var castling_to = castling_from - 2;\n\n        if (board[castling_from - 1] == null &&\n            board[castling_from - 2] == null &&\n            board[castling_from - 3] == null &&\n            !attacked(them, kings[us]) &&\n            !attacked(them, castling_from - 1) &&\n            !attacked(them, castling_to)) {\n          add_move(board, moves, kings[us], castling_to,\n                   BITS.QSIDE_CASTLE);\n        }\n      }\n    }\n\n    /* return all pseudo-legal moves (this includes moves that allow the king\n     * to be captured)\n     */\n    if (!legal) {\n      return moves;\n    }\n\n    /* filter out illegal moves */\n    var legal_moves = [];\n    for (var i = 0, len = moves.length; i < len; i++) {\n      make_move(moves[i]);\n      if (!king_attacked(us)) {\n        legal_moves.push(moves[i]);\n      }\n      undo_move();\n    }\n\n    return legal_moves;\n  }\n\n  /* convert a move from 0x88 coordinates to Standard Algebraic Notation\n   * (SAN)\n   *\n   * @param {boolean} sloppy Use the sloppy SAN generator to work around over\n   * disambiguation bugs in Fritz and Chessbase.  See below:\n   *\n   * r1bqkbnr/ppp2ppp/2n5/1B1pP3/4P3/8/PPPP2PP/RNBQK1NR b KQkq - 2 4\n   * 4. ... Nge7 is overly disambiguated because the knight on c6 is pinned\n   * 4. ... Ne7 is technically the valid SAN\n   */\n  function move_to_san(move, sloppy) {\n\n    var output = '';\n\n    if (move.flags & BITS.KSIDE_CASTLE) {\n      output = 'O-O';\n    } else if (move.flags & BITS.QSIDE_CASTLE) {\n      output = 'O-O-O';\n    } else {\n      var disambiguator = get_disambiguator(move, sloppy);\n\n      if (move.piece !== PAWN) {\n        output += move.piece.toUpperCase() + disambiguator;\n      }\n\n      if (move.flags & (BITS.CAPTURE | BITS.EP_CAPTURE)) {\n        if (move.piece === PAWN) {\n          output += algebraic(move.from)[0];\n        }\n        output += 'x';\n      }\n\n      output += algebraic(move.to);\n\n      if (move.flags & BITS.PROMOTION) {\n        output += '=' + move.promotion.toUpperCase();\n      }\n    }\n\n    make_move(move);\n    if (in_check()) {\n      if (in_checkmate()) {\n        output += '#';\n      } else {\n        output += '+';\n      }\n    }\n    undo_move();\n\n    return output;\n  }\n\n  // parses all of the decorators out of a SAN string\n  function stripped_san(move) {\n    return move.replace(/=/,'').replace(/[+#]?[?!]*$/,'');\n  }\n\n  function attacked(color, square) {\n    for (var i = SQUARES.a8; i <= SQUARES.h1; i++) {\n      /* did we run off the end of the board */\n      if (i & 0x88) { i += 7; continue; }\n\n      /* if empty square or wrong color */\n      if (board[i] == null || board[i].color !== color) continue;\n\n      var piece = board[i];\n      var difference = i - square;\n      var index = difference + 119;\n\n      if (ATTACKS[index] & (1 << SHIFTS[piece.type])) {\n        if (piece.type === PAWN) {\n          if (difference > 0) {\n            if (piece.color === WHITE) return true;\n          } else {\n            if (piece.color === BLACK) return true;\n          }\n          continue;\n        }\n\n        /* if the piece is a knight or a king */\n        if (piece.type === 'n' || piece.type === 'k') return true;\n\n        var offset = RAYS[index];\n        var j = i + offset;\n\n        var blocked = false;\n        while (j !== square) {\n          if (board[j] != null) { blocked = true; break; }\n          j += offset;\n        }\n\n        if (!blocked) return true;\n      }\n    }\n\n    return false;\n  }\n\n  function king_attacked(color) {\n    return attacked(swap_color(color), kings[color]);\n  }\n\n  function in_check() {\n    return king_attacked(turn);\n  }\n\n  function in_checkmate() {\n    return in_check() && generate_moves().length === 0;\n  }\n\n  function in_stalemate() {\n    return !in_check() && generate_moves().length === 0;\n  }\n\n  function insufficient_material() {\n    var pieces = {};\n    var bishops = [];\n    var num_pieces = 0;\n    var sq_color = 0;\n\n    for (var i = SQUARES.a8; i<= SQUARES.h1; i++) {\n      sq_color = (sq_color + 1) % 2;\n      if (i & 0x88) { i += 7; continue; }\n\n      var piece = board[i];\n      if (piece) {\n        pieces[piece.type] = (piece.type in pieces) ?\n                              pieces[piece.type] + 1 : 1;\n        if (piece.type === BISHOP) {\n          bishops.push(sq_color);\n        }\n        num_pieces++;\n      }\n    }\n\n    /* k vs. k */\n    if (num_pieces === 2) { return true; }\n\n    /* k vs. kn .... or .... k vs. kb */\n    else if (num_pieces === 3 && (pieces[BISHOP] === 1 ||\n                                 pieces[KNIGHT] === 1)) { return true; }\n\n    /* kb vs. kb where any number of bishops are all on the same color */\n    else if (num_pieces === pieces[BISHOP] + 2) {\n      var sum = 0;\n      var len = bishops.length;\n      for (var i = 0; i < len; i++) {\n        sum += bishops[i];\n      }\n      if (sum === 0 || sum === len) { return true; }\n    }\n\n    return false;\n  }\n\n  function in_threefold_repetition() {\n    /* TODO: while this function is fine for casual use, a better\n     * implementation would use a Zobrist key (instead of FEN). the\n     * Zobrist key would be maintained in the make_move/undo_move functions,\n     * avoiding the costly that we do below.\n     */\n    var moves = [];\n    var positions = {};\n    var repetition = false;\n\n    while (true) {\n      var move = undo_move();\n      if (!move) break;\n      moves.push(move);\n    }\n\n    while (true) {\n      /* remove the last two fields in the FEN string, they're not needed\n       * when checking for draw by rep */\n      var fen = generate_fen().split(' ').slice(0,4).join(' ');\n\n      /* has the position occurred three or move times */\n      positions[fen] = (fen in positions) ? positions[fen] + 1 : 1;\n      if (positions[fen] >= 3) {\n        repetition = true;\n      }\n\n      if (!moves.length) {\n        break;\n      }\n      make_move(moves.pop());\n    }\n\n    return repetition;\n  }\n\n  function push(move) {\n    history.push({\n      move: move,\n      kings: {b: kings.b, w: kings.w},\n      turn: turn,\n      castling: {b: castling.b, w: castling.w},\n      ep_square: ep_square,\n      half_moves: half_moves,\n      move_number: move_number\n    });\n  }\n\n  function make_move(move) {\n    var us = turn;\n    var them = swap_color(us);\n    push(move);\n\n    board[move.to] = board[move.from];\n    board[move.from] = null;\n\n    /* if ep capture, remove the captured pawn */\n    if (move.flags & BITS.EP_CAPTURE) {\n      if (turn === BLACK) {\n        board[move.to - 16] = null;\n      } else {\n        board[move.to + 16] = null;\n      }\n    }\n\n    /* if pawn promotion, replace with new piece */\n    if (move.flags & BITS.PROMOTION) {\n      board[move.to] = {type: move.promotion, color: us};\n    }\n\n    /* if we moved the king */\n    if (board[move.to].type === KING) {\n      kings[board[move.to].color] = move.to;\n\n      /* if we castled, move the rook next to the king */\n      if (move.flags & BITS.KSIDE_CASTLE) {\n        var castling_to = move.to - 1;\n        var castling_from = move.to + 1;\n        board[castling_to] = board[castling_from];\n        board[castling_from] = null;\n      } else if (move.flags & BITS.QSIDE_CASTLE) {\n        var castling_to = move.to + 1;\n        var castling_from = move.to - 2;\n        board[castling_to] = board[castling_from];\n        board[castling_from] = null;\n      }\n\n      /* turn off castling */\n      castling[us] = '';\n    }\n\n    /* turn off castling if we move a rook */\n    if (castling[us]) {\n      for (var i = 0, len = ROOKS[us].length; i < len; i++) {\n        if (move.from === ROOKS[us][i].square &&\n            castling[us] & ROOKS[us][i].flag) {\n          castling[us] ^= ROOKS[us][i].flag;\n          break;\n        }\n      }\n    }\n\n    /* turn off castling if we capture a rook */\n    if (castling[them]) {\n      for (var i = 0, len = ROOKS[them].length; i < len; i++) {\n        if (move.to === ROOKS[them][i].square &&\n            castling[them] & ROOKS[them][i].flag) {\n          castling[them] ^= ROOKS[them][i].flag;\n          break;\n        }\n      }\n    }\n\n    /* if big pawn move, update the en passant square */\n    if (move.flags & BITS.BIG_PAWN) {\n      if (turn === 'b') {\n        ep_square = move.to - 16;\n      } else {\n        ep_square = move.to + 16;\n      }\n    } else {\n      ep_square = EMPTY;\n    }\n\n    /* reset the 50 move counter if a pawn is moved or a piece is captured */\n    if (move.piece === PAWN) {\n      half_moves = 0;\n    } else if (move.flags & (BITS.CAPTURE | BITS.EP_CAPTURE)) {\n      half_moves = 0;\n    } else {\n      half_moves++;\n    }\n\n    if (turn === BLACK) {\n      move_number++;\n    }\n    turn = swap_color(turn);\n  }\n\n  function undo_move() {\n    var old = history.pop();\n    if (old == null) { return null; }\n\n    var move = old.move;\n    kings = old.kings;\n    turn = old.turn;\n    castling = old.castling;\n    ep_square = old.ep_square;\n    half_moves = old.half_moves;\n    move_number = old.move_number;\n\n    var us = turn;\n    var them = swap_color(turn);\n\n    board[move.from] = board[move.to];\n    board[move.from].type = move.piece;  // to undo any promotions\n    board[move.to] = null;\n\n    if (move.flags & BITS.CAPTURE) {\n      board[move.to] = {type: move.captured, color: them};\n    } else if (move.flags & BITS.EP_CAPTURE) {\n      var index;\n      if (us === BLACK) {\n        index = move.to - 16;\n      } else {\n        index = move.to + 16;\n      }\n      board[index] = {type: PAWN, color: them};\n    }\n\n\n    if (move.flags & (BITS.KSIDE_CASTLE | BITS.QSIDE_CASTLE)) {\n      var castling_to, castling_from;\n      if (move.flags & BITS.KSIDE_CASTLE) {\n        castling_to = move.to + 1;\n        castling_from = move.to - 1;\n      } else if (move.flags & BITS.QSIDE_CASTLE) {\n        castling_to = move.to - 2;\n        castling_from = move.to + 1;\n      }\n\n      board[castling_to] = board[castling_from];\n      board[castling_from] = null;\n    }\n\n    return move;\n  }\n\n  /* this function is used to uniquely identify ambiguous moves */\n  function get_disambiguator(move, sloppy) {\n    var moves = generate_moves({legal: !sloppy});\n\n    var from = move.from;\n    var to = move.to;\n    var piece = move.piece;\n\n    var ambiguities = 0;\n    var same_rank = 0;\n    var same_file = 0;\n\n    for (var i = 0, len = moves.length; i < len; i++) {\n      var ambig_from = moves[i].from;\n      var ambig_to = moves[i].to;\n      var ambig_piece = moves[i].piece;\n\n      /* if a move of the same piece type ends on the same to square, we'll\n       * need to add a disambiguator to the algebraic notation\n       */\n      if (piece === ambig_piece && from !== ambig_from && to === ambig_to) {\n        ambiguities++;\n\n        if (rank(from) === rank(ambig_from)) {\n          same_rank++;\n        }\n\n        if (file(from) === file(ambig_from)) {\n          same_file++;\n        }\n      }\n    }\n\n    if (ambiguities > 0) {\n      /* if there exists a similar moving piece on the same rank and file as\n       * the move in question, use the square as the disambiguator\n       */\n      if (same_rank > 0 && same_file > 0) {\n        return algebraic(from);\n      }\n      /* if the moving piece rests on the same file, use the rank symbol as the\n       * disambiguator\n       */\n      else if (same_file > 0) {\n        return algebraic(from).charAt(1);\n      }\n      /* else use the file symbol */\n      else {\n        return algebraic(from).charAt(0);\n      }\n    }\n\n    return '';\n  }\n\n  function ascii() {\n    var s = '   +------------------------+\\n';\n    for (var i = SQUARES.a8; i <= SQUARES.h1; i++) {\n      /* display the rank */\n      if (file(i) === 0) {\n        s += ' ' + '87654321'[rank(i)] + ' |';\n      }\n\n      /* empty piece */\n      if (board[i] == null) {\n        s += ' . ';\n      } else {\n        var piece = board[i].type;\n        var color = board[i].color;\n        var symbol = (color === WHITE) ?\n                     piece.toUpperCase() : piece.toLowerCase();\n        s += ' ' + symbol + ' ';\n      }\n\n      if ((i + 1) & 0x88) {\n        s += '|\\n';\n        i += 8;\n      }\n    }\n    s += '   +------------------------+\\n';\n    s += '     a  b  c  d  e  f  g  h\\n';\n\n    return s;\n  }\n\n  // convert a move from Standard Algebraic Notation (SAN) to 0x88 coordinates\n  function move_from_san(move, sloppy) {\n    // strip off any move decorations: e.g Nf3+?!\n    var clean_move = stripped_san(move);\n\n    // if we're using the sloppy parser run a regex to grab piece, to, and from\n    // this should parse invalid SAN like: Pe2-e4, Rc1c4, Qf3xf7\n    if (sloppy) {\n      var matches = clean_move.match(/([pnbrqkPNBRQK])?([a-h][1-8])x?-?([a-h][1-8])([qrbnQRBN])?/);\n      if (matches) {\n        var piece = matches[1];\n        var from = matches[2];\n        var to = matches[3];\n        var promotion = matches[4];\n      }\n    }\n\n    var moves = generate_moves();\n    for (var i = 0, len = moves.length; i < len; i++) {\n      // try the strict parser first, then the sloppy parser if requested\n      // by the user\n      if ((clean_move === stripped_san(move_to_san(moves[i]))) ||\n          (sloppy && clean_move === stripped_san(move_to_san(moves[i], true)))) {\n        return moves[i];\n      } else {\n        if (matches &&\n            (!piece || piece.toLowerCase() == moves[i].piece) &&\n            SQUARES[from] == moves[i].from &&\n            SQUARES[to] == moves[i].to &&\n            (!promotion || promotion.toLowerCase() == moves[i].promotion)) {\n          return moves[i];\n        }\n      }\n    }\n\n    return null;\n  }\n\n\n  /*****************************************************************************\n   * UTILITY FUNCTIONS\n   ****************************************************************************/\n  function rank(i) {\n    return i >> 4;\n  }\n\n  function file(i) {\n    return i & 15;\n  }\n\n  function algebraic(i){\n    var f = file(i), r = rank(i);\n    return 'abcdefgh'.substring(f,f+1) + '87654321'.substring(r,r+1);\n  }\n\n  function swap_color(c) {\n    return c === WHITE ? BLACK : WHITE;\n  }\n\n  function is_digit(c) {\n    return '0123456789'.indexOf(c) !== -1;\n  }\n\n  /* pretty = external move object */\n  function make_pretty(ugly_move) {\n    var move = clone(ugly_move);\n    move.san = move_to_san(move, false);\n    move.to = algebraic(move.to);\n    move.from = algebraic(move.from);\n\n    var flags = '';\n\n    for (var flag in BITS) {\n      if (BITS[flag] & move.flags) {\n        flags += FLAGS[flag];\n      }\n    }\n    move.flags = flags;\n\n    return move;\n  }\n\n  function clone(obj) {\n    var dupe = (obj instanceof Array) ? [] : {};\n\n    for (var property in obj) {\n      if (typeof property === 'object') {\n        dupe[property] = clone(obj[property]);\n      } else {\n        dupe[property] = obj[property];\n      }\n    }\n\n    return dupe;\n  }\n\n  function trim(str) {\n    return str.replace(/^\\s+|\\s+$/g, '');\n  }\n\n  /*****************************************************************************\n   * DEBUGGING UTILITIES\n   ****************************************************************************/\n  function perft(depth) {\n    var moves = generate_moves({legal: false});\n    var nodes = 0;\n    var color = turn;\n\n    for (var i = 0, len = moves.length; i < len; i++) {\n      make_move(moves[i]);\n      if (!king_attacked(color)) {\n        if (depth - 1 > 0) {\n          var child_nodes = perft(depth - 1);\n          nodes += child_nodes;\n        } else {\n          nodes++;\n        }\n      }\n      undo_move();\n    }\n\n    return nodes;\n  }\n\n  return {\n    /***************************************************************************\n     * PUBLIC CONSTANTS (is there a better way to do this?)\n     **************************************************************************/\n    WHITE: WHITE,\n    BLACK: BLACK,\n    PAWN: PAWN,\n    KNIGHT: KNIGHT,\n    BISHOP: BISHOP,\n    ROOK: ROOK,\n    QUEEN: QUEEN,\n    KING: KING,\n    SQUARES: (function() {\n                /* from the ECMA-262 spec (section 12.6.4):\n                 * \"The mechanics of enumerating the properties ... is\n                 * implementation dependent\"\n                 * so: for (var sq in SQUARES) { keys.push(sq); } might not be\n                 * ordered correctly\n                 */\n                var keys = [];\n                for (var i = SQUARES.a8; i <= SQUARES.h1; i++) {\n                  if (i & 0x88) { i += 7; continue; }\n                  keys.push(algebraic(i));\n                }\n                return keys;\n              })(),\n    FLAGS: FLAGS,\n\n    /***************************************************************************\n     * PUBLIC API\n     **************************************************************************/\n    load: function(fen) {\n      return load(fen);\n    },\n\n    reset: function() {\n      return reset();\n    },\n\n    moves: function(options) {\n      /* The internal representation of a chess move is in 0x88 format, and\n       * not meant to be human-readable.  The code below converts the 0x88\n       * square coordinates to algebraic coordinates.  It also prunes an\n       * unnecessary move keys resulting from a verbose call.\n       */\n\n      var ugly_moves = generate_moves(options);\n      var moves = [];\n\n      for (var i = 0, len = ugly_moves.length; i < len; i++) {\n\n        /* does the user want a full move object (most likely not), or just\n         * SAN\n         */\n        if (typeof options !== 'undefined' && 'verbose' in options &&\n            options.verbose) {\n          moves.push(make_pretty(ugly_moves[i]));\n        } else {\n          moves.push(move_to_san(ugly_moves[i], false));\n        }\n      }\n\n      return moves;\n    },\n\n    in_check: function() {\n      return in_check();\n    },\n\n    in_checkmate: function() {\n      return in_checkmate();\n    },\n\n    in_stalemate: function() {\n      return in_stalemate();\n    },\n\n    in_draw: function() {\n      return half_moves >= 100 ||\n             in_stalemate() ||\n             insufficient_material() ||\n             in_threefold_repetition();\n    },\n\n    insufficient_material: function() {\n      return insufficient_material();\n    },\n\n    in_threefold_repetition: function() {\n      return in_threefold_repetition();\n    },\n\n    game_over: function() {\n      return half_moves >= 100 ||\n             in_checkmate() ||\n             in_stalemate() ||\n             insufficient_material() ||\n             in_threefold_repetition();\n    },\n\n    validate_fen: function(fen) {\n      return validate_fen(fen);\n    },\n\n    fen: function() {\n      return generate_fen();\n    },\n\n    pgn: function(options) {\n      /* using the specification from http://www.chessclub.com/help/PGN-spec\n       * example for html usage: .pgn({ max_width: 72, newline_char: \"<br />\" })\n       */\n      var newline = (typeof options === 'object' &&\n                     typeof options.newline_char === 'string') ?\n                     options.newline_char : '\\n';\n      var max_width = (typeof options === 'object' &&\n                       typeof options.max_width === 'number') ?\n                       options.max_width : 0;\n      var result = [];\n      var header_exists = false;\n\n      /* add the PGN header headerrmation */\n      for (var i in header) {\n        /* TODO: order of enumerated properties in header object is not\n         * guaranteed, see ECMA-262 spec (section 12.6.4)\n         */\n        result.push('[' + i + ' \\\"' + header[i] + '\\\"]' + newline);\n        header_exists = true;\n      }\n\n      if (header_exists && history.length) {\n        result.push(newline);\n      }\n\n      /* pop all of history onto reversed_history */\n      var reversed_history = [];\n      while (history.length > 0) {\n        reversed_history.push(undo_move());\n      }\n\n      var moves = [];\n      var move_string = '';\n\n      /* build the list of moves.  a move_string looks like: \"3. e3 e6\" */\n      while (reversed_history.length > 0) {\n        var move = reversed_history.pop();\n\n        /* if the position started with black to move, start PGN with 1. ... */\n        if (!history.length && move.color === 'b') {\n          move_string = move_number + '. ...';\n        } else if (move.color === 'w') {\n          /* store the previous generated move_string if we have one */\n          if (move_string.length) {\n            moves.push(move_string);\n          }\n          move_string = move_number + '.';\n        }\n\n        move_string = move_string + ' ' + move_to_san(move, false);\n        make_move(move);\n      }\n\n      /* are there any other leftover moves? */\n      if (move_string.length) {\n        moves.push(move_string);\n      }\n\n      /* is there a result? */\n      if (typeof header.Result !== 'undefined') {\n        moves.push(header.Result);\n      }\n\n      /* history should be back to what is was before we started generating PGN,\n       * so join together moves\n       */\n      if (max_width === 0) {\n        return result.join('') + moves.join(' ');\n      }\n\n      /* wrap the PGN output at max_width */\n      var current_width = 0;\n      for (var i = 0; i < moves.length; i++) {\n        /* if the current move will push past max_width */\n        if (current_width + moves[i].length > max_width && i !== 0) {\n\n          /* don't end the line with whitespace */\n          if (result[result.length - 1] === ' ') {\n            result.pop();\n          }\n\n          result.push(newline);\n          current_width = 0;\n        } else if (i !== 0) {\n          result.push(' ');\n          current_width++;\n        }\n        result.push(moves[i]);\n        current_width += moves[i].length;\n      }\n\n      return result.join('');\n    },\n\n    load_pgn: function(pgn, options) {\n      // allow the user to specify the sloppy move parser to work around over\n      // disambiguation bugs in Fritz and Chessbase\n      var sloppy = (typeof options !== 'undefined' && 'sloppy' in options) ?\n                    options.sloppy : false;\n\n      function mask(str) {\n        return str.replace(/\\\\/g, '\\\\');\n      }\n\n      function has_keys(object) {\n        for (var key in object) {\n          return true;\n        }\n        return false;\n      }\n\n      function parse_pgn_header(header, options) {\n        var newline_char = (typeof options === 'object' &&\n                            typeof options.newline_char === 'string') ?\n                            options.newline_char : '\\r?\\n';\n        var header_obj = {};\n        var headers = header.split(new RegExp(mask(newline_char)));\n        var key = '';\n        var value = '';\n\n        for (var i = 0; i < headers.length; i++) {\n          key = headers[i].replace(/^\\[([A-Z][A-Za-z]*)\\s.*\\]$/, '$1');\n          value = headers[i].replace(/^\\[[A-Za-z]+\\s\"(.*)\"\\]$/, '$1');\n          if (trim(key).length > 0) {\n            header_obj[key] = value;\n          }\n        }\n\n        return header_obj;\n      }\n\n      var newline_char = (typeof options === 'object' &&\n                          typeof options.newline_char === 'string') ?\n                          options.newline_char : '\\r?\\n';\n      var regex = new RegExp('^(\\\\[(.|' + mask(newline_char) + ')*\\\\])' +\n                             '(' + mask(newline_char) + ')*' +\n                             '1.(' + mask(newline_char) + '|.)*$', 'g');\n\n      /* get header part of the PGN file */\n      var header_string = pgn.replace(regex, '$1');\n\n      /* no info part given, begins with moves */\n      if (header_string[0] !== '[') {\n        header_string = '';\n      }\n\n      reset();\n\n      /* parse PGN header */\n      var headers = parse_pgn_header(header_string, options);\n      for (var key in headers) {\n        set_header([key, headers[key]]);\n      }\n\n      /* load the starting position indicated by [Setup '1'] and\n      * [FEN position] */\n      if (headers['SetUp'] === '1') {\n          if (!(('FEN' in headers) && load(headers['FEN']))) {\n            return false;\n          }\n      }\n\n      /* delete header to get the moves */\n      var ms = pgn.replace(header_string, '').replace(new RegExp(mask(newline_char), 'g'), ' ');\n\n      /* delete comments */\n      ms = ms.replace(/(\\{[^}]+\\})+?/g, '');\n\n      /* delete recursive annotation variations */\n      var rav_regex = /(\\([^\\(\\)]+\\))+?/g\n      while (rav_regex.test(ms)) {\n        ms = ms.replace(rav_regex, '');\n      }\n\n      /* delete move numbers */\n      ms = ms.replace(/\\d+\\.(\\.\\.)?/g, '');\n\n      /* delete ... indicating black to move */\n      ms = ms.replace(/\\.\\.\\./g, '');\n\n      /* delete numeric annotation glyphs */\n      ms = ms.replace(/\\$\\d+/g, '');\n\n      /* trim and get array of moves */\n      var moves = trim(ms).split(new RegExp(/\\s+/));\n\n      /* delete empty entries */\n      moves = moves.join(',').replace(/,,+/g, ',').split(',');\n      var move = '';\n\n      for (var half_move = 0; half_move < moves.length - 1; half_move++) {\n        move = move_from_san(moves[half_move], sloppy);\n\n        /* move not possible! (don't clear the board to examine to show the\n         * latest valid position)\n         */\n        if (move == null) {\n          return false;\n        } else {\n          make_move(move);\n        }\n      }\n\n      /* examine last move */\n      move = moves[moves.length - 1];\n      if (POSSIBLE_RESULTS.indexOf(move) > -1) {\n        if (has_keys(header) && typeof header.Result === 'undefined') {\n          set_header(['Result', move]);\n        }\n      }\n      else {\n        move = move_from_san(move, sloppy);\n        if (move == null) {\n          return false;\n        } else {\n          make_move(move);\n        }\n      }\n      return true;\n    },\n\n    header: function() {\n      return set_header(arguments);\n    },\n\n    ascii: function() {\n      return ascii();\n    },\n\n    turn: function() {\n      return turn;\n    },\n\n    move: function(move, options) {\n      /* The move function can be called with in the following parameters:\n       *\n       * .move('Nxb7')      <- where 'move' is a case-sensitive SAN string\n       *\n       * .move({ from: 'h7', <- where the 'move' is a move object (additional\n       *         to :'h8',      fields are ignored)\n       *         promotion: 'q',\n       *      })\n       */\n\n      // allow the user to specify the sloppy move parser to work around over\n      // disambiguation bugs in Fritz and Chessbase\n      var sloppy = (typeof options !== 'undefined' && 'sloppy' in options) ?\n                    options.sloppy : false;\n\n      var move_obj = null;\n\n      if (typeof move === 'string') {\n        move_obj = move_from_san(move, sloppy);\n      } else if (typeof move === 'object') {\n        var moves = generate_moves();\n\n        /* convert the pretty move object to an ugly move object */\n        for (var i = 0, len = moves.length; i < len; i++) {\n          if (move.from === algebraic(moves[i].from) &&\n              move.to === algebraic(moves[i].to) &&\n              (!('promotion' in moves[i]) ||\n              move.promotion === moves[i].promotion)) {\n            move_obj = moves[i];\n            break;\n          }\n        }\n      }\n\n      /* failed to find move */\n      if (!move_obj) {\n        return null;\n      }\n\n      /* need to make a copy of move because we can't generate SAN after the\n       * move is made\n       */\n      var pretty_move = make_pretty(move_obj);\n\n      make_move(move_obj);\n\n      return pretty_move;\n    },\n\n    undo: function() {\n      var move = undo_move();\n      return (move) ? make_pretty(move) : null;\n    },\n\n    clear: function() {\n      return clear();\n    },\n\n    put: function(piece, square) {\n      return put(piece, square);\n    },\n\n    get: function(square) {\n      return get(square);\n    },\n\n    remove: function(square) {\n      return remove(square);\n    },\n\n    perft: function(depth) {\n      return perft(depth);\n    },\n\n    square_color: function(square) {\n      if (square in SQUARES) {\n        var sq_0x88 = SQUARES[square];\n        return ((rank(sq_0x88) + file(sq_0x88)) % 2 === 0) ? 'light' : 'dark';\n      }\n\n      return null;\n    },\n\n    history: function(options) {\n      var reversed_history = [];\n      var move_history = [];\n      var verbose = (typeof options !== 'undefined' && 'verbose' in options &&\n                     options.verbose);\n\n      while (history.length > 0) {\n        reversed_history.push(undo_move());\n      }\n\n      while (reversed_history.length > 0) {\n        var move = reversed_history.pop();\n        if (verbose) {\n          move_history.push(make_pretty(move));\n        } else {\n          move_history.push(move_to_san(move));\n        }\n        make_move(move);\n      }\n\n      return move_history;\n    }\n\n  };\n};\n\n/* export Chess object if using node or any other CommonJS compatible\n * environment */\nif (typeof exports !== 'undefined') exports.Chess = Chess;\n/* export Chess object for any RequireJS compatible environment */\nif (typeof define !== 'undefined') define( function () { return Chess;  });\n"," \n import { generate } from 'pegjs'\n import { Chess } from 'chess.js'\n\nlet grammar = `{\n    function flatten(a, acc = []) {\n        for (var i = 0; i < a.length; i++) {\n            if (Array.isArray(a[i])) {\n                flatten(a[i], acc);\n            } else {\n                acc.push(a[i]);\n            }\n        }\n        return acc;\n    }\n    function make_header(hn,hv) {\n        var m = {};\n        m[hn] = hv;\n        return m;\n    }\n    function make_move(move_number, move, nags, ravs, comment) {\n        var m = {};\n        if (move_number) m.move_number = move_number;\n        if (move) m.move = move;\n        if (nags && nags.length) m.nags = nags;\n        if (ravs && ravs.length) m.ravs = ravs;\n        if (comment) m.comment = comment;\n        return m;\n    }\n    function make_rav(moves, result) {\n        return {\n            moves, \n            result\n        };\n    }\n    function make_game(h, c, m, r) {\n        h = h || [];\n        return {\n            headers: h.reduce((acc, x) => Object.assign(acc, x), {}),\n            comment: c,\n            moves: m || [],\n            result: r\n        };\n    }\n}\n\nstart = gs:(game newline*)* EOF {return gs.map(function(g) { return g[0]})}\n\ngame = \n    whitespace*\n    h:headers? \n    c:comment? \n    whitespace* \n    mr:(m:movetext whitespace+ r:result {return [m, r]} / r:result {return [null, r]}) \n    whitespace* {return make_game(h, c, mr[0], mr[1])}\n\nEOF = !.\ndouble_quote = '\"'\nstring = double_quote str:[^\"]* double_quote {return str.join('')}\ninteger = a:[1-9] b:[0-9]* {return parseInt(a+b.join(''), 10)}\nsymbol = chars:[A-Za-z0-9_-]+ {return chars.join('')}\nws = ' ' / '\\\\f' / '\\\\t'\nwhitespace = ws / newline\nnewline = '\\\\n'\n\nheader = '[' hn:symbol ws+ hv:string ']' whitespace* { return make_header(hn,hv) }\nheaders = hs:header+ {return hs}\n\npiece = [NKQRB]\nrank = [a-h]\nfile = [1-8]\ncheck = \"+\"\ncheckmate = \"#\"\ncapture = \"x\"\nperiod = \".\"\nresult = \"1-0\" / \"0-1\" / \"*\" / \"1/2-1/2\"\nmove_number = mn:integer period? (period period)? {return mn}\nsquare = r:rank f:file {return r+f}\npromotion = \"=\" [QRBN]\nnag = chars:(\"$\" integer) {return chars.join('')}\nnag_alts = \"!!\" / \"??\" / \"!?\" / \"?!\" / \"!\" / \"?\"\ncontinuation = period period period\n\ncomment_chars = [^}]\ncomment = \"{\" cc:comment_chars* \"}\" {return cc.join('');}\n\npawn_half_move = (r:rank c:capture)? square promotion?\npiece_half_move = piece capture? square\npiece_disambiguation_half_move = piece (rank / file) capture? square\ncastle_half_move = (\"O-O-O\" / \"O-O\")\n\nhalf_move = m:(continuation? \n    (castle_half_move / \n     piece_disambiguation_half_move / \n     piece_half_move / \n     pawn_half_move) \n    (check / checkmate)? \n    nag_alts?) {return flatten(m).join('');}\n\nmove = mn:move_number? \n       whitespace*\n       m:half_move \n       nags:(whitespace+ n:nag {return n})*\n       com:(whitespace+ c2:comment {return c2})?\n       (whitespace+ comment)*\n       ravs:(whitespace+ r:rav {return r})*\n       {return make_move(mn, m, nags, ravs, com)}\n\nmovetext = first:move rest:(whitespace+ move)* {return first ? [first].concat(rest.map(function(m) {return m[1]})) : []}\n\nrav = \"(\" \n    whitespace* \n    m:movetext \n    whitespace* \n    r:result?\n    whitespace*\n    \")\" {return make_rav(m, r)}\n\n`;\n\nlet parser = generate(grammar)\n\n/*\n    Returns a node of the form \n    { color: 'w', from: 'g2', to: 'g3', flags: 'n', piece: 'p', san: 'g3' \n        move_number,\n        comment,\n        fen,\n        idx,  // unique index\n        parent,\n        children:[], \n        played: []  //(for trainer)\n    }\n\n */\nexport const  parsepgn = (pgn) => {\n    let r1 = parser.parse(pgn)[0]  // simple array representation\n    console.log(\"Base structure:\", r1)\n    // pprint(r1.moves, \"\")\n    let game = Chess()\n    return parseOneGame(r1, game)\n}\n\nfunction parseOneGame(baseGame, game) {\n    game.reset()\n    let root = { fen: game.fen(), children: [], played: new Set(), move_number:0}\n    if (baseGame.moves.length > 0) {\n        convert(baseGame.moves.slice(), game, root)\n    }\n    return root\n}\n\nfunction convert(moves, game, parent) {\n    // console.log(\"Entering\" + moves[0])\n    let cmove = moves[0]\n    let movestr = cmove.move.replace(/\\./g, '')\n    let node = game.move(movestr)\n    // -> { color: 'w', from: 'g2', to: 'g3', flags: 'n', piece: 'p', san: 'g3' }\n    if (node == null) {\n        console.log(\"Unknown move: \", cmove, parent.san)\n        return;\n    }\n    node.fen = game.fen()\n    addNode(node, parent, cmove.comment, cmove.nags, cmove.move_number)\n    if (moves.length > 1) {\n        // console.log(moves.length, \"making rec call\")\n        moves.shift()\n        convert(moves, game, node)\n        if (cmove.ravs) {\n            cmove.ravs.forEach(rav => {\n                game.load(parent.fen)\n                convert(rav.moves.slice(), game, parent)\n            })\n        }\n    }\n\n\n}\n\nexport const addNode = (node, parent, comment, nags, moveNum) => {\n    node.children = []\n    node.played = new Set()\n    node.move_number = moveNum ? moveNum : \n        (parent == null ? 1 :\n            (node.color == 'b' ? parent.move_number : \n                parent.move_number + 1))\n    addCommentAndNags(node, comment, nags)\n    node.parent = parent\n    parent.children.push(node)\n}\n\nexport const deleteNode = (node) => {\n    if (node.parent) {\n        let index = node.parent.children.indexOf(node);\n        if (index !== -1) {\n            node.parent.children.splice(index, 1);\n        }\n    }\n}\n\nexport const promoteNode = (node) => {\n    if (node.parent) {\n        let index = node.parent.children.indexOf(node);\n        if (index !== -1) {\n            node.parent.children.splice(index, 1);\n        }\n        node.parent.children.unshift(node)\n    }\n}\n\nexport const addCommentAndNags = (node, comment, nags) => {\n    if (comment && comment.indexOf('[%') < 0) {\n        node.comment = comment\n    }\n    if (nags) {\n        node.nags = nags\n    }\n}\n\n\nexport const updatePlayedStatus = (node) => {\n    if (allChildrenPlayed(node)) {\n        if (node.parent) {\n            node.parent.played.add(node)\n            updatePlayedStatus(node.parent)\n        }\n    }\n}\n\nexport const allChildrenPlayed = (node) => {\n    for (let i = 0; i < node.children.length; i++) {\n        if (!node.played.has(node.children[i])) {\n            return false\n        }\n    }\n    return true\n}\n\nexport const  parseMultiple = (multipgn) => {\n    let games = parser.parse(multipgn)\n    let game = Chess()\n    let root = parseOneGame(games[0], game)\n    for (let i = 1; i < games.length; i++) {\n        let newRoot = parseOneGame(games[i], game)\n        mergeTrees(root, newRoot)\n    }\n    return root\n}\n\nexport const mergeTrees = (node1, node2) => {\n    console.log(node1.san, node2.san)\n    if (node1.fen === node2.fen) {\n        for (let child2 of node2.children) {\n            let matching = node1.children.filter(child => child2.fen === child.fen)\n            if (matching.length === 0) {\n                node1.children.push(child2)\n            } else {\n                mergeTrees(matching[0], child2)\n            }\n        }\n    } else {\n        throw \"Positions do not match\"\n    }\n}\n\nexport const findNext = (current, from, to) => {\n    for (var i = 0; i < current.children.length; i++) {\n        let node = current.children[i];\n        if (node.from == from && node.to == to) {\n            return node\n        }\n    }\n    return null\n}\n\n\n\n\n","\n// move made   ( orig, dest, capturedPiece )\n\n// current changed\n\nexport const GAME_CHANGED = 'gameChanged'\nexport const gameChangedAction = (root, engineColor) => ({\n    type: GAME_CHANGED, root, engineColor\n})\n\nexport const POSITION_CHANGED = 'positionChanged'\n\nexport const positionChangedAction = (node) => ({type: POSITION_CHANGED, node })\n    \nexport const PLAYER_MADE_MOVE = 'playerMadeMove'\n\nexport const playerMadeMoveAction = (newCurrent) => ({\n    type: PLAYER_MADE_MOVE, newCurrent\n})\n\n\nexport const HIDE_PGN_CHANGED = 'hidePgnChanged'\n\nexport const hidePgnChangedAction = (checked) => ({\n    type: HIDE_PGN_CHANGED, checked\n})\n\nexport const AUTOPLAY_CHANGED = 'autoPlayChanged'\n\nexport const autoPlayChangedAction = (checked) => ({\n    type: AUTOPLAY_CHANGED, checked\n})\n\nexport const HINT_CLICKED = 'hintClicked'\nexport const hintClickedAction = () => ({\n    type: HINT_CLICKED\n})\n\nexport const BOARD_FLIPPED = 'boardFlipped'\n\nexport const boardFlippedAction = (checked) => ({\n    type: BOARD_FLIPPED, checked\n})\n","\nimport Chessground from '../assets/libs/chessground'\nimport { updatePlayedStatus } from '../utils/pgnutils'\nimport {playerMadeMoveAction} from '../actions/game-actions'\n\n\n\nexport const init = (boardId, nextFunc, store) => {\n\n    let ground\n\n    let options = {\n        resizable: true,\n        // orientation: 'black',\n        // fen: '2r3k1/pp2Qpbp/4b1p1/3p4/3n1PP1/2N4P/Pq6/R2K1B1R w -'\n        events: {\n            // change: onchange, // called after the situation changes on the board\n            // called after a piece has been moved.\n            // capturedPiece is undefined or like {color: 'white'; 'role': 'queen'}\n            move: (orig, dest, capturedPiece) => onMove(orig, dest, capturedPiece, nextFunc, store),\n            // dropNewPiece: onDropNewPiece,\n            // select: onSelect, // called when a square is selected\n            // insert: onInsert // when the board DOM has been (re)inserted\n        }\n        \n    }\n    \n    resizeBoard()\n\n    ground = Chessground(document.getElementById(boardId), options)\n    store.subscribe(() => {\n        // console.log(store.getState())\n        let { current, engineColor, hint} = store.getState()\n        let options = {\n            fen: current.fen,\n            orientation: engineColor === 'white' ? 'black' : 'white'\n        }\n        \n        window.setTimeout(() => {\n            ground.set(options)\n            if (hint) {\n                let shapes = getHintShapes(current)\n                ground.setShapes(shapes)\n            }\n        }, 100)\n    })\n    return ground\n}\n\nfunction getHintShapes(current) {\n    let arr = []\n    current.children.forEach(child => {\n        arr.push({\n            orig: child.from,\n            dest: child.to,\n            brush: 'red'\n        })\n    })\n    return arr\n    \n    \n}\n\nfunction onMove(orig, dest, capturedPiece, nextFunc, store) {\n    let {current} = store.getState()\n    let next = nextFunc(orig, dest)\n\n    store.dispatch(playerMadeMoveAction(next))\n\n}\n\n\nfunction resizeBoard() {\n    var boardElem = document.getElementById(\"dirty\")\n    var parentElem = boardElem.parentNode\n    var rect = parentElem.getBoundingClientRect()\n    let maxw = rect.width - 10\n    let w8 = maxw - maxw % 8 \n    boardElem.style.width = w8 + \"px\"\n    boardElem.style.height = w8 + \"px\"\n}\n\nexport default {init}\n","let test_game = `\n[White \"me\"]\n[Black \"you\"]\n1. e4 e5 2. Nf3 Nc6 3. Bc4 Bc5 \n(3. ...Nf6 {is the two knights}) \n4. b4 Bxb4 5. c3 Ba5 6. d4 exd4 7. O-O Nge7 $1 *`;\n\nlet budapest_gambit =`\n[Event \"?\"]\n[Site \"?\"]\n[Date \"????.??.??\"]\n[Round \"?\"]\n[White \"Budapest\"]\n[Black \"Gambit\"]\n[Result \"?\"]\n\n 1.d4 Nf6 2.c4 e5 3.dxe5\n     ( 3.d5 Bc5 4.Bg5 Bxf2+ 5.Kxf2 Ne4+ {This is a mistake, with precise play white can get a better position.}\n         ( 5...Ng4+ 6.Kf3 Qxg5)\n     6.Ke3 Nxg5 7.h4 {The knight is trapped.})\n 3...Ng4\n     ( 3...Ne4 4.Qc2 Bb4+ 5.Nd2 d6 6.exd6\n         ( 6.Qxe4 O-O)\n     6...Bf5 7.Qa4+ Nc6 8.a3 Nc5 9.Qb5 a6 10.dxc7 Qxc7 11.axb4 axb5 12.Rxa8+ Bc8 13.bxc5 O-O 14.cxb5 Nb4 15.c6 {Better\n    for white.})\n 4.Nf3\n     ( 4.Qd4 d6 5.exd6 Nc6\n         ( 5...Bxd6 6.Qxg7\n             ( 6.Qe4+ Be6 7.Qxb7 Nd7 {Black is down two pawns, but is much better developed} 8.e3 O-O 9.Nf3 Nc5 10.Qb5\n            Rb8 11.Qc6\n                 ( 11.Qa5 Nd3+ 12.Bxd3\n                     ( 12.Ke2 Nxc1+ 13.Kd1 Nxf2+)\n                 12...Bb4+ {Losing the queen})\n             11...Rb6 {Traps the queen})\n\n             ( 6.Nf3 O-O 7.Nc3\n                 ( 7.h3 Nc6 8.Qe4 Re8 9.Qc2 Nb4 10.Qc3 Nd3+ 11.Qxd3\n                     ( 11.Kd2 Bb4)\n                 11...Bb4+ {Any blocking move can be met by capturing the queen.} 12.Bd2\n                     ( 12.Nc3 Qxd3)\n\n                     ( 12.Kd1 Nxf2+)\n                 12...Qxd3 13.Bxb4 Qc2)\n             7...Nc6 8.Qd1 Bc5 9.Qxd8\n                 ( 9.e3 Qxd1+ 10.Nxd1 Nb4 {Attacking c2} 11.Rb1\n                     ( 11.Ke2 Bf5)\n\n                     ( 11.Kd2 Rd8+ 12.Nd4 Bxd4 13.exd4 Rxd4+)\n                 11...Bf5)\n             9...Bxf2+ 10.Kd1 Rxd8+)\n\n             ( 6.h3 Nc6)\n         6...Be5 7.Qg5 Qxg5 8.Bxg5 Bxb2 {Black is a rook ahead.})\n     6.Qe4+ Be6 7.dxc7 Qd1+ 8.Kxd1 Nxf2+ 9.Ke1 Nxe4 {Black is better})\n\n     ( 4.Qd5 Nc6 5.f4\n         ( 5.Nf3 d6 6.Bg5\n             ( 6.exd6 Be6 7.Qd1\n                 ( 7.Qe4 Qxd6 8.Bf4 Qd1+ 9.Kxd1 Nxf2+)\n\n                 ( 7.Qd3 Nb4 8.dxc7 Nxd3+)\n             7...Bxd6 8.h3 Nxf2 9.Kxf2 Bg3+ 10.Kxg3 Qxd1)\n         6...Be7 7.Bxe7 Nxe7 8.Qe4 dxe5 9.Nxe5 Qd1+ 10.Kxd1 Nxf2+)\n     5...Nb4 6.Qe4 {Mistake by white} 6...Bc5 7.e3 Bxe3 8.Bxe3 Nxe3 9.Qxe3 Nc2+)\n\n     ( 4.e6 Bb4+ 5.Bd2 Qf6 6.Nf3 Qxb2 7.Bxb4 Qxb4+)\n\n     ( 4.Bf4 Bb4+ 5.Nd2 d6 6.exd6 Qf6)\n 4...Nc6\n     ( 4...Bc5 {This move forces white to play e3, blocking his dark square bishop. Black can then continue to go\n    after the pawn} 5.e3 Nc6 6.Qd5\n         ( 6.Be2 {White gives the pawn back. How should black play for a good middle game?} 6...Ngxe5 7.Nxe5 Nxe5 8.a3\n        a5 {Stopping b4} 9.O-O O-O 10.Nc3 Re8 {Have the option for the dark square bishop to fall back to f8} 11.b3 Ra6\n         12.Bb2 Rh6 13.Nd5 d6 14.b4 {At this point black can launch an attack.} 14...Qh4 15.h3 Bxh3 16.g3 Qe4 17.f3\n        Bxe3+ 18.Nxe3 Qxe3+ 19.Rf2 Qg5 20.g4 Qh4 {With mate to follow soon.})\n     6...Qe7)\n 5.Bf4 Bb4+ 6.Nbd2 Qe7 7.a3 Ngxe5 8.axb4\n     ( 8.Nxe5 Nxe5 9.Bxe5 Bxd2+ 10.Qxd2 Qxe5 {With a normal game})\n 8...Nd3# {Checkmate} *`;\n\n let scotch_gambit =`\n [White \"me\"]\n[Black \"you\"]\n 1.e4 e5 2.Nf3 Nc6 3.d4 exd4 4.Bc4  {  If you had seen this, i hope you enjoy the scotch gambit. And if you like this and find it useful, pls leave a like and share this study. If it goes well i would do another one, i hope you enjoy this!  } Bc5  {  Black protects the pawn  } \n (Bb4+ 5.c3 dxc3 6.bxc3 Bc5  {  we can attack the same way  } \n   (6...Ba5 7.O-O \n  ) \n   (6...Bd6 7.O-O \n  ) \n   (6...Bf8  {  blunder, black failed to develop pieces  } \n  ) 7.Bxf7+ Kxf7 8.Qd5+  {  the king would be chased all over  } \n) \n (Be7 5.c3 \n   (5.O-O  {  white is ready to develop pieces  } \n  ) 5...dxc3 \n   (5...Nf6 6.e5 Ne4 \n     (6...d5  {  this is a blunder  } 7.exf6 dxc4 8.fxe7 \n    ) 7.Bd5 \n  ) 6.Qd5 Nh6  {  best way to defend  } 7.Bxh6 O-O  {  best move for black yet losing material  } 8.Nxc3 gxh6 9.Qh5  {  the bishop can be sacrificed for aggressive advantage, black can't hold on for long  } \n) \n (Nf6 5.e5 Ng4  {  the strongest defence for black  } \n   (5...Ne4 \n  ) 6.O-O Ngxe5 7.Nxe5 Nxe5 8.Re1  {  this pins the knight  } d6  {  protects  } 9.f4  {  the knight is now lost, leading to material advantage  } \n) 5.Ng5  {  Attacks f7  } \n (5.c3 dxc3 \n   (5...Nf6 6.e5 Ng8  {  causing lost of momentum  } \n  ) 6.Bxf7+ Kf8 \n   (6...Kxf7 7.Qd5+ Kg6  {  worst move  } \n     (7...Kf6 8.Bg5+ Kg6 9.Qf5+ Kh5 10.g4# \n    ) \n     (7...Ke8  {  safest move  } 8.Qxc5 \n    ) 8.Qf5# \n  ) 7.Nxc3  {  White has better development  } \n) 5...Nh6 6.Qh5  {  Aggressive but easily stabilised  } * `\n\n// let gamemap = {\n//     \"Select a game\" : {\n//         'pgn': '[White \"me\"]\\n[Black \"you\"]\\n *',\n//         'engineColor': 'black'\n//     },\n//     \"Budapest gambit\" : {\n//         'pgn': budapest_gambit,\n//         'engineColor': 'white'\n//     },\n//     \"Scotch gambit\" : {\n//         'pgn': scotch_gambit,\n//         'engineColor': 'black'\n//     },\n//     \"Test game\": {\n//         'pgn': test_game,\n//         'engineColor': 'black'\n//     }\n// }\n\nlet gamemap = {\n    \"Select a game\" : {\n        'pgn': 'empty-game.pgn',\n        'engineColor': 'black'\n    },\n    \"Budapest gambit\" : {\n        'pgn': 'budapest-gambit.pgn',\n        'engineColor': 'white'\n    },\n    \"Scotch gambit\" : {\n        'pgn': 'scotch-gambit.pgn',\n        'engineColor': 'black'\n    },\n    \"Test game\": {\n        'pgn': 'test-game.pgn',\n        'engineColor': 'black'\n    }\n}\nexports.gamemap = gamemap\n","\nexport const configureButton = (id, onClick)  => {\n    document.getElementById(id).addEventListener(\"click\", onClick)\n}\n\nexport const copyToClipboard = (text) => {\n    navigator.clipboard.writeText(text).then(function () {\n        console.log('Async: Copying to clipboard was successful!');\n    }, function (err) {\n        console.error('Async: Could not copy text: ', err);\n    });\n}","export default function symbolObservablePonyfill(root) {\n\tvar result;\n\tvar Symbol = root.Symbol;\n\n\tif (typeof Symbol === 'function') {\n\t\tif (Symbol.observable) {\n\t\t\tresult = Symbol.observable;\n\t\t} else {\n\t\t\tresult = Symbol('observable');\n\t\t\tSymbol.observable = result;\n\t\t}\n\t} else {\n\t\tresult = '@@observable';\n\t}\n\n\treturn result;\n};\n","/* global window */\nimport ponyfill from './ponyfill.js';\n\nvar root;\n\nif (typeof self !== 'undefined') {\n  root = self;\n} else if (typeof window !== 'undefined') {\n  root = window;\n} else if (typeof global !== 'undefined') {\n  root = global;\n} else if (typeof module !== 'undefined') {\n  root = module;\n} else {\n  root = Function('return this')();\n}\n\nvar result = ponyfill(root);\nexport default result;\n","import $$observable from 'symbol-observable';\n\n/**\n * These are private action types reserved by Redux.\n * For any unknown actions, you must return the current state.\n * If the current state is undefined, you must return the initial state.\n * Do not reference these action types directly in your code.\n */\nvar randomString = function randomString() {\n  return Math.random().toString(36).substring(7).split('').join('.');\n};\n\nvar ActionTypes = {\n  INIT: \"@@redux/INIT\" + randomString(),\n  REPLACE: \"@@redux/REPLACE\" + randomString(),\n  PROBE_UNKNOWN_ACTION: function PROBE_UNKNOWN_ACTION() {\n    return \"@@redux/PROBE_UNKNOWN_ACTION\" + randomString();\n  }\n};\n\n/**\n * @param {any} obj The object to inspect.\n * @returns {boolean} True if the argument appears to be a plain object.\n */\nfunction isPlainObject(obj) {\n  if (typeof obj !== 'object' || obj === null) return false;\n  var proto = obj;\n\n  while (Object.getPrototypeOf(proto) !== null) {\n    proto = Object.getPrototypeOf(proto);\n  }\n\n  return Object.getPrototypeOf(obj) === proto;\n}\n\n/**\n * Creates a Redux store that holds the state tree.\n * The only way to change the data in the store is to call `dispatch()` on it.\n *\n * There should only be a single store in your app. To specify how different\n * parts of the state tree respond to actions, you may combine several reducers\n * into a single reducer function by using `combineReducers`.\n *\n * @param {Function} reducer A function that returns the next state tree, given\n * the current state tree and the action to handle.\n *\n * @param {any} [preloadedState] The initial state. You may optionally specify it\n * to hydrate the state from the server in universal apps, or to restore a\n * previously serialized user session.\n * If you use `combineReducers` to produce the root reducer function, this must be\n * an object with the same shape as `combineReducers` keys.\n *\n * @param {Function} [enhancer] The store enhancer. You may optionally specify it\n * to enhance the store with third-party capabilities such as middleware,\n * time travel, persistence, etc. The only store enhancer that ships with Redux\n * is `applyMiddleware()`.\n *\n * @returns {Store} A Redux store that lets you read the state, dispatch actions\n * and subscribe to changes.\n */\n\nfunction createStore(reducer, preloadedState, enhancer) {\n  var _ref2;\n\n  if (typeof preloadedState === 'function' && typeof enhancer === 'function' || typeof enhancer === 'function' && typeof arguments[3] === 'function') {\n    throw new Error('It looks like you are passing several store enhancers to ' + 'createStore(). This is not supported. Instead, compose them ' + 'together to a single function.');\n  }\n\n  if (typeof preloadedState === 'function' && typeof enhancer === 'undefined') {\n    enhancer = preloadedState;\n    preloadedState = undefined;\n  }\n\n  if (typeof enhancer !== 'undefined') {\n    if (typeof enhancer !== 'function') {\n      throw new Error('Expected the enhancer to be a function.');\n    }\n\n    return enhancer(createStore)(reducer, preloadedState);\n  }\n\n  if (typeof reducer !== 'function') {\n    throw new Error('Expected the reducer to be a function.');\n  }\n\n  var currentReducer = reducer;\n  var currentState = preloadedState;\n  var currentListeners = [];\n  var nextListeners = currentListeners;\n  var isDispatching = false;\n  /**\n   * This makes a shallow copy of currentListeners so we can use\n   * nextListeners as a temporary list while dispatching.\n   *\n   * This prevents any bugs around consumers calling\n   * subscribe/unsubscribe in the middle of a dispatch.\n   */\n\n  function ensureCanMutateNextListeners() {\n    if (nextListeners === currentListeners) {\n      nextListeners = currentListeners.slice();\n    }\n  }\n  /**\n   * Reads the state tree managed by the store.\n   *\n   * @returns {any} The current state tree of your application.\n   */\n\n\n  function getState() {\n    if (isDispatching) {\n      throw new Error('You may not call store.getState() while the reducer is executing. ' + 'The reducer has already received the state as an argument. ' + 'Pass it down from the top reducer instead of reading it from the store.');\n    }\n\n    return currentState;\n  }\n  /**\n   * Adds a change listener. It will be called any time an action is dispatched,\n   * and some part of the state tree may potentially have changed. You may then\n   * call `getState()` to read the current state tree inside the callback.\n   *\n   * You may call `dispatch()` from a change listener, with the following\n   * caveats:\n   *\n   * 1. The subscriptions are snapshotted just before every `dispatch()` call.\n   * If you subscribe or unsubscribe while the listeners are being invoked, this\n   * will not have any effect on the `dispatch()` that is currently in progress.\n   * However, the next `dispatch()` call, whether nested or not, will use a more\n   * recent snapshot of the subscription list.\n   *\n   * 2. The listener should not expect to see all state changes, as the state\n   * might have been updated multiple times during a nested `dispatch()` before\n   * the listener is called. It is, however, guaranteed that all subscribers\n   * registered before the `dispatch()` started will be called with the latest\n   * state by the time it exits.\n   *\n   * @param {Function} listener A callback to be invoked on every dispatch.\n   * @returns {Function} A function to remove this change listener.\n   */\n\n\n  function subscribe(listener) {\n    if (typeof listener !== 'function') {\n      throw new Error('Expected the listener to be a function.');\n    }\n\n    if (isDispatching) {\n      throw new Error('You may not call store.subscribe() while the reducer is executing. ' + 'If you would like to be notified after the store has been updated, subscribe from a ' + 'component and invoke store.getState() in the callback to access the latest state. ' + 'See https://redux.js.org/api-reference/store#subscribelistener for more details.');\n    }\n\n    var isSubscribed = true;\n    ensureCanMutateNextListeners();\n    nextListeners.push(listener);\n    return function unsubscribe() {\n      if (!isSubscribed) {\n        return;\n      }\n\n      if (isDispatching) {\n        throw new Error('You may not unsubscribe from a store listener while the reducer is executing. ' + 'See https://redux.js.org/api-reference/store#subscribelistener for more details.');\n      }\n\n      isSubscribed = false;\n      ensureCanMutateNextListeners();\n      var index = nextListeners.indexOf(listener);\n      nextListeners.splice(index, 1);\n      currentListeners = null;\n    };\n  }\n  /**\n   * Dispatches an action. It is the only way to trigger a state change.\n   *\n   * The `reducer` function, used to create the store, will be called with the\n   * current state tree and the given `action`. Its return value will\n   * be considered the **next** state of the tree, and the change listeners\n   * will be notified.\n   *\n   * The base implementation only supports plain object actions. If you want to\n   * dispatch a Promise, an Observable, a thunk, or something else, you need to\n   * wrap your store creating function into the corresponding middleware. For\n   * example, see the documentation for the `redux-thunk` package. Even the\n   * middleware will eventually dispatch plain object actions using this method.\n   *\n   * @param {Object} action A plain object representing “what changed”. It is\n   * a good idea to keep actions serializable so you can record and replay user\n   * sessions, or use the time travelling `redux-devtools`. An action must have\n   * a `type` property which may not be `undefined`. It is a good idea to use\n   * string constants for action types.\n   *\n   * @returns {Object} For convenience, the same action object you dispatched.\n   *\n   * Note that, if you use a custom middleware, it may wrap `dispatch()` to\n   * return something else (for example, a Promise you can await).\n   */\n\n\n  function dispatch(action) {\n    if (!isPlainObject(action)) {\n      throw new Error('Actions must be plain objects. ' + 'Use custom middleware for async actions.');\n    }\n\n    if (typeof action.type === 'undefined') {\n      throw new Error('Actions may not have an undefined \"type\" property. ' + 'Have you misspelled a constant?');\n    }\n\n    if (isDispatching) {\n      throw new Error('Reducers may not dispatch actions.');\n    }\n\n    try {\n      isDispatching = true;\n      currentState = currentReducer(currentState, action);\n    } finally {\n      isDispatching = false;\n    }\n\n    var listeners = currentListeners = nextListeners;\n\n    for (var i = 0; i < listeners.length; i++) {\n      var listener = listeners[i];\n      listener();\n    }\n\n    return action;\n  }\n  /**\n   * Replaces the reducer currently used by the store to calculate the state.\n   *\n   * You might need this if your app implements code splitting and you want to\n   * load some of the reducers dynamically. You might also need this if you\n   * implement a hot reloading mechanism for Redux.\n   *\n   * @param {Function} nextReducer The reducer for the store to use instead.\n   * @returns {void}\n   */\n\n\n  function replaceReducer(nextReducer) {\n    if (typeof nextReducer !== 'function') {\n      throw new Error('Expected the nextReducer to be a function.');\n    }\n\n    currentReducer = nextReducer; // This action has a similiar effect to ActionTypes.INIT.\n    // Any reducers that existed in both the new and old rootReducer\n    // will receive the previous state. This effectively populates\n    // the new state tree with any relevant data from the old one.\n\n    dispatch({\n      type: ActionTypes.REPLACE\n    });\n  }\n  /**\n   * Interoperability point for observable/reactive libraries.\n   * @returns {observable} A minimal observable of state changes.\n   * For more information, see the observable proposal:\n   * https://github.com/tc39/proposal-observable\n   */\n\n\n  function observable() {\n    var _ref;\n\n    var outerSubscribe = subscribe;\n    return _ref = {\n      /**\n       * The minimal observable subscription method.\n       * @param {Object} observer Any object that can be used as an observer.\n       * The observer object should have a `next` method.\n       * @returns {subscription} An object with an `unsubscribe` method that can\n       * be used to unsubscribe the observable from the store, and prevent further\n       * emission of values from the observable.\n       */\n      subscribe: function subscribe(observer) {\n        if (typeof observer !== 'object' || observer === null) {\n          throw new TypeError('Expected the observer to be an object.');\n        }\n\n        function observeState() {\n          if (observer.next) {\n            observer.next(getState());\n          }\n        }\n\n        observeState();\n        var unsubscribe = outerSubscribe(observeState);\n        return {\n          unsubscribe: unsubscribe\n        };\n      }\n    }, _ref[$$observable] = function () {\n      return this;\n    }, _ref;\n  } // When a store is created, an \"INIT\" action is dispatched so that every\n  // reducer returns their initial state. This effectively populates\n  // the initial state tree.\n\n\n  dispatch({\n    type: ActionTypes.INIT\n  });\n  return _ref2 = {\n    dispatch: dispatch,\n    subscribe: subscribe,\n    getState: getState,\n    replaceReducer: replaceReducer\n  }, _ref2[$$observable] = observable, _ref2;\n}\n\n/**\n * Prints a warning in the console if it exists.\n *\n * @param {String} message The warning message.\n * @returns {void}\n */\nfunction warning(message) {\n  /* eslint-disable no-console */\n  if (typeof console !== 'undefined' && typeof console.error === 'function') {\n    console.error(message);\n  }\n  /* eslint-enable no-console */\n\n\n  try {\n    // This error was thrown as a convenience so that if you enable\n    // \"break on all exceptions\" in your console,\n    // it would pause the execution at this line.\n    throw new Error(message);\n  } catch (e) {} // eslint-disable-line no-empty\n\n}\n\nfunction getUndefinedStateErrorMessage(key, action) {\n  var actionType = action && action.type;\n  var actionDescription = actionType && \"action \\\"\" + String(actionType) + \"\\\"\" || 'an action';\n  return \"Given \" + actionDescription + \", reducer \\\"\" + key + \"\\\" returned undefined. \" + \"To ignore an action, you must explicitly return the previous state. \" + \"If you want this reducer to hold no value, you can return null instead of undefined.\";\n}\n\nfunction getUnexpectedStateShapeWarningMessage(inputState, reducers, action, unexpectedKeyCache) {\n  var reducerKeys = Object.keys(reducers);\n  var argumentName = action && action.type === ActionTypes.INIT ? 'preloadedState argument passed to createStore' : 'previous state received by the reducer';\n\n  if (reducerKeys.length === 0) {\n    return 'Store does not have a valid reducer. Make sure the argument passed ' + 'to combineReducers is an object whose values are reducers.';\n  }\n\n  if (!isPlainObject(inputState)) {\n    return \"The \" + argumentName + \" has unexpected type of \\\"\" + {}.toString.call(inputState).match(/\\s([a-z|A-Z]+)/)[1] + \"\\\". Expected argument to be an object with the following \" + (\"keys: \\\"\" + reducerKeys.join('\", \"') + \"\\\"\");\n  }\n\n  var unexpectedKeys = Object.keys(inputState).filter(function (key) {\n    return !reducers.hasOwnProperty(key) && !unexpectedKeyCache[key];\n  });\n  unexpectedKeys.forEach(function (key) {\n    unexpectedKeyCache[key] = true;\n  });\n  if (action && action.type === ActionTypes.REPLACE) return;\n\n  if (unexpectedKeys.length > 0) {\n    return \"Unexpected \" + (unexpectedKeys.length > 1 ? 'keys' : 'key') + \" \" + (\"\\\"\" + unexpectedKeys.join('\", \"') + \"\\\" found in \" + argumentName + \". \") + \"Expected to find one of the known reducer keys instead: \" + (\"\\\"\" + reducerKeys.join('\", \"') + \"\\\". Unexpected keys will be ignored.\");\n  }\n}\n\nfunction assertReducerShape(reducers) {\n  Object.keys(reducers).forEach(function (key) {\n    var reducer = reducers[key];\n    var initialState = reducer(undefined, {\n      type: ActionTypes.INIT\n    });\n\n    if (typeof initialState === 'undefined') {\n      throw new Error(\"Reducer \\\"\" + key + \"\\\" returned undefined during initialization. \" + \"If the state passed to the reducer is undefined, you must \" + \"explicitly return the initial state. The initial state may \" + \"not be undefined. If you don't want to set a value for this reducer, \" + \"you can use null instead of undefined.\");\n    }\n\n    if (typeof reducer(undefined, {\n      type: ActionTypes.PROBE_UNKNOWN_ACTION()\n    }) === 'undefined') {\n      throw new Error(\"Reducer \\\"\" + key + \"\\\" returned undefined when probed with a random type. \" + (\"Don't try to handle \" + ActionTypes.INIT + \" or other actions in \\\"redux/*\\\" \") + \"namespace. They are considered private. Instead, you must return the \" + \"current state for any unknown actions, unless it is undefined, \" + \"in which case you must return the initial state, regardless of the \" + \"action type. The initial state may not be undefined, but can be null.\");\n    }\n  });\n}\n/**\n * Turns an object whose values are different reducer functions, into a single\n * reducer function. It will call every child reducer, and gather their results\n * into a single state object, whose keys correspond to the keys of the passed\n * reducer functions.\n *\n * @param {Object} reducers An object whose values correspond to different\n * reducer functions that need to be combined into one. One handy way to obtain\n * it is to use ES6 `import * as reducers` syntax. The reducers may never return\n * undefined for any action. Instead, they should return their initial state\n * if the state passed to them was undefined, and the current state for any\n * unrecognized action.\n *\n * @returns {Function} A reducer function that invokes every reducer inside the\n * passed object, and builds a state object with the same shape.\n */\n\n\nfunction combineReducers(reducers) {\n  var reducerKeys = Object.keys(reducers);\n  var finalReducers = {};\n\n  for (var i = 0; i < reducerKeys.length; i++) {\n    var key = reducerKeys[i];\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof reducers[key] === 'undefined') {\n        warning(\"No reducer provided for key \\\"\" + key + \"\\\"\");\n      }\n    }\n\n    if (typeof reducers[key] === 'function') {\n      finalReducers[key] = reducers[key];\n    }\n  }\n\n  var finalReducerKeys = Object.keys(finalReducers); // This is used to make sure we don't warn about the same\n  // keys multiple times.\n\n  var unexpectedKeyCache;\n\n  if (process.env.NODE_ENV !== 'production') {\n    unexpectedKeyCache = {};\n  }\n\n  var shapeAssertionError;\n\n  try {\n    assertReducerShape(finalReducers);\n  } catch (e) {\n    shapeAssertionError = e;\n  }\n\n  return function combination(state, action) {\n    if (state === void 0) {\n      state = {};\n    }\n\n    if (shapeAssertionError) {\n      throw shapeAssertionError;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      var warningMessage = getUnexpectedStateShapeWarningMessage(state, finalReducers, action, unexpectedKeyCache);\n\n      if (warningMessage) {\n        warning(warningMessage);\n      }\n    }\n\n    var hasChanged = false;\n    var nextState = {};\n\n    for (var _i = 0; _i < finalReducerKeys.length; _i++) {\n      var _key = finalReducerKeys[_i];\n      var reducer = finalReducers[_key];\n      var previousStateForKey = state[_key];\n      var nextStateForKey = reducer(previousStateForKey, action);\n\n      if (typeof nextStateForKey === 'undefined') {\n        var errorMessage = getUndefinedStateErrorMessage(_key, action);\n        throw new Error(errorMessage);\n      }\n\n      nextState[_key] = nextStateForKey;\n      hasChanged = hasChanged || nextStateForKey !== previousStateForKey;\n    }\n\n    hasChanged = hasChanged || finalReducerKeys.length !== Object.keys(state).length;\n    return hasChanged ? nextState : state;\n  };\n}\n\nfunction bindActionCreator(actionCreator, dispatch) {\n  return function () {\n    return dispatch(actionCreator.apply(this, arguments));\n  };\n}\n/**\n * Turns an object whose values are action creators, into an object with the\n * same keys, but with every function wrapped into a `dispatch` call so they\n * may be invoked directly. This is just a convenience method, as you can call\n * `store.dispatch(MyActionCreators.doSomething())` yourself just fine.\n *\n * For convenience, you can also pass an action creator as the first argument,\n * and get a dispatch wrapped function in return.\n *\n * @param {Function|Object} actionCreators An object whose values are action\n * creator functions. One handy way to obtain it is to use ES6 `import * as`\n * syntax. You may also pass a single function.\n *\n * @param {Function} dispatch The `dispatch` function available on your Redux\n * store.\n *\n * @returns {Function|Object} The object mimicking the original object, but with\n * every action creator wrapped into the `dispatch` call. If you passed a\n * function as `actionCreators`, the return value will also be a single\n * function.\n */\n\n\nfunction bindActionCreators(actionCreators, dispatch) {\n  if (typeof actionCreators === 'function') {\n    return bindActionCreator(actionCreators, dispatch);\n  }\n\n  if (typeof actionCreators !== 'object' || actionCreators === null) {\n    throw new Error(\"bindActionCreators expected an object or a function, instead received \" + (actionCreators === null ? 'null' : typeof actionCreators) + \". \" + \"Did you write \\\"import ActionCreators from\\\" instead of \\\"import * as ActionCreators from\\\"?\");\n  }\n\n  var boundActionCreators = {};\n\n  for (var key in actionCreators) {\n    var actionCreator = actionCreators[key];\n\n    if (typeof actionCreator === 'function') {\n      boundActionCreators[key] = bindActionCreator(actionCreator, dispatch);\n    }\n  }\n\n  return boundActionCreators;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    keys.push.apply(keys, Object.getOwnPropertySymbols(object));\n  }\n\n  if (enumerableOnly) keys = keys.filter(function (sym) {\n    return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n  });\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(source, true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(source).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\n/**\n * Composes single-argument functions from right to left. The rightmost\n * function can take multiple arguments as it provides the signature for\n * the resulting composite function.\n *\n * @param {...Function} funcs The functions to compose.\n * @returns {Function} A function obtained by composing the argument functions\n * from right to left. For example, compose(f, g, h) is identical to doing\n * (...args) => f(g(h(...args))).\n */\nfunction compose() {\n  for (var _len = arguments.length, funcs = new Array(_len), _key = 0; _key < _len; _key++) {\n    funcs[_key] = arguments[_key];\n  }\n\n  if (funcs.length === 0) {\n    return function (arg) {\n      return arg;\n    };\n  }\n\n  if (funcs.length === 1) {\n    return funcs[0];\n  }\n\n  return funcs.reduce(function (a, b) {\n    return function () {\n      return a(b.apply(void 0, arguments));\n    };\n  });\n}\n\n/**\n * Creates a store enhancer that applies middleware to the dispatch method\n * of the Redux store. This is handy for a variety of tasks, such as expressing\n * asynchronous actions in a concise manner, or logging every action payload.\n *\n * See `redux-thunk` package as an example of the Redux middleware.\n *\n * Because middleware is potentially asynchronous, this should be the first\n * store enhancer in the composition chain.\n *\n * Note that each middleware will be given the `dispatch` and `getState` functions\n * as named arguments.\n *\n * @param {...Function} middlewares The middleware chain to be applied.\n * @returns {Function} A store enhancer applying the middleware.\n */\n\nfunction applyMiddleware() {\n  for (var _len = arguments.length, middlewares = new Array(_len), _key = 0; _key < _len; _key++) {\n    middlewares[_key] = arguments[_key];\n  }\n\n  return function (createStore) {\n    return function () {\n      var store = createStore.apply(void 0, arguments);\n\n      var _dispatch = function dispatch() {\n        throw new Error('Dispatching while constructing your middleware is not allowed. ' + 'Other middleware would not be applied to this dispatch.');\n      };\n\n      var middlewareAPI = {\n        getState: store.getState,\n        dispatch: function dispatch() {\n          return _dispatch.apply(void 0, arguments);\n        }\n      };\n      var chain = middlewares.map(function (middleware) {\n        return middleware(middlewareAPI);\n      });\n      _dispatch = compose.apply(void 0, chain)(store.dispatch);\n      return _objectSpread2({}, store, {\n        dispatch: _dispatch\n      });\n    };\n  };\n}\n\n/*\n * This is a dummy function to check if the function name has been altered by minification.\n * If the function has been minified and NODE_ENV !== 'production', warn the user.\n */\n\nfunction isCrushed() {}\n\nif (process.env.NODE_ENV !== 'production' && typeof isCrushed.name === 'string' && isCrushed.name !== 'isCrushed') {\n  warning('You are currently using minified code outside of NODE_ENV === \"production\". ' + 'This means that you are running a slower development build of Redux. ' + 'You can use loose-envify (https://github.com/zertosh/loose-envify) for browserify ' + 'or setting mode to production in webpack (https://webpack.js.org/concepts/mode/) ' + 'to ensure you have the correct code for your production build.');\n}\n\nexport { ActionTypes as __DO_NOT_USE__ActionTypes, applyMiddleware, bindActionCreators, combineReducers, compose, createStore };\n","import { createStore } from 'redux'\nimport { POSITION_CHANGED, GAME_CHANGED, PLAYER_MADE_MOVE, HIDE_PGN_CHANGED, \n    AUTOPLAY_CHANGED, HINT_CLICKED, BOARD_FLIPPED } \n    from '../actions/game-actions'\nimport {findNext, parsepgn} from '../utils/pgnutils'\nimport { gamemap } from '../games'\n\nlet initialStatePractice = {\n    currentRoot: null,\n    current: null,\n    engineColor: 'white',\n    hidePGN: false,\n    autoPlay: false,\n    hint: false\n}\nlet emptyTree = parsepgn(`[White \"me\"]\n[Black \"you\"]\n1. e4 e5 2. Nf3 Nc6 3. Bc4 Bc5 \n(3. ...Nf6 {is the two knights}) \n4. b4 Bxb4 5. c3 Ba5 6. d4 exd4 7. O-O Nge7 $1 *`)\n\nlet initialStateEdit = {\n    currentRoot: emptyTree,\n    current: emptyTree,\n    engineColor: 'black',\n    hidePGN: false,\n    autoPlay: false,\n    hint: false\n}\n\nconst practiceReducer = (state=initialStatePractice, action) => {\n    return reducer(state, action)\n}\n\nconst editReducer = (state=initialStateEdit, action) => {\n    return reducer(state, action)\n}\n\nconst reducer = (state, action) => {\n    switch (action.type) {\n        case POSITION_CHANGED: return { ...state, hint: false, current: action.node }\n        case GAME_CHANGED: return {\n            ...state,\n            currentRoot: action.root,\n            current: action.root,\n            engineColor: action.engineColor,\n            hint: false\n        }\n        case PLAYER_MADE_MOVE:\n            return { ...state, current: action.newCurrent }\n\n        case HIDE_PGN_CHANGED: return { ...state, hidePGN: action.checked }\n\n        case AUTOPLAY_CHANGED: return { ...state, autoPlay: action.checked }\n\n        case HINT_CLICKED: return { ...state, hint: true }\n\n        case BOARD_FLIPPED: return {...state, engineColor: action.checked? 'white' : 'black'}\n\n        default: return state\n    }\n}\n\nexport const practiceStore = createStore(practiceReducer)\n\nexport const editStore = createStore(editReducer)\n\nlet currentState = initialStateEdit\neditStore.subscribe(() => {\n    let state = editStore.getState()\n    console.log(currentState, state)\n    currentState = state\n})\n\n\n\n\n\n","\n/*\n Uses CSS styles: \n\nmove div has classes: 'pgnelement', 'move', 'level0', level1, ...\n                        played or unplayed, and possibly currentmove\ncomment div has classes:  pgnelement', 'comment', 'level0', level1, ...\n\nvariation div has classes: 'pgnelement', 'variation', 'level0', level1,...\n\n*/\n\nimport { allChildrenPlayed } from './pgnutils'\n\nexport const displayFormattedPgn = (pgndiv, root, current, hidePGN, setCurrent) => {\n    pgndiv.innerHTML = ''\n    if (!hidePGN) {\n        // console.log('displayFormattedPGN:', \"Current:\" + current.san)\n        appendElements(root, pgndiv, 0, current, true, setCurrent);\n        if (current) {\n            let currentDiv = document.getElementById(nodeId(current))\n            // console.log('displayFormattedPGN:', currentDiv.offsetTop)\n            pgndiv.scrollTop = currentDiv.offsetTop \n            // currentDiv.scrollIntoView(false, {block:\"nearest\"})\n\n        }\n    }\n}\n\nfunction appendElements(node, parentElem, varDepth, current, writeNode, setCurrent) {\n    let isCurrent = (node === current)\n    if (writeNode) {\n        parentElem.appendChild(makeNodeDiv(node, varDepth, isCurrent, setCurrent))\n    }\n    if (node.children.length > 1) {\n        parentElem.appendChild(makeNodeDiv(node.children[0], varDepth, node.children[0] === current, setCurrent))\n        for (var i = 1; i < node.children.length; i++) {\n            let varDiv = makeVarDiv(varDepth)\n            parentElem.appendChild(varDiv)\n            let child = node.children[i]\n            addTextChild(varDiv, '(')\n            appendElements(child, varDiv, varDepth + 1, current, true, setCurrent)\n            addTextChild(varDiv, ')')\n        }\n        appendElements(node.children[0], parentElem, varDepth, current, false, setCurrent)\n    } else if (node.children.length > 0) {\n        appendElements(node.children[0], parentElem, varDepth, current, true, setCurrent)\n    }\n    \n}\n\nfunction makeNodeDiv(node, varDepth, isCurrent, setCurrent) {\n    let div = document.createElement(\"div\")\n    div.id = nodeId(node)\n    div.classList.add('pgnelement', 'move', 'level' + varDepth)\n\n    if (node.san) {\n        if (isCurrent) {\n            div.classList.add('currentmove')\n        }\n        if (allChildrenPlayed(node)) {\n            div.classList.add('played')\n        } else {\n            div.classList.add('unplayed')\n        }\n        if (node.color == 'w') {\n            div.appendChild(document.createTextNode(node.move_number + \".\"))\n        } else if (firstInVariation(node) ||\n                    firstAfterVariation(node)) {\n            div.appendChild(document.createTextNode(node.move_number + \"...\"))\n        }\n        div.appendChild(document.createTextNode(node.san))\n        if (node.comment) {\n            let cdiv = addTextChild(div, ['{', node.comment, '}'].join(' '))\n            cdiv.classList.add('pgnelement', 'comment', 'level' + varDepth)\n        }\n    }\n    div.onclick = function (ev) {\n        setCurrent(node)\n    }\n    return div\n\n}\n\nfunction addTextChild(parentDiv, text) {\n    let cdiv = document.createElement(\"div\")\n    cdiv.appendChild(document.createTextNode(text))\n    parentDiv.appendChild(cdiv)\n    return cdiv\n}\n\nfunction makeVarDiv(varDepth) {\n    let div = document.createElement(\"div\")\n    div.classList.add('pgnelement', 'variation', 'level' + varDepth)\n    return div\n}\n\nfunction firstInVariation(node) {\n    return (node.parent && node.parent.children.length > 1 &&\n        node != node.parent.children[0])\n}\n\nfunction firstAfterVariation(node) {\n    return (node.parent.parent && node.parent.parent.children.length > 1 &&\n        node.parent == node.parent.parent.children[0] && \n        node == node.parent.children[0])\n}\n\nfunction nodeId(node) {\n    let id = \"\";\n    while (node.parent) {\n        id += node.parent.children.indexOf(node)\n        node = node.parent\n    }\n    return id ? id : 'ROOT'\n}\n\nlet pgnBuffer\n\nexport const getPGNText = (root) => {\n    pgnBuffer = \"\"\n    writePGN(root.children[0], \"\", true, \"  \")\n    return pgnBuffer\n}\n\nconst writePGN = (node, currentIndent, writeNodeFirst, indent) => {\n    if (writeNodeFirst) {\n        writeNode(node)\n    }\n    if (node.children.length > 1) {\n        writeNode(node.children[0])\n        for (var i = 1; i < node.children.length; i++) {\n            pgnBuffer += ('\\n' + currentIndent + ' (')\n            writePGN(node.children[i], currentIndent + indent, true, indent)\n            pgnBuffer += ('\\n' + currentIndent + ') ')\n        }\n        writePGN(node.children[0], currentIndent, false, indent)\n    } else if (node.children.length > 0) {\n        writePGN(node.children[0], currentIndent, true, indent)\n    }\n}\n\nconst writeNode = (node) => {\n    if (node.color == 'w') {\n        pgnBuffer += (node.move_number + \".\")\n    } else if (firstInVariation(node) ||\n                firstAfterVariation(node)) {\n        pgnBuffer += (node.move_number + \"...\")\n    }\n    pgnBuffer += (node.san + ' ')\n    if (node.comment) {\n        pgnBuffer += [' {', node.comment, '} '].join(' ')\n    }\n}","import { parsepgn } from '../utils/pgnutils'\nimport { gamemap } from '../games'\nimport { gameChangedAction, autoPlayChangedAction, hidePgnChangedAction, hintClickedAction } from '../actions/game-actions'\nimport { configureButton, copyToClipboard } from '../utils/documentutils'\nimport { practiceStore as store } from '../store'\nimport { getPGNText } from '../utils/showpgn'\n\nexport const init = (selectDivId) => {\n    configureSelect(selectDivId, store)\n    configureButtons(store)\n}\n\n\nfunction configureSelect(divId) {\n\n    let seldiv = document.getElementById(divId)\n    let sel = document.createElement(\"select\")\n\n\n    for (let key in gamemap) {\n        let option = document.createElement(\"option\");\n        option.value = key;\n        option.text = key;\n        sel.appendChild(option);\n    }\n    seldiv.appendChild(sel)\n    sel.addEventListener(\"change\", event => onSelect(event))\n\n}\n\nfunction onSelect(event) {\n    console.log('onSelect')\n    let pgn = gamemap[event.target.value]\n    let file = '/games/' + pgn['pgn']\n    console.log(file)\n    fetch(file)\n        .then((response) => {\n            console.log(\"Response is:\")\n            console.log(response)\n            return response.text();\n        })\n        .then((text) => {\n            console.log(text);\n            let root = parsepgn(text)\n            store.dispatch(gameChangedAction(root, pgn['engineColor']))\n        })\n\n}\n\nfunction configureButtons() {\n    configureButton('play', () => { console.log('Play') })\n    configureButton('hint', event => store.dispatch(hintClickedAction()))\n    configureButton('autoplay', event => store.dispatch(autoPlayChangedAction(event.target.checked)))\n    configureButton('hidepgn', event => store.dispatch(hidePgnChangedAction(event.target.checked)))\n    configureButton('copy', event => {\n        let { currentRoot } = store.getState()\n        let text = getPGNText(currentRoot)\n        copyToClipboard(text)\n\n    })\n}\n\nexport default { init }","\nimport { displayFormattedPgn } from '../utils/showpgn'\nimport { positionChangedAction } from '../actions/game-actions'\n\nexport const init = (divId, store) => {\n\n    const onClick = (node) => {\n        store.dispatch(positionChangedAction(node))\n    }\n\n    store.subscribe(() => {\n        let {currentRoot, current, hidePGN} = store.getState()\n        let pgnDiv = document.getElementById(divId)\n        displayFormattedPgn(pgnDiv, currentRoot, current, hidePGN, onClick)\n        \n    })\n}\n\nexport default {init}\n","\nexport const init = (divId, store) => {\n\n    store.subscribe(() => {\n        let { current } = store.getState()\n\n        let fendiv = document.getElementById(divId)\n        fendiv.innerHTML = ''\n        fendiv.appendChild(document.createTextNode(current.fen))\n    })\n}\n\nexport default { init }","\nexport const isEngineMove = (current, engineColor)  => {\n    return current && \n        ((current.color === 'w' && engineColor === 'black') ||\n        (current.color === 'b' && engineColor === 'white'));\n}","import Board from '../components/chessboard'\nimport PControls from '../components/practice-controls'\nimport PGNView from '../components/pgnviewer'\nimport Fen from '../components/fen'\n\nimport { practiceStore as store } from '../store'\nimport { isEngineMove as isEnginesTurn } from '../utils/gameutils'\nimport { positionChangedAction } from '../actions/game-actions'\nimport { findNext, updatePlayedStatus } from '../utils/pgnutils'\n\nconst computeNewPosition = (orig, dest) => {\n    let { current, engineColor, autoPlay } = store.getState()\n    let next = findNext(current, orig, dest)\n    if (next) {\n        current = next\n    }\n    return current\n}\n\nlet localCurrent = null\nconst triggerEngineMove = () => {\n    let { currentRoot, current, engineColor, autoPlay } = store.getState()\n    // exit if the game is over\n    if (current.children.length === 0) {\n        console.log(\"End of variation\")\n        updatePlayedStatus(current)\n        window.setTimeout(() => {\n            store.dispatch(positionChangedAction(currentRoot))\n        }, 2000)\n        return\n    }\n    if (localCurrent !== current && autoPlay && isEnginesTurn(current, engineColor)) {\n        window.setTimeout(makeNextMove, 500);\n    }\n    localCurrent = current\n}\n\nconst makeNextMove = function () {\n    let { currentRoot, current, engineColor } = store.getState()\n\n    var possibleMoves = current.children\n\n    if (possibleMoves.length === 0) {\n        return\n    }\n\n    let move;\n    let idx = 0;\n    while (idx < possibleMoves.length) {\n        if (!current.played.has(possibleMoves[idx])) {\n            move = possibleMoves[idx]\n            break\n        }\n        idx++\n    }\n    if (!move) {\n        console.log(\"Choosing random move\")\n        let randomIdx = Math.floor(Math.random() * possibleMoves.length)\n        move = possibleMoves[randomIdx]\n    }\n\n    var from = move.from;\n    var to = move.to;\n\n    console.log('' + from + ':' + to);\n    current = move\n    store.dispatch(positionChangedAction(current))\n\n};\n\nPControls.init('game-select')\nPGNView.init('pgndisplay', store)\nFen.init('fen', store)\nBoard.init('dirty', computeNewPosition, store)\n\nstore.subscribe(() => {\n    triggerEngineMove()\n})\n\n\n"]}